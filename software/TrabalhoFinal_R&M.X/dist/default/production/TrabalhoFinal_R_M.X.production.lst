

Microchip MPLAB XC8 Assembler V2.35 build 20211206165544 
                                                                                               Fri Mar 04 17:06:43 2022

Microchip MPLAB XC8 C Compiler v2.35 (Free license) build 20211206165544 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text14,local,class=CODE,merge=1,delta=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2
    32                           	psect	text20,local,class=CODE,merge=1,delta=2
    33                           	psect	text21,local,class=CODE,merge=1,delta=2
    34                           	psect	text22,local,class=CODE,merge=1,delta=2
    35                           	psect	text23,local,class=CODE,merge=1,delta=2
    36                           	psect	intentry,global,class=CODE,delta=2
    37                           	psect	text24,local,class=CODE,merge=1,delta=2
    38                           	psect	text25,local,class=CODE,merge=1,delta=2
    39                           	dabs	1,0x7E,2
    40  0000                     
    41                           ; Version 2.20
    42                           ; Generated 12/02/2020 GMT
    43                           ; 
    44                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    45                           ; All rights reserved.
    46                           ; 
    47                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    48                           ; 
    49                           ; Redistribution and use in source and binary forms, with or without modification, are
    50                           ; permitted provided that the following conditions are met:
    51                           ; 
    52                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    53                           ;        conditions and the following disclaimer.
    54                           ; 
    55                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    56                           ;        of conditions and the following disclaimer in the documentation and/or other
    57                           ;        materials provided with the distribution.
    58                           ; 
    59                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    60                           ;        software without specific prior written permission.
    61                           ; 
    62                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    63                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    64                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    65                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    66                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    67                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    68                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    69                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    70                           ; 
    71                           ; 
    72                           ; Code-generator required, PIC16F877A Definitions
    73                           ; 
    74                           ; SFR Addresses
    75  0000                     	;# 
    76  0001                     	;# 
    77  0002                     	;# 
    78  0003                     	;# 
    79  0004                     	;# 
    80  0005                     	;# 
    81  0006                     	;# 
    82  0007                     	;# 
    83  0008                     	;# 
    84  0009                     	;# 
    85  000A                     	;# 
    86  000B                     	;# 
    87  000C                     	;# 
    88  000D                     	;# 
    89  000E                     	;# 
    90  000E                     	;# 
    91  000F                     	;# 
    92  0010                     	;# 
    93  0011                     	;# 
    94  0012                     	;# 
    95  0013                     	;# 
    96  0014                     	;# 
    97  0015                     	;# 
    98  0015                     	;# 
    99  0016                     	;# 
   100  0017                     	;# 
   101  0018                     	;# 
   102  0019                     	;# 
   103  001A                     	;# 
   104  001B                     	;# 
   105  001B                     	;# 
   106  001C                     	;# 
   107  001D                     	;# 
   108  001E                     	;# 
   109  001F                     	;# 
   110  0081                     	;# 
   111  0085                     	;# 
   112  0086                     	;# 
   113  0087                     	;# 
   114  0088                     	;# 
   115  0089                     	;# 
   116  008C                     	;# 
   117  008D                     	;# 
   118  008E                     	;# 
   119  0091                     	;# 
   120  0092                     	;# 
   121  0093                     	;# 
   122  0094                     	;# 
   123  0098                     	;# 
   124  0099                     	;# 
   125  009C                     	;# 
   126  009D                     	;# 
   127  009E                     	;# 
   128  009F                     	;# 
   129  010C                     	;# 
   130  010D                     	;# 
   131  010E                     	;# 
   132  010F                     	;# 
   133  018C                     	;# 
   134  018D                     	;# 
   135  0000                     	;# 
   136  0001                     	;# 
   137  0002                     	;# 
   138  0003                     	;# 
   139  0004                     	;# 
   140  0005                     	;# 
   141  0006                     	;# 
   142  0007                     	;# 
   143  0008                     	;# 
   144  0009                     	;# 
   145  000A                     	;# 
   146  000B                     	;# 
   147  000C                     	;# 
   148  000D                     	;# 
   149  000E                     	;# 
   150  000E                     	;# 
   151  000F                     	;# 
   152  0010                     	;# 
   153  0011                     	;# 
   154  0012                     	;# 
   155  0013                     	;# 
   156  0014                     	;# 
   157  0015                     	;# 
   158  0015                     	;# 
   159  0016                     	;# 
   160  0017                     	;# 
   161  0018                     	;# 
   162  0019                     	;# 
   163  001A                     	;# 
   164  001B                     	;# 
   165  001B                     	;# 
   166  001C                     	;# 
   167  001D                     	;# 
   168  001E                     	;# 
   169  001F                     	;# 
   170  0081                     	;# 
   171  0085                     	;# 
   172  0086                     	;# 
   173  0087                     	;# 
   174  0088                     	;# 
   175  0089                     	;# 
   176  008C                     	;# 
   177  008D                     	;# 
   178  008E                     	;# 
   179  0091                     	;# 
   180  0092                     	;# 
   181  0093                     	;# 
   182  0094                     	;# 
   183  0098                     	;# 
   184  0099                     	;# 
   185  009C                     	;# 
   186  009D                     	;# 
   187  009E                     	;# 
   188  009F                     	;# 
   189  010C                     	;# 
   190  010D                     	;# 
   191  010E                     	;# 
   192  010F                     	;# 
   193  018C                     	;# 
   194  018D                     	;# 
   195                           
   196                           	psect	idataBANK0
   197  0536                     __pidataBANK0:
   198                           
   199                           ;initializer for _MLxMS
   200  0536  3419               	retlw	25
   201  0537  3400               	retlw	0
   202                           
   203                           ;initializer for _umidade_minima
   204  0538  340A               	retlw	10
   205  0539  3400               	retlw	0
   206                           
   207                           ;initializer for _timer_counter_max
   208  053A  340A               	retlw	10
   209  053B  3400               	retlw	0
   210  0006                     _PORTB	set	6
   211  0008                     _PORTD	set	8
   212  001F                     _ADCON0bits	set	31
   213  000C                     _PIR1bits	set	12
   214  0006                     _PORTBbits	set	6
   215  000E                     _TMR1L	set	14
   216  000F                     _TMR1H	set	15
   217  0010                     _T1CONbits	set	16
   218  000B                     _INTCONbits	set	11
   219  001E                     _ADRESH	set	30
   220  0059                     _INTF	set	89
   221  0060                     _TMR1IF	set	96
   222  0043                     _RD3	set	67
   223  0042                     _RD2	set	66
   224  0047                     _RD7	set	71
   225  0046                     _RD6	set	70
   226  0045                     _RD5	set	69
   227  0044                     _RD4	set	68
   228  0088                     _TRISD	set	136
   229  0086                     _TRISB	set	134
   230  0085                     _TRISA	set	133
   231  009E                     _ADRESL	set	158
   232  009F                     _ADCON1bits	set	159
   233  0081                     _OPTION_REGbits	set	129
   234  008C                     _PIE1bits	set	140
   235                           
   236                           	psect	strings
   237  0474                     __pstrings:
   238  0474                     stringtab:
   239  0474                     __stringtab:
   240  0474                     stringcode:	
   241                           ;	String table - string pointers are 1 byte each
   242                           
   243  0474                     stringdir:
   244  0474  3004               	movlw	high stringdir
   245  0475  008A               	movwf	10
   246  0476  0804               	movf	4,w
   247  0477  0A84               	incf	4,f
   248  0478  0782               	addwf	2,f
   249  0479                     __stringbase:
   250  0479  3400               	retlw	0
   251  047A                     __end_of__stringtab:
   252  047A                     STR_2:
   253  047A  344D               	retlw	77	;'M'
   254  047B  3455               	retlw	85	;'U'
   255  047C  344E               	retlw	78	;'N'
   256  047D  3444               	retlw	68	;'D'
   257  047E  344F               	retlw	79	;'O'
   258  047F  3420               	retlw	32	;' '
   259  0480  3444               	retlw	68	;'D'
   260  0481  344F               	retlw	79	;'O'
   261  0482  3449               	retlw	73	;'I'
   262  0483  3444               	retlw	68	;'D'
   263  0484  344F               	retlw	79	;'O'
   264  0485  3400               	retlw	0
   265  0486                     STR_1:
   266  0486  344F               	retlw	79	;'O'
   267  0487  344C               	retlw	76	;'L'
   268  0488  3441               	retlw	65	;'A'
   269  0489  3420               	retlw	32	;' '
   270  048A  344D               	retlw	77	;'M'
   271  048B  3455               	retlw	85	;'U'
   272  048C  344E               	retlw	78	;'N'
   273  048D  3444               	retlw	68	;'D'
   274  048E  344F               	retlw	79	;'O'
   275  048F  3400               	retlw	0
   276                           
   277                           	psect	cinit
   278  000F                     start_initialization:	
   279                           ; #config settings
   280                           
   281  000F                     __initialization:
   282                           
   283                           ; Initialize objects allocated to BANK0
   284  000F  120A  118A  2536  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   285  0014  00C2               	movwf	__pdataBANK0& (0+127)
   286  0015  120A  118A  2537  120A  118A  	fcall	__pidataBANK0+1	;fetch initializer
   287  001A  00C3               	movwf	(__pdataBANK0+1)& (0+127)
   288  001B  120A  118A  2538  120A  118A  	fcall	__pidataBANK0+2	;fetch initializer
   289  0020  00C4               	movwf	(__pdataBANK0+2)& (0+127)
   290  0021  120A  118A  2539  120A  118A  	fcall	__pidataBANK0+3	;fetch initializer
   291  0026  00C5               	movwf	(__pdataBANK0+3)& (0+127)
   292  0027  120A  118A  253A  120A  118A  	fcall	__pidataBANK0+4	;fetch initializer
   293  002C  00C6               	movwf	(__pdataBANK0+4)& (0+127)
   294  002D  120A  118A  253B  120A  118A  	fcall	__pidataBANK0+5	;fetch initializer
   295  0032  00C7               	movwf	(__pdataBANK0+5)& (0+127)
   296                           
   297                           ; Clear objects allocated to BANK0
   298  0033  01C8               	clrf	__pbssBANK0& (0+127)
   299  0034  01C9               	clrf	(__pbssBANK0+1)& (0+127)
   300                           
   301                           ; Clear objects allocated to COMMON
   302  0035  01F9               	clrf	__pbssCOMMON& (0+127)
   303  0036  01FA               	clrf	(__pbssCOMMON+1)& (0+127)
   304  0037                     end_of_initialization:	
   305                           ;End of C runtime variable initialization code
   306                           
   307  0037                     __end_of__initialization:
   308  0037  0183               	clrf	3
   309  0038  120A  118A  2973   	ljmp	_main	;jump to C main() function
   310                           
   311                           	psect	bssCOMMON
   312  0079                     __pbssCOMMON:
   313  0079                     _irrigacao_ativa:
   314  0079                     	ds	2
   315                           
   316                           	psect	bssBANK0
   317  0048                     __pbssBANK0:
   318  0048                     _timer_counter:
   319  0048                     	ds	2
   320                           
   321                           	psect	dataBANK0
   322  0042                     __pdataBANK0:
   323  0042                     _MLxMS:
   324  0042                     	ds	2
   325  0044                     _umidade_minima:
   326  0044                     	ds	2
   327  0046                     _timer_counter_max:
   328  0046                     	ds	2
   329                           
   330                           	psect	cstackCOMMON
   331  0070                     __pcstackCOMMON:
   332  0070                     ?_Lcd_Port:
   333  0070                     ?_Lcd_Cmd:	
   334                           ; 1 bytes @ 0x0
   335                           
   336  0070                     ?_Lcd_Clear:	
   337                           ; 1 bytes @ 0x0
   338                           
   339  0070                     ?_Lcd_Init:	
   340                           ; 1 bytes @ 0x0
   341                           
   342  0070                     ?_Lcd_Write_Char:	
   343                           ; 1 bytes @ 0x0
   344                           
   345  0070                     ?_Lcd_Write_String:	
   346                           ; 1 bytes @ 0x0
   347                           
   348  0070                     ?_setupTimer:	
   349                           ; 1 bytes @ 0x0
   350                           
   351  0070                     ?_handleTimerInterruption:	
   352                           ; 1 bytes @ 0x0
   353                           
   354  0070                     ??_handleTimerInterruption:	
   355                           ; 1 bytes @ 0x0
   356                           
   357  0070                     ?_irrigar:	
   358                           ; 1 bytes @ 0x0
   359                           
   360  0070                     ?_handleExternalInterruption:	
   361                           ; 1 bytes @ 0x0
   362                           
   363  0070                     ??_handleExternalInterruption:	
   364                           ; 1 bytes @ 0x0
   365                           
   366  0070                     ?_interrupcao:	
   367                           ; 1 bytes @ 0x0
   368                           
   369  0070                     ?_setupExternalInterruption:	
   370                           ; 1 bytes @ 0x0
   371                           
   372  0070                     ?_handleMenu:	
   373                           ; 1 bytes @ 0x0
   374                           
   375  0070                     ?_verifyMenu:	
   376                           ; 1 bytes @ 0x0
   377                           
   378  0070                     ?_verifySensor:	
   379                           ; 1 bytes @ 0x0
   380                           
   381  0070                     ?_setupWatchdogTimer:	
   382                           ; 1 bytes @ 0x0
   383                           
   384  0070                     ?_setupADC:	
   385                           ; 1 bytes @ 0x0
   386                           
   387  0070                     ?_main:	
   388                           ; 1 bytes @ 0x0
   389                           
   390                           
   391                           ; 1 bytes @ 0x0
   392  0070                     	ds	1
   393  0071                     ??_interrupcao:
   394                           
   395                           ; 1 bytes @ 0x1
   396  0071                     	ds	2
   397  0073                     ??_Lcd_Port:
   398  0073                     ??_irrigar:	
   399                           ; 1 bytes @ 0x3
   400                           
   401  0073                     ??_setupExternalInterruption:	
   402                           ; 1 bytes @ 0x3
   403                           
   404  0073                     ??_handleMenu:	
   405                           ; 1 bytes @ 0x3
   406                           
   407  0073                     ??_verifyMenu:	
   408                           ; 1 bytes @ 0x3
   409                           
   410  0073                     ??_setupWatchdogTimer:	
   411                           ; 1 bytes @ 0x3
   412                           
   413  0073                     ??_setupADC:	
   414                           ; 1 bytes @ 0x3
   415                           
   416  0073                     ?___wmul:	
   417                           ; 1 bytes @ 0x3
   418                           
   419  0073                     ?___fltol:	
   420                           ; 2 bytes @ 0x3
   421                           
   422  0073                     Lcd_Port@a:	
   423                           ; 4 bytes @ 0x3
   424                           
   425  0073                     ___wmul@multiplier:	
   426                           ; 1 bytes @ 0x3
   427                           
   428  0073                     ___fltol@f1:	
   429                           ; 2 bytes @ 0x3
   430                           
   431                           
   432                           ; 4 bytes @ 0x3
   433  0073                     	ds	1
   434  0074                     ??_Lcd_Cmd:
   435  0074                     ??_Lcd_Write_Char:	
   436                           ; 1 bytes @ 0x4
   437                           
   438                           
   439                           ; 1 bytes @ 0x4
   440  0074                     	ds	1
   441  0075                     Lcd_Write_Char@temp:
   442  0075                     ___wmul@multiplicand:	
   443                           ; 1 bytes @ 0x5
   444                           
   445                           
   446                           ; 2 bytes @ 0x5
   447  0075                     	ds	1
   448  0076                     Lcd_Cmd@a:
   449  0076                     Lcd_Write_Char@y:	
   450                           ; 1 bytes @ 0x6
   451                           
   452                           
   453                           ; 1 bytes @ 0x6
   454  0076                     	ds	1
   455  0077                     ??_Lcd_Clear:
   456  0077                     ?_Lcd_Set_Cursor:	
   457                           ; 1 bytes @ 0x7
   458                           
   459  0077                     ??_Lcd_Init:	
   460                           ; 1 bytes @ 0x7
   461                           
   462  0077                     ??___wmul:	
   463                           ; 1 bytes @ 0x7
   464                           
   465  0077                     Lcd_Set_Cursor@b:	
   466                           ; 1 bytes @ 0x7
   467                           
   468  0077                     Lcd_Write_Char@a:	
   469                           ; 1 bytes @ 0x7
   470                           
   471  0077                     ___fltol@sign1:	
   472                           ; 1 bytes @ 0x7
   473                           
   474  0077                     ___wmul@product:	
   475                           ; 1 bytes @ 0x7
   476                           
   477                           
   478                           ; 2 bytes @ 0x7
   479  0077                     	ds	1
   480  0078                     ??_Lcd_Write_String:
   481  0078                     ___fltol@exp1:	
   482                           ; 1 bytes @ 0x8
   483                           
   484                           
   485                           ; 1 bytes @ 0x8
   486  0078                     	ds	1
   487  0079                     ??_changeTimerMaxConter:
   488  0079                     ??_setupNewVolumeFlow:	
   489                           ; 1 bytes @ 0x9
   490                           
   491  0079                     ??_setupTimer:	
   492                           ; 1 bytes @ 0x9
   493                           
   494  0079                     ??_verifySensor:	
   495                           ; 1 bytes @ 0x9
   496                           
   497                           
   498                           	psect	cstackBANK0
   499  0020                     __pcstackBANK0:	
   500                           ; 1 bytes @ 0x9
   501                           
   502  0020                     ??_Lcd_Set_Cursor:
   503  0020                     ??___fltol:	
   504                           ; 1 bytes @ 0x0
   505                           
   506  0020                     ?___awdiv:	
   507                           ; 1 bytes @ 0x0
   508                           
   509  0020                     Lcd_Write_String@i:	
   510                           ; 2 bytes @ 0x0
   511                           
   512  0020                     ___awdiv@divisor:	
   513                           ; 2 bytes @ 0x0
   514                           
   515                           
   516                           ; 2 bytes @ 0x0
   517  0020                     	ds	2
   518  0022                     Lcd_Set_Cursor@a:
   519  0022                     Lcd_Write_String@a:	
   520                           ; 1 bytes @ 0x2
   521                           
   522  0022                     ___awdiv@dividend:	
   523                           ; 1 bytes @ 0x2
   524                           
   525                           
   526                           ; 2 bytes @ 0x2
   527  0022                     	ds	1
   528  0023                     Lcd_Set_Cursor@z:
   529                           
   530                           ; 1 bytes @ 0x3
   531  0023                     	ds	1
   532  0024                     ??___awdiv:
   533  0024                     Lcd_Set_Cursor@y:	
   534                           ; 1 bytes @ 0x4
   535                           
   536                           
   537                           ; 1 bytes @ 0x4
   538  0024                     	ds	1
   539  0025                     Lcd_Set_Cursor@temp:
   540  0025                     ___awdiv@counter:	
   541                           ; 1 bytes @ 0x5
   542                           
   543                           
   544                           ; 1 bytes @ 0x5
   545  0025                     	ds	1
   546  0026                     ___awdiv@sign:
   547                           
   548                           ; 1 bytes @ 0x6
   549  0026                     	ds	1
   550  0027                     ___awdiv@quotient:
   551                           
   552                           ; 2 bytes @ 0x7
   553  0027                     	ds	2
   554  0029                     ?_changeTimerMaxConter:
   555  0029                     ?___xxtofl:	
   556                           ; 1 bytes @ 0x9
   557                           
   558  0029                     changeTimerMaxConter@mili_s:	
   559                           ; 4 bytes @ 0x9
   560                           
   561  0029                     ___xxtofl@val:	
   562                           ; 2 bytes @ 0x9
   563                           
   564                           
   565                           ; 4 bytes @ 0x9
   566  0029                     	ds	2
   567  002B                     ?_setupNewVolumeFlow:
   568  002B                     setupNewVolumeFlow@new_ml:	
   569                           ; 1 bytes @ 0xB
   570                           
   571                           
   572                           ; 2 bytes @ 0xB
   573  002B                     	ds	2
   574  002D                     ??___xxtofl:
   575  002D                     setupNewVolumeFlow@new_ms:	
   576                           ; 1 bytes @ 0xD
   577                           
   578                           
   579                           ; 2 bytes @ 0xD
   580  002D                     	ds	4
   581  0031                     ___xxtofl@sign:
   582                           
   583                           ; 1 bytes @ 0x11
   584  0031                     	ds	1
   585  0032                     ___xxtofl@exp:
   586                           
   587                           ; 1 bytes @ 0x12
   588  0032                     	ds	1
   589  0033                     ___xxtofl@arg:
   590                           
   591                           ; 4 bytes @ 0x13
   592  0033                     	ds	4
   593  0037                     ?_getADConverterValue:
   594                           
   595                           ; 2 bytes @ 0x17
   596  0037                     	ds	2
   597  0039                     ??_getADConverterValue:
   598                           
   599                           ; 1 bytes @ 0x19
   600  0039                     	ds	2
   601  003B                     getADConverterValue@leitura:
   602                           
   603                           ; 4 bytes @ 0x1B
   604  003B                     	ds	4
   605  003F                     ??_main:
   606                           
   607                           ; 1 bytes @ 0x1F
   608  003F                     	ds	3
   609                           
   610                           	psect	maintext
   611  0173                     __pmaintext:	
   612 ;;
   613 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   614 ;;
   615 ;; *************** function _main *****************
   616 ;; Defined at:
   617 ;;		line 271 in file "main.c"
   618 ;; Parameters:    Size  Location     Type
   619 ;;		None
   620 ;; Auto vars:     Size  Location     Type
   621 ;;  a               2    0        int 
   622 ;; Return value:  Size  Location     Type
   623 ;;                  1    wreg      void 
   624 ;; Registers used:
   625 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   626 ;; Tracked objects:
   627 ;;		On entry : B00/0
   628 ;;		On exit  : 0/0
   629 ;;		Unchanged: 0/0
   630 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   631 ;;      Params:         0       0       0       0       0
   632 ;;      Locals:         0       0       0       0       0
   633 ;;      Temps:          0       3       0       0       0
   634 ;;      Totals:         0       3       0       0       0
   635 ;;Total ram usage:        3 bytes
   636 ;; Hardware stack levels required when called: 6
   637 ;; This function calls:
   638 ;;		_Lcd_Clear
   639 ;;		_Lcd_Init
   640 ;;		_Lcd_Set_Cursor
   641 ;;		_Lcd_Write_String
   642 ;;		_setupADC
   643 ;;		_setupExternalInterruption
   644 ;;		_setupTimer
   645 ;;		_setupWatchdogTimer
   646 ;;		_verifyMenu
   647 ;;		_verifySensor
   648 ;; This function is called by:
   649 ;;		Startup code after reset
   650 ;; This function uses a non-reentrant model
   651 ;;
   652                           
   653  0173                     _main:	
   654                           ;psect for function _main
   655                           
   656  0173                     l1615:	
   657                           ;incstack = 0
   658                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   659                           
   660                           
   661                           ;main.c: 274:     TRISA = 0b00000001;
   662  0173  3001               	movlw	1
   663  0174  1683               	bsf	3,5	;RP0=1, select bank1
   664  0175  1303               	bcf	3,6	;RP1=0, select bank1
   665  0176  0085               	movwf	5	;volatile
   666                           
   667                           ;main.c: 275:     TRISB = 0b00011101;
   668  0177  301D               	movlw	29
   669  0178  0086               	movwf	6	;volatile
   670  0179                     l1617:
   671                           
   672                           ;main.c: 276:     TRISD = 0b00000000;
   673  0179  0188               	clrf	8	;volatile
   674  017A                     l1619:
   675                           
   676                           ;main.c: 277:     OPTION_REGbits.nRBPU = 0;
   677  017A  1381               	bcf	1,7	;volatile
   678  017B                     l1621:
   679                           
   680                           ;main.c: 278:     PORTB = 0;
   681  017B  1283               	bcf	3,5	;RP0=0, select bank0
   682  017C  1303               	bcf	3,6	;RP1=0, select bank0
   683  017D  0186               	clrf	6	;volatile
   684  017E                     l1623:
   685                           
   686                           ;main.c: 280:     setupExternalInterruption();
   687  017E  120A  118A  253C  120A  118A  	fcall	_setupExternalInterruption
   688  0183                     l1625:
   689                           
   690                           ;main.c: 281:     setupWatchdogTimer();
   691  0183  120A  118A  2543  120A  118A  	fcall	_setupWatchdogTimer
   692  0188                     l1627:
   693                           
   694                           ;main.c: 282:     setupTimer();
   695  0188  120A  118A  24AA  120A  118A  	fcall	_setupTimer
   696                           
   697                           ;main.c: 283:     setupADC();
   698  018D  120A  118A  24C3  120A  118A  	fcall	_setupADC
   699  0192                     l1629:
   700                           
   701                           ;main.c: 284:     Lcd_Init();
   702  0192  120A  118A  224B  120A  118A  	fcall	_Lcd_Init
   703  0197                     l1631:
   704  0197                     l1633:
   705                           
   706                           ;main.c: 287:     {;main.c: 288:         verifySensor();
   707  0197  120A  118A  2410  120A  118A  	fcall	_verifySensor
   708  019C                     l1635:
   709                           
   710                           ;main.c: 289:         verifyMenu();
   711  019C  120A  118A  2522  120A  118A  	fcall	_verifyMenu
   712  01A1                     l1637:
   713                           
   714                           ;main.c: 290:         Lcd_Clear();
   715  01A1  120A  118A  2515  120A  118A  	fcall	_Lcd_Clear
   716  01A6                     l1639:
   717                           
   718                           ;main.c: 291:         Lcd_Set_Cursor(1,1);
   719  01A6  01F7               	clrf	Lcd_Set_Cursor@b
   720  01A7  0AF7               	incf	Lcd_Set_Cursor@b,f
   721  01A8  3001               	movlw	1
   722  01A9  120A  118A  2302  120A  118A  	fcall	_Lcd_Set_Cursor
   723  01AE                     l1641:
   724                           
   725                           ;main.c: 293:         Lcd_Write_String("OLA MUNDO");
   726  01AE  300D               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   727  01AF  120A  118A  23C2  120A  118A  	fcall	_Lcd_Write_String
   728  01B4                     l1643:
   729                           
   730                           ;main.c: 294:         _delay((unsigned long)((1000)*(4000000/4000.0)));
   731  01B4  3006               	movlw	6
   732  01B5  1283               	bcf	3,5	;RP0=0, select bank0
   733  01B6  1303               	bcf	3,6	;RP1=0, select bank0
   734  01B7  00C1               	movwf	??_main+2
   735  01B8  3013               	movlw	19
   736  01B9  00C0               	movwf	??_main+1
   737  01BA  30AD               	movlw	173
   738  01BB  00BF               	movwf	??_main
   739  01BC                     u1307:
   740  01BC  0BBF               	decfsz	??_main,f
   741  01BD  29BC               	goto	u1307
   742  01BE  0BC0               	decfsz	??_main+1,f
   743  01BF  29BC               	goto	u1307
   744  01C0  0BC1               	decfsz	??_main+2,f
   745  01C1  29BC               	goto	u1307
   746  01C2                     l1645:
   747                           
   748                           ;main.c: 296:         Lcd_Set_Cursor(2,1);
   749  01C2  01F7               	clrf	Lcd_Set_Cursor@b
   750  01C3  0AF7               	incf	Lcd_Set_Cursor@b,f
   751  01C4  3002               	movlw	2
   752  01C5  120A  118A  2302  120A  118A  	fcall	_Lcd_Set_Cursor
   753  01CA                     l1647:
   754                           
   755                           ;main.c: 297:         Lcd_Write_String("MUNDO DOIDO");
   756  01CA  3001               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   757  01CB  120A  118A  23C2  120A  118A  	fcall	_Lcd_Write_String
   758  01D0                     l1649:
   759                           
   760                           ;main.c: 298:         _delay((unsigned long)((2000)*(4000000/4000.0)));
   761  01D0  300B               	movlw	11
   762  01D1  1283               	bcf	3,5	;RP0=0, select bank0
   763  01D2  1303               	bcf	3,6	;RP1=0, select bank0
   764  01D3  00C1               	movwf	??_main+2
   765  01D4  3026               	movlw	38
   766  01D5  00C0               	movwf	??_main+1
   767  01D6  305D               	movlw	93
   768  01D7  00BF               	movwf	??_main
   769  01D8                     u1317:
   770  01D8  0BBF               	decfsz	??_main,f
   771  01D9  29D8               	goto	u1317
   772  01DA  0BC0               	decfsz	??_main+1,f
   773  01DB  29D8               	goto	u1317
   774  01DC  0BC1               	decfsz	??_main+2,f
   775  01DD  29D8               	goto	u1317
   776  01DE  2997               	goto	l1633
   777  01DF  120A  118A  280C   	ljmp	start
   778  01E2                     __end_of_main:
   779                           
   780                           	psect	text1
   781  0410                     __ptext1:	
   782 ;; *************** function _verifySensor *****************
   783 ;; Defined at:
   784 ;;		line 215 in file "main.c"
   785 ;; Parameters:    Size  Location     Type
   786 ;;		None
   787 ;; Auto vars:     Size  Location     Type
   788 ;;		None
   789 ;; Return value:  Size  Location     Type
   790 ;;                  1    wreg      void 
   791 ;; Registers used:
   792 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   793 ;; Tracked objects:
   794 ;;		On entry : 0/0
   795 ;;		On exit  : 0/0
   796 ;;		Unchanged: 0/0
   797 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   798 ;;      Params:         0       0       0       0       0
   799 ;;      Locals:         0       0       0       0       0
   800 ;;      Temps:          0       0       0       0       0
   801 ;;      Totals:         0       0       0       0       0
   802 ;;Total ram usage:        0 bytes
   803 ;; Hardware stack levels used: 1
   804 ;; Hardware stack levels required when called: 4
   805 ;; This function calls:
   806 ;;		_getADConverterValue
   807 ;;		_irrigar
   808 ;; This function is called by:
   809 ;;		_main
   810 ;; This function uses a non-reentrant model
   811 ;;
   812                           
   813  0410                     _verifySensor:	
   814                           ;psect for function _verifySensor
   815                           
   816  0410                     l1603:	
   817                           ;incstack = 0
   818                           ; Regs used in _verifySensor: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   819                           
   820                           
   821                           ;main.c: 217:     PORTD = getADConverterValue();
   822  0410  120A  118A  22A8  120A  118A  	fcall	_getADConverterValue
   823  0415  1283               	bcf	3,5	;RP0=0, select bank0
   824  0416  1303               	bcf	3,6	;RP1=0, select bank0
   825  0417  0837               	movf	?_getADConverterValue,w
   826  0418  0088               	movwf	8	;volatile
   827  0419                     l1605:
   828                           
   829                           ;main.c: 218:     if(getADConverterValue()<umidade_minima){
   830  0419  120A  118A  22A8  120A  118A  	fcall	_getADConverterValue
   831  041E  1283               	bcf	3,5	;RP0=0, select bank0
   832  041F  1303               	bcf	3,6	;RP1=0, select bank0
   833  0420  0838               	movf	?_getADConverterValue+1,w
   834  0421  3A80               	xorlw	128
   835  0422  00FF               	movwf	btemp+1
   836  0423  3080               	movlw	128
   837  0424  027F               	subwf	btemp+1,w
   838  0425  1D03               	skipz
   839  0426  2C29               	goto	u1295
   840  0427  300A               	movlw	10
   841  0428  0237               	subwf	?_getADConverterValue,w
   842  0429                     u1295:
   843  0429  1803               	skipnc
   844  042A  2C2C               	goto	u1291
   845  042B  2C2D               	goto	u1290
   846  042C                     u1291:
   847  042C  2C32               	goto	l151
   848  042D                     u1290:
   849  042D                     l1607:
   850                           
   851                           ;main.c: 219:         irrigar();
   852  042D  120A  118A  24F0  120A  118A  	fcall	_irrigar
   853  0432                     l151:
   854  0432  0008               	return
   855  0433                     __end_of_verifySensor:
   856                           
   857                           	psect	text2
   858  04F0                     __ptext2:	
   859 ;; *************** function _irrigar *****************
   860 ;; Defined at:
   861 ;;		line 154 in file "main.c"
   862 ;; Parameters:    Size  Location     Type
   863 ;;		None
   864 ;; Auto vars:     Size  Location     Type
   865 ;;		None
   866 ;; Return value:  Size  Location     Type
   867 ;;                  1    wreg      void 
   868 ;; Registers used:
   869 ;;		wreg, status,2, status,0
   870 ;; Tracked objects:
   871 ;;		On entry : 0/0
   872 ;;		On exit  : 0/0
   873 ;;		Unchanged: 0/0
   874 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   875 ;;      Params:         0       0       0       0       0
   876 ;;      Locals:         0       0       0       0       0
   877 ;;      Temps:          0       0       0       0       0
   878 ;;      Totals:         0       0       0       0       0
   879 ;;Total ram usage:        0 bytes
   880 ;; Hardware stack levels used: 1
   881 ;; Hardware stack levels required when called: 2
   882 ;; This function calls:
   883 ;;		Nothing
   884 ;; This function is called by:
   885 ;;		_verifySensor
   886 ;; This function uses a non-reentrant model
   887 ;;
   888                           
   889  04F0                     _irrigar:	
   890                           ;psect for function _irrigar
   891                           
   892  04F0                     l1305:	
   893                           ;incstack = 0
   894                           ; Regs used in _irrigar: [wreg+status,2+status,0]
   895                           
   896                           
   897                           ;main.c: 155:     irrigacao_ativa = 1;
   898  04F0  3001               	movlw	1
   899  04F1  00F9               	movwf	_irrigacao_ativa
   900  04F2  3000               	movlw	0
   901  04F3  00FA               	movwf	_irrigacao_ativa+1
   902  04F4                     l1307:
   903                           
   904                           ;main.c: 156:     timer_counter = 0;
   905  04F4  1283               	bcf	3,5	;RP0=0, select bank0
   906  04F5  1303               	bcf	3,6	;RP1=0, select bank0
   907  04F6  01C8               	clrf	_timer_counter
   908  04F7  01C9               	clrf	_timer_counter+1
   909  04F8                     l1309:
   910                           
   911                           ;main.c: 157:     PORTBbits.RB1 = 1;
   912  04F8  1486               	bsf	6,1	;volatile
   913  04F9                     l1311:
   914                           
   915                           ;main.c: 160:     T1CONbits.TMR1ON = 1;
   916  04F9  1410               	bsf	16,0	;volatile
   917  04FA                     l1313:	
   918                           ;main.c: 163:     while(irrigacao_ativa);
   919                           
   920  04FA  0879               	movf	_irrigacao_ativa,w
   921  04FB  047A               	iorwf	_irrigacao_ativa+1,w
   922  04FC  1D03               	btfss	3,2
   923  04FD  2CFF               	goto	u991
   924  04FE  2D00               	goto	u990
   925  04FF                     u991:
   926  04FF  2CFA               	goto	l1313
   927  0500                     u990:
   928  0500                     l124:
   929                           
   930                           ;main.c: 166:     T1CONbits.TMR1ON = 0;
   931  0500  1283               	bcf	3,5	;RP0=0, select bank0
   932  0501  1303               	bcf	3,6	;RP1=0, select bank0
   933  0502  1010               	bcf	16,0	;volatile
   934  0503                     l125:
   935  0503  0008               	return
   936  0504                     __end_of_irrigar:
   937                           
   938                           	psect	text3
   939  02A8                     __ptext3:	
   940 ;; *************** function _getADConverterValue *****************
   941 ;; Defined at:
   942 ;;		line 209 in file "main.c"
   943 ;; Parameters:    Size  Location     Type
   944 ;;		None
   945 ;; Auto vars:     Size  Location     Type
   946 ;;  leitura         4   27[BANK0 ] float 
   947 ;; Return value:  Size  Location     Type
   948 ;;                  2   23[BANK0 ] int 
   949 ;; Registers used:
   950 ;;		wreg, status,2, status,0, pclath, cstack
   951 ;; Tracked objects:
   952 ;;		On entry : 0/0
   953 ;;		On exit  : 0/0
   954 ;;		Unchanged: 0/0
   955 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   956 ;;      Params:         0       2       0       0       0
   957 ;;      Locals:         0       4       0       0       0
   958 ;;      Temps:          0       2       0       0       0
   959 ;;      Totals:         0       8       0       0       0
   960 ;;Total ram usage:        8 bytes
   961 ;; Hardware stack levels used: 1
   962 ;; Hardware stack levels required when called: 3
   963 ;; This function calls:
   964 ;;		___awdiv
   965 ;;		___fltol
   966 ;;		___wmul
   967 ;;		___xxtofl
   968 ;; This function is called by:
   969 ;;		_verifySensor
   970 ;; This function uses a non-reentrant model
   971 ;;
   972                           
   973  02A8                     _getADConverterValue:	
   974                           ;psect for function _getADConverterValue
   975                           
   976  02A8                     l1543:	
   977                           ;incstack = 0
   978                           ; Regs used in _getADConverterValue: [wreg+status,2+status,0+pclath+cstack]
   979                           
   980                           
   981                           ;main.c: 210:     ADCON0bits.GO = 1;
   982  02A8  1283               	bcf	3,5	;RP0=0, select bank0
   983  02A9  1303               	bcf	3,6	;RP1=0, select bank0
   984  02AA  151F               	bsf	31,2	;volatile
   985  02AB                     l1545:
   986                           
   987                           ;main.c: 211:     _delay((unsigned long)((10)*(4000000/4000000.0)));
   988  02AB  3002               	movlw	2
   989  02AC  1283               	bcf	3,5	;RP0=0, select bank0
   990  02AD  1303               	bcf	3,6	;RP1=0, select bank0
   991  02AE  00B9               	movwf	??_getADConverterValue
   992  02AF                     u1327:
   993  02AF  0BB9               	decfsz	??_getADConverterValue,f
   994  02B0  2AAF               	goto	u1327
   995  02B1  0000               	nop
   996  02B2                     l1547:
   997                           
   998                           ;main.c: 212:     float leitura = 100*ADRESH/256;
   999  02B2  3064               	movlw	100
  1000  02B3  00F5               	movwf	___wmul@multiplicand
  1001  02B4  3000               	movlw	0
  1002  02B5  00F6               	movwf	___wmul@multiplicand+1
  1003  02B6  1283               	bcf	3,5	;RP0=0, select bank0
  1004  02B7  1303               	bcf	3,6	;RP1=0, select bank0
  1005  02B8  081E               	movf	30,w	;volatile
  1006  02B9  00B9               	movwf	??_getADConverterValue
  1007  02BA  01BA               	clrf	??_getADConverterValue+1
  1008  02BB  0839               	movf	??_getADConverterValue,w
  1009  02BC  00F3               	movwf	___wmul@multiplier
  1010  02BD  083A               	movf	??_getADConverterValue+1,w
  1011  02BE  00F4               	movwf	___wmul@multiplier+1
  1012  02BF  120A  118A  23EB  120A  118A  	fcall	___wmul
  1013  02C4  0874               	movf	?___wmul+1,w
  1014  02C5  1283               	bcf	3,5	;RP0=0, select bank0
  1015  02C6  1303               	bcf	3,6	;RP1=0, select bank0
  1016  02C7  00A3               	movwf	___awdiv@dividend+1
  1017  02C8  0873               	movf	?___wmul,w
  1018  02C9  00A2               	movwf	___awdiv@dividend
  1019  02CA  3000               	movlw	0
  1020  02CB  00A0               	movwf	___awdiv@divisor
  1021  02CC  3001               	movlw	1
  1022  02CD  00A1               	movwf	___awdiv@divisor+1
  1023  02CE  120A  118A  21E2  120A  118A  	fcall	___awdiv
  1024  02D3  1283               	bcf	3,5	;RP0=0, select bank0
  1025  02D4  1303               	bcf	3,6	;RP1=0, select bank0
  1026  02D5  0820               	movf	?___awdiv,w
  1027  02D6  00A9               	movwf	___xxtofl@val
  1028  02D7  0821               	movf	?___awdiv+1,w
  1029  02D8  00AA               	movwf	___xxtofl@val+1
  1030  02D9  3000               	movlw	0
  1031  02DA  1BAA               	btfsc	___xxtofl@val+1,7
  1032  02DB  30FF               	movlw	255
  1033  02DC  00AB               	movwf	___xxtofl@val+2
  1034  02DD  00AC               	movwf	___xxtofl@val+3
  1035  02DE  3001               	movlw	1
  1036  02DF  120A  118A  203B  120A  118A  	fcall	___xxtofl
  1037  02E4  1283               	bcf	3,5	;RP0=0, select bank0
  1038  02E5  1303               	bcf	3,6	;RP1=0, select bank0
  1039  02E6  082C               	movf	?___xxtofl+3,w
  1040  02E7  00BE               	movwf	getADConverterValue@leitura+3
  1041  02E8  082B               	movf	?___xxtofl+2,w
  1042  02E9  00BD               	movwf	getADConverterValue@leitura+2
  1043  02EA  082A               	movf	?___xxtofl+1,w
  1044  02EB  00BC               	movwf	getADConverterValue@leitura+1
  1045  02EC  0829               	movf	?___xxtofl,w
  1046  02ED  00BB               	movwf	getADConverterValue@leitura
  1047  02EE                     l1549:
  1048                           
  1049                           ;main.c: 213:     return leitura;
  1050  02EE  083E               	movf	getADConverterValue@leitura+3,w
  1051  02EF  00F6               	movwf	___fltol@f1+3
  1052  02F0  083D               	movf	getADConverterValue@leitura+2,w
  1053  02F1  00F5               	movwf	___fltol@f1+2
  1054  02F2  083C               	movf	getADConverterValue@leitura+1,w
  1055  02F3  00F4               	movwf	___fltol@f1+1
  1056  02F4  083B               	movf	getADConverterValue@leitura,w
  1057  02F5  00F3               	movwf	___fltol@f1
  1058  02F6  120A  118A  20F7  120A  118A  	fcall	___fltol
  1059  02FB  0874               	movf	?___fltol+1,w
  1060  02FC  1283               	bcf	3,5	;RP0=0, select bank0
  1061  02FD  1303               	bcf	3,6	;RP1=0, select bank0
  1062  02FE  00B8               	movwf	?_getADConverterValue+1
  1063  02FF  0873               	movf	?___fltol,w
  1064  0300  00B7               	movwf	?_getADConverterValue
  1065  0301                     l147:
  1066  0301  0008               	return
  1067  0302                     __end_of_getADConverterValue:
  1068                           
  1069                           	psect	text4
  1070  003B                     __ptext4:	
  1071 ;; *************** function ___xxtofl *****************
  1072 ;; Defined at:
  1073 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\xxtofl.c"
  1074 ;; Parameters:    Size  Location     Type
  1075 ;;  sign            1    wreg     unsigned char 
  1076 ;;  val             4    9[BANK0 ] long 
  1077 ;; Auto vars:     Size  Location     Type
  1078 ;;  sign            1   17[BANK0 ] unsigned char 
  1079 ;;  arg             4   19[BANK0 ] unsigned long 
  1080 ;;  exp             1   18[BANK0 ] unsigned char 
  1081 ;; Return value:  Size  Location     Type
  1082 ;;                  4    9[BANK0 ] unsigned char 
  1083 ;; Registers used:
  1084 ;;		wreg, status,2, status,0
  1085 ;; Tracked objects:
  1086 ;;		On entry : 0/0
  1087 ;;		On exit  : 0/0
  1088 ;;		Unchanged: 0/0
  1089 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1090 ;;      Params:         0       4       0       0       0
  1091 ;;      Locals:         0       6       0       0       0
  1092 ;;      Temps:          0       4       0       0       0
  1093 ;;      Totals:         0      14       0       0       0
  1094 ;;Total ram usage:       14 bytes
  1095 ;; Hardware stack levels used: 1
  1096 ;; Hardware stack levels required when called: 2
  1097 ;; This function calls:
  1098 ;;		Nothing
  1099 ;; This function is called by:
  1100 ;;		_getADConverterValue
  1101 ;; This function uses a non-reentrant model
  1102 ;;
  1103                           
  1104  003B                     ___xxtofl:	
  1105                           ;psect for function ___xxtofl
  1106                           
  1107                           
  1108                           ;incstack = 0
  1109                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  1110                           ;___xxtofl@sign stored from wreg
  1111  003B  1283               	bcf	3,5	;RP0=0, select bank0
  1112  003C  1303               	bcf	3,6	;RP1=0, select bank0
  1113  003D  00B1               	movwf	___xxtofl@sign
  1114  003E                     l1227:
  1115  003E  0831               	movf	___xxtofl@sign,w
  1116  003F  1903               	btfsc	3,2
  1117  0040  2842               	goto	u841
  1118  0041  2843               	goto	u840
  1119  0042                     u841:
  1120  0042  2857               	goto	l1233
  1121  0043                     u840:
  1122  0043                     l1229:
  1123  0043  1FAC               	btfss	___xxtofl@val+3,7
  1124  0044  2846               	goto	u851
  1125  0045  2847               	goto	u850
  1126  0046                     u851:
  1127  0046  2857               	goto	l1233
  1128  0047                     u850:
  1129  0047                     l1231:
  1130  0047  0929               	comf	___xxtofl@val,w
  1131  0048  00B3               	movwf	___xxtofl@arg
  1132  0049  092A               	comf	___xxtofl@val+1,w
  1133  004A  00B4               	movwf	___xxtofl@arg+1
  1134  004B  092B               	comf	___xxtofl@val+2,w
  1135  004C  00B5               	movwf	___xxtofl@arg+2
  1136  004D  092C               	comf	___xxtofl@val+3,w
  1137  004E  00B6               	movwf	___xxtofl@arg+3
  1138  004F  0AB3               	incf	___xxtofl@arg,f
  1139  0050  1903               	skipnz
  1140  0051  0AB4               	incf	___xxtofl@arg+1,f
  1141  0052  1903               	skipnz
  1142  0053  0AB5               	incf	___xxtofl@arg+2,f
  1143  0054  1903               	skipnz
  1144  0055  0AB6               	incf	___xxtofl@arg+3,f
  1145  0056  285F               	goto	l684
  1146  0057                     l1233:
  1147  0057  082C               	movf	___xxtofl@val+3,w
  1148  0058  00B6               	movwf	___xxtofl@arg+3
  1149  0059  082B               	movf	___xxtofl@val+2,w
  1150  005A  00B5               	movwf	___xxtofl@arg+2
  1151  005B  082A               	movf	___xxtofl@val+1,w
  1152  005C  00B4               	movwf	___xxtofl@arg+1
  1153  005D  0829               	movf	___xxtofl@val,w
  1154  005E  00B3               	movwf	___xxtofl@arg
  1155  005F                     l684:
  1156  005F  082C               	movf	___xxtofl@val+3,w
  1157  0060  042B               	iorwf	___xxtofl@val+2,w
  1158  0061  042A               	iorwf	___xxtofl@val+1,w
  1159  0062  0429               	iorwf	___xxtofl@val,w
  1160  0063  1D03               	skipz
  1161  0064  2866               	goto	u861
  1162  0065  2867               	goto	u860
  1163  0066                     u861:
  1164  0066  2870               	goto	l1239
  1165  0067                     u860:
  1166  0067                     l1235:
  1167  0067  3000               	movlw	0
  1168  0068  00AC               	movwf	?___xxtofl+3
  1169  0069  3000               	movlw	0
  1170  006A  00AB               	movwf	?___xxtofl+2
  1171  006B  3000               	movlw	0
  1172  006C  00AA               	movwf	?___xxtofl+1
  1173  006D  3000               	movlw	0
  1174  006E  00A9               	movwf	?___xxtofl
  1175  006F  28F6               	goto	l686
  1176  0070                     l1239:
  1177  0070  3096               	movlw	150
  1178  0071  00AD               	movwf	??___xxtofl
  1179  0072  082D               	movf	??___xxtofl,w
  1180  0073  00B2               	movwf	___xxtofl@exp
  1181  0074  2882               	goto	l1243
  1182  0075                     l1241:
  1183  0075  3001               	movlw	1
  1184  0076  00AD               	movwf	??___xxtofl
  1185  0077  082D               	movf	??___xxtofl,w
  1186  0078  07B2               	addwf	___xxtofl@exp,f
  1187  0079  3001               	movlw	1
  1188  007A                     u875:
  1189  007A  1003               	clrc
  1190  007B  0CB6               	rrf	___xxtofl@arg+3,f
  1191  007C  0CB5               	rrf	___xxtofl@arg+2,f
  1192  007D  0CB4               	rrf	___xxtofl@arg+1,f
  1193  007E  0CB3               	rrf	___xxtofl@arg,f
  1194  007F  3EFF               	addlw	-1
  1195  0080  1D03               	skipz
  1196  0081  287A               	goto	u875
  1197  0082                     l1243:
  1198  0082  30FE               	movlw	254
  1199  0083  0536               	andwf	___xxtofl@arg+3,w
  1200  0084  1D03               	btfss	3,2
  1201  0085  2887               	goto	u881
  1202  0086  2888               	goto	u880
  1203  0087                     u881:
  1204  0087  2875               	goto	l1241
  1205  0088                     u880:
  1206  0088  28A4               	goto	l690
  1207  0089                     l1245:
  1208  0089  3001               	movlw	1
  1209  008A  00AD               	movwf	??___xxtofl
  1210  008B  082D               	movf	??___xxtofl,w
  1211  008C  07B2               	addwf	___xxtofl@exp,f
  1212  008D                     l1247:
  1213  008D  3001               	movlw	1
  1214  008E  07B3               	addwf	___xxtofl@arg,f
  1215  008F  3000               	movlw	0
  1216  0090  1803               	skipnc
  1217  0091  3001               	movlw	1
  1218  0092  07B4               	addwf	___xxtofl@arg+1,f
  1219  0093  3000               	movlw	0
  1220  0094  1803               	skipnc
  1221  0095  3001               	movlw	1
  1222  0096  07B5               	addwf	___xxtofl@arg+2,f
  1223  0097  3000               	movlw	0
  1224  0098  1803               	skipnc
  1225  0099  3001               	movlw	1
  1226  009A  07B6               	addwf	___xxtofl@arg+3,f
  1227  009B                     l1249:
  1228  009B  3001               	movlw	1
  1229  009C                     u895:
  1230  009C  1003               	clrc
  1231  009D  0CB6               	rrf	___xxtofl@arg+3,f
  1232  009E  0CB5               	rrf	___xxtofl@arg+2,f
  1233  009F  0CB4               	rrf	___xxtofl@arg+1,f
  1234  00A0  0CB3               	rrf	___xxtofl@arg,f
  1235  00A1  3EFF               	addlw	-1
  1236  00A2  1D03               	skipz
  1237  00A3  289C               	goto	u895
  1238  00A4                     l690:
  1239  00A4  30FF               	movlw	255
  1240  00A5  0536               	andwf	___xxtofl@arg+3,w
  1241  00A6  1D03               	btfss	3,2
  1242  00A7  28A9               	goto	u901
  1243  00A8  28AA               	goto	u900
  1244  00A9                     u901:
  1245  00A9  2889               	goto	l1245
  1246  00AA                     u900:
  1247  00AA  28B6               	goto	l1253
  1248  00AB                     l1251:
  1249  00AB  3001               	movlw	1
  1250  00AC  02B2               	subwf	___xxtofl@exp,f
  1251  00AD  3001               	movlw	1
  1252  00AE  00AD               	movwf	??___xxtofl
  1253  00AF                     u915:
  1254  00AF  1003               	clrc
  1255  00B0  0DB3               	rlf	___xxtofl@arg,f
  1256  00B1  0DB4               	rlf	___xxtofl@arg+1,f
  1257  00B2  0DB5               	rlf	___xxtofl@arg+2,f
  1258  00B3  0DB6               	rlf	___xxtofl@arg+3,f
  1259  00B4  0BAD               	decfsz	??___xxtofl,f
  1260  00B5  28AF               	goto	u915
  1261  00B6                     l1253:
  1262  00B6  1BB5               	btfsc	___xxtofl@arg+2,7
  1263  00B7  28B9               	goto	u921
  1264  00B8  28BA               	goto	u920
  1265  00B9                     u921:
  1266  00B9  28C0               	goto	l697
  1267  00BA                     u920:
  1268  00BA                     l1255:
  1269  00BA  3002               	movlw	2
  1270  00BB  0232               	subwf	___xxtofl@exp,w
  1271  00BC  1803               	skipnc
  1272  00BD  28BF               	goto	u931
  1273  00BE  28C0               	goto	u930
  1274  00BF                     u931:
  1275  00BF  28AB               	goto	l1251
  1276  00C0                     u930:
  1277  00C0                     l697:
  1278  00C0  1832               	btfsc	___xxtofl@exp,0
  1279  00C1  28C3               	goto	u941
  1280  00C2  28C4               	goto	u940
  1281  00C3                     u941:
  1282  00C3  28CC               	goto	l698
  1283  00C4                     u940:
  1284  00C4                     l1257:
  1285  00C4  30FF               	movlw	255
  1286  00C5  05B3               	andwf	___xxtofl@arg,f
  1287  00C6  30FF               	movlw	255
  1288  00C7  05B4               	andwf	___xxtofl@arg+1,f
  1289  00C8  307F               	movlw	127
  1290  00C9  05B5               	andwf	___xxtofl@arg+2,f
  1291  00CA  30FF               	movlw	255
  1292  00CB  05B6               	andwf	___xxtofl@arg+3,f
  1293  00CC                     l698:
  1294  00CC  1003               	clrc
  1295  00CD  0CB2               	rrf	___xxtofl@exp,f
  1296  00CE                     l1259:
  1297  00CE  0832               	movf	___xxtofl@exp,w
  1298  00CF  00AD               	movwf	??___xxtofl
  1299  00D0  01AE               	clrf	??___xxtofl+1
  1300  00D1  01AF               	clrf	??___xxtofl+2
  1301  00D2  01B0               	clrf	??___xxtofl+3
  1302  00D3  3018               	movlw	24
  1303  00D4                     u955:
  1304  00D4  1003               	clrc
  1305  00D5  0DAD               	rlf	??___xxtofl,f
  1306  00D6  0DAE               	rlf	??___xxtofl+1,f
  1307  00D7  0DAF               	rlf	??___xxtofl+2,f
  1308  00D8  0DB0               	rlf	??___xxtofl+3,f
  1309  00D9                     u950:
  1310  00D9  3EFF               	addlw	-1
  1311  00DA  1D03               	skipz
  1312  00DB  28D4               	goto	u955
  1313  00DC  082D               	movf	??___xxtofl,w
  1314  00DD  04B3               	iorwf	___xxtofl@arg,f
  1315  00DE  082E               	movf	??___xxtofl+1,w
  1316  00DF  04B4               	iorwf	___xxtofl@arg+1,f
  1317  00E0  082F               	movf	??___xxtofl+2,w
  1318  00E1  04B5               	iorwf	___xxtofl@arg+2,f
  1319  00E2  0830               	movf	??___xxtofl+3,w
  1320  00E3  04B6               	iorwf	___xxtofl@arg+3,f
  1321  00E4                     l1261:
  1322  00E4  0831               	movf	___xxtofl@sign,w
  1323  00E5  1903               	btfsc	3,2
  1324  00E6  28E8               	goto	u961
  1325  00E7  28E9               	goto	u960
  1326  00E8                     u961:
  1327  00E8  28EE               	goto	l1267
  1328  00E9                     u960:
  1329  00E9                     l1263:
  1330  00E9  1FAC               	btfss	___xxtofl@val+3,7
  1331  00EA  28EC               	goto	u971
  1332  00EB  28ED               	goto	u970
  1333  00EC                     u971:
  1334  00EC  28EE               	goto	l1267
  1335  00ED                     u970:
  1336  00ED                     l1265:
  1337  00ED  17B6               	bsf	___xxtofl@arg+3,7
  1338  00EE                     l1267:
  1339  00EE  0836               	movf	___xxtofl@arg+3,w
  1340  00EF  00AC               	movwf	?___xxtofl+3
  1341  00F0  0835               	movf	___xxtofl@arg+2,w
  1342  00F1  00AB               	movwf	?___xxtofl+2
  1343  00F2  0834               	movf	___xxtofl@arg+1,w
  1344  00F3  00AA               	movwf	?___xxtofl+1
  1345  00F4  0833               	movf	___xxtofl@arg,w
  1346  00F5  00A9               	movwf	?___xxtofl
  1347  00F6                     l686:
  1348  00F6  0008               	return
  1349  00F7                     __end_of___xxtofl:
  1350                           
  1351                           	psect	text5
  1352  00F7                     __ptext5:	
  1353 ;; *************** function ___fltol *****************
  1354 ;; Defined at:
  1355 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\fltol.c"
  1356 ;; Parameters:    Size  Location     Type
  1357 ;;  f1              4    3[COMMON] unsigned char 
  1358 ;; Auto vars:     Size  Location     Type
  1359 ;;  exp1            1    8[COMMON] unsigned char 
  1360 ;;  sign1           1    7[COMMON] unsigned char 
  1361 ;; Return value:  Size  Location     Type
  1362 ;;                  4    3[COMMON] long 
  1363 ;; Registers used:
  1364 ;;		wreg, status,2, status,0
  1365 ;; Tracked objects:
  1366 ;;		On entry : 0/0
  1367 ;;		On exit  : 0/0
  1368 ;;		Unchanged: 0/0
  1369 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1370 ;;      Params:         4       0       0       0       0
  1371 ;;      Locals:         2       0       0       0       0
  1372 ;;      Temps:          0       5       0       0       0
  1373 ;;      Totals:         6       5       0       0       0
  1374 ;;Total ram usage:       11 bytes
  1375 ;; Hardware stack levels used: 1
  1376 ;; Hardware stack levels required when called: 2
  1377 ;; This function calls:
  1378 ;;		Nothing
  1379 ;; This function is called by:
  1380 ;;		_getADConverterValue
  1381 ;; This function uses a non-reentrant model
  1382 ;;
  1383                           
  1384  00F7                     ___fltol:	
  1385                           ;psect for function ___fltol
  1386                           
  1387  00F7                     l1191:	
  1388                           ;incstack = 0
  1389                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  1390                           
  1391  00F7  1003               	clrc
  1392  00F8  0D75               	rlf	___fltol@f1+2,w
  1393  00F9  0D76               	rlf	___fltol@f1+3,w
  1394  00FA  1283               	bcf	3,5	;RP0=0, select bank0
  1395  00FB  1303               	bcf	3,6	;RP1=0, select bank0
  1396  00FC  00A0               	movwf	??___fltol
  1397  00FD  0820               	movf	??___fltol,w
  1398  00FE  00F8               	movwf	___fltol@exp1
  1399  00FF  0878               	movf	___fltol@exp1,w
  1400  0100  1D03               	btfss	3,2
  1401  0101  2903               	goto	u741
  1402  0102  2904               	goto	u740
  1403  0103                     u741:
  1404  0103  290D               	goto	l1197
  1405  0104                     u740:
  1406  0104                     l1193:
  1407  0104  3000               	movlw	0
  1408  0105  00F6               	movwf	?___fltol+3
  1409  0106  3000               	movlw	0
  1410  0107  00F5               	movwf	?___fltol+2
  1411  0108  3000               	movlw	0
  1412  0109  00F4               	movwf	?___fltol+1
  1413  010A  3000               	movlw	0
  1414  010B  00F3               	movwf	?___fltol
  1415  010C  2972               	goto	l437
  1416  010D                     l1197:
  1417  010D  0873               	movf	___fltol@f1,w
  1418  010E  00A0               	movwf	??___fltol
  1419  010F  0874               	movf	___fltol@f1+1,w
  1420  0110  00A1               	movwf	??___fltol+1
  1421  0111  0875               	movf	___fltol@f1+2,w
  1422  0112  00A2               	movwf	??___fltol+2
  1423  0113  0876               	movf	___fltol@f1+3,w
  1424  0114  00A3               	movwf	??___fltol+3
  1425  0115  301F               	movlw	31
  1426  0116                     u755:
  1427  0116  1003               	clrc
  1428  0117  0CA3               	rrf	??___fltol+3,f
  1429  0118  0CA2               	rrf	??___fltol+2,f
  1430  0119  0CA1               	rrf	??___fltol+1,f
  1431  011A  0CA0               	rrf	??___fltol,f
  1432  011B                     u750:
  1433  011B  3EFF               	addlw	-1
  1434  011C  1D03               	skipz
  1435  011D  2916               	goto	u755
  1436  011E  0820               	movf	??___fltol,w
  1437  011F  00A4               	movwf	??___fltol+4
  1438  0120  0824               	movf	??___fltol+4,w
  1439  0121  00F7               	movwf	___fltol@sign1
  1440  0122                     l1199:
  1441  0122  17F5               	bsf	___fltol@f1+2,7
  1442  0123                     l1201:
  1443  0123  30FF               	movlw	255
  1444  0124  05F3               	andwf	___fltol@f1,f
  1445  0125  30FF               	movlw	255
  1446  0126  05F4               	andwf	___fltol@f1+1,f
  1447  0127  30FF               	movlw	255
  1448  0128  05F5               	andwf	___fltol@f1+2,f
  1449  0129  3000               	movlw	0
  1450  012A  05F6               	andwf	___fltol@f1+3,f
  1451  012B                     l1203:
  1452  012B  3096               	movlw	150
  1453  012C  02F8               	subwf	___fltol@exp1,f
  1454  012D                     l1205:
  1455  012D  1FF8               	btfss	___fltol@exp1,7
  1456  012E  2930               	goto	u761
  1457  012F  2931               	goto	u760
  1458  0130                     u761:
  1459  0130  294B               	goto	l1215
  1460  0131                     u760:
  1461  0131                     l1207:
  1462  0131  0878               	movf	___fltol@exp1,w
  1463  0132  3A80               	xorlw	128
  1464  0133  3E97               	addlw	151
  1465  0134  1803               	skipnc
  1466  0135  2937               	goto	u771
  1467  0136  2938               	goto	u770
  1468  0137                     u771:
  1469  0137  2939               	goto	l1213
  1470  0138                     u770:
  1471  0138  2904               	goto	l1193
  1472  0139                     l1213:
  1473  0139  3001               	movlw	1
  1474  013A                     u785:
  1475  013A  1003               	clrc
  1476  013B  0CF6               	rrf	___fltol@f1+3,f
  1477  013C  0CF5               	rrf	___fltol@f1+2,f
  1478  013D  0CF4               	rrf	___fltol@f1+1,f
  1479  013E  0CF3               	rrf	___fltol@f1,f
  1480  013F  3EFF               	addlw	-1
  1481  0140  1D03               	skipz
  1482  0141  293A               	goto	u785
  1483  0142  3001               	movlw	1
  1484  0143  00A0               	movwf	??___fltol
  1485  0144  0820               	movf	??___fltol,w
  1486  0145  07F8               	addwf	___fltol@exp1,f
  1487  0146  1D03               	btfss	3,2
  1488  0147  2949               	goto	u791
  1489  0148  294A               	goto	u790
  1490  0149                     u791:
  1491  0149  2939               	goto	l1213
  1492  014A                     u790:
  1493  014A  2962               	goto	l1223
  1494  014B                     l1215:
  1495  014B  3020               	movlw	32
  1496  014C  0278               	subwf	___fltol@exp1,w
  1497  014D  1C03               	skipc
  1498  014E  2950               	goto	u801
  1499  014F  2951               	goto	u800
  1500  0150                     u801:
  1501  0150  295D               	goto	l444
  1502  0151                     u800:
  1503  0151  2904               	goto	l1193
  1504  0152                     l1221:
  1505  0152  3001               	movlw	1
  1506  0153  00A0               	movwf	??___fltol
  1507  0154                     u815:
  1508  0154  1003               	clrc
  1509  0155  0DF3               	rlf	___fltol@f1,f
  1510  0156  0DF4               	rlf	___fltol@f1+1,f
  1511  0157  0DF5               	rlf	___fltol@f1+2,f
  1512  0158  0DF6               	rlf	___fltol@f1+3,f
  1513  0159  0BA0               	decfsz	??___fltol,f
  1514  015A  2954               	goto	u815
  1515  015B  3001               	movlw	1
  1516  015C  02F8               	subwf	___fltol@exp1,f
  1517  015D                     l444:
  1518  015D  0878               	movf	___fltol@exp1,w
  1519  015E  1D03               	btfss	3,2
  1520  015F  2961               	goto	u821
  1521  0160  2962               	goto	u820
  1522  0161                     u821:
  1523  0161  2952               	goto	l1221
  1524  0162                     u820:
  1525  0162                     l1223:
  1526  0162  0877               	movf	___fltol@sign1,w
  1527  0163  1903               	btfsc	3,2
  1528  0164  2966               	goto	u831
  1529  0165  2967               	goto	u830
  1530  0166                     u831:
  1531  0166  2972               	goto	l447
  1532  0167                     u830:
  1533  0167                     l1225:
  1534  0167  09F3               	comf	___fltol@f1,f
  1535  0168  09F4               	comf	___fltol@f1+1,f
  1536  0169  09F5               	comf	___fltol@f1+2,f
  1537  016A  09F6               	comf	___fltol@f1+3,f
  1538  016B  0AF3               	incf	___fltol@f1,f
  1539  016C  1903               	skipnz
  1540  016D  0AF4               	incf	___fltol@f1+1,f
  1541  016E  1903               	skipnz
  1542  016F  0AF5               	incf	___fltol@f1+2,f
  1543  0170  1903               	skipnz
  1544  0171  0AF6               	incf	___fltol@f1+3,f
  1545  0172                     l447:
  1546  0172                     l437:
  1547  0172  0008               	return
  1548  0173                     __end_of___fltol:
  1549                           
  1550                           	psect	text6
  1551  0522                     __ptext6:	
  1552 ;; *************** function _verifyMenu *****************
  1553 ;; Defined at:
  1554 ;;		line 199 in file "main.c"
  1555 ;; Parameters:    Size  Location     Type
  1556 ;;		None
  1557 ;; Auto vars:     Size  Location     Type
  1558 ;;		None
  1559 ;; Return value:  Size  Location     Type
  1560 ;;                  1    wreg      void 
  1561 ;; Registers used:
  1562 ;;		status,2, status,0, pclath, cstack
  1563 ;; Tracked objects:
  1564 ;;		On entry : 0/0
  1565 ;;		On exit  : 0/0
  1566 ;;		Unchanged: 0/0
  1567 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1568 ;;      Params:         0       0       0       0       0
  1569 ;;      Locals:         0       0       0       0       0
  1570 ;;      Temps:          0       0       0       0       0
  1571 ;;      Totals:         0       0       0       0       0
  1572 ;;Total ram usage:        0 bytes
  1573 ;; Hardware stack levels used: 1
  1574 ;; Hardware stack levels required when called: 3
  1575 ;; This function calls:
  1576 ;;		_handleMenu
  1577 ;; This function is called by:
  1578 ;;		_main
  1579 ;; This function uses a non-reentrant model
  1580 ;;
  1581                           
  1582  0522                     _verifyMenu:	
  1583                           ;psect for function _verifyMenu
  1584                           
  1585  0522                     l1043:	
  1586                           ;incstack = 0
  1587                           ; Regs used in _verifyMenu: [status,2+status,0+pclath+cstack]
  1588                           
  1589                           
  1590                           ;main.c: 201:     if (PORTBbits.RB2)
  1591  0522  1283               	bcf	3,5	;RP0=0, select bank0
  1592  0523  1303               	bcf	3,6	;RP1=0, select bank0
  1593  0524  1D06               	btfss	6,2	;volatile
  1594  0525  2D27               	goto	u541
  1595  0526  2D28               	goto	u540
  1596  0527                     u541:
  1597  0527  2D2D               	goto	l144
  1598  0528                     u540:
  1599  0528                     l1045:
  1600                           
  1601                           ;main.c: 202:     {;main.c: 203:         handleMenu();
  1602  0528  120A  118A  2542  120A  118A  	fcall	_handleMenu
  1603  052D                     l144:
  1604  052D  0008               	return
  1605  052E                     __end_of_verifyMenu:
  1606                           
  1607                           	psect	text7
  1608  0542                     __ptext7:	
  1609 ;; *************** function _handleMenu *****************
  1610 ;; Defined at:
  1611 ;;		line 195 in file "main.c"
  1612 ;; Parameters:    Size  Location     Type
  1613 ;;		None
  1614 ;; Auto vars:     Size  Location     Type
  1615 ;;		None
  1616 ;; Return value:  Size  Location     Type
  1617 ;;                  1    wreg      void 
  1618 ;; Registers used:
  1619 ;;		None
  1620 ;; Tracked objects:
  1621 ;;		On entry : 0/0
  1622 ;;		On exit  : 0/0
  1623 ;;		Unchanged: 0/0
  1624 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1625 ;;      Params:         0       0       0       0       0
  1626 ;;      Locals:         0       0       0       0       0
  1627 ;;      Temps:          0       0       0       0       0
  1628 ;;      Totals:         0       0       0       0       0
  1629 ;;Total ram usage:        0 bytes
  1630 ;; Hardware stack levels used: 1
  1631 ;; Hardware stack levels required when called: 2
  1632 ;; This function calls:
  1633 ;;		Nothing
  1634 ;; This function is called by:
  1635 ;;		_verifyMenu
  1636 ;; This function uses a non-reentrant model
  1637 ;;
  1638                           
  1639  0542                     _handleMenu:	
  1640                           ;psect for function _handleMenu
  1641                           
  1642  0542                     l953:	
  1643                           ;incstack = 0
  1644                           ; Regs used in _handleMenu: []
  1645                           
  1646  0542                     l140:	
  1647                           ;main.c: 197:     return;
  1648                           
  1649  0542  0008               	return
  1650  0543                     __end_of_handleMenu:
  1651                           
  1652                           	psect	text8
  1653  0543                     __ptext8:	
  1654 ;; *************** function _setupWatchdogTimer *****************
  1655 ;; Defined at:
  1656 ;;		line 224 in file "main.c"
  1657 ;; Parameters:    Size  Location     Type
  1658 ;;		None
  1659 ;; Auto vars:     Size  Location     Type
  1660 ;;		None
  1661 ;; Return value:  Size  Location     Type
  1662 ;;                  1    wreg      void 
  1663 ;; Registers used:
  1664 ;;		None
  1665 ;; Tracked objects:
  1666 ;;		On entry : 0/0
  1667 ;;		On exit  : 0/0
  1668 ;;		Unchanged: 0/0
  1669 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1670 ;;      Params:         0       0       0       0       0
  1671 ;;      Locals:         0       0       0       0       0
  1672 ;;      Temps:          0       0       0       0       0
  1673 ;;      Totals:         0       0       0       0       0
  1674 ;;Total ram usage:        0 bytes
  1675 ;; Hardware stack levels used: 1
  1676 ;; Hardware stack levels required when called: 2
  1677 ;; This function calls:
  1678 ;;		Nothing
  1679 ;; This function is called by:
  1680 ;;		_main
  1681 ;; This function uses a non-reentrant model
  1682 ;;
  1683                           
  1684  0543                     _setupWatchdogTimer:	
  1685                           ;psect for function _setupWatchdogTimer
  1686                           
  1687  0543                     l1057:	
  1688                           ;incstack = 0
  1689                           ; Regs used in _setupWatchdogTimer: []
  1690                           
  1691  0543                     l154:	
  1692                           ;main.c: 231:     return;
  1693                           
  1694  0543  0008               	return
  1695  0544                     __end_of_setupWatchdogTimer:
  1696                           
  1697                           	psect	text9
  1698  04AA                     __ptext9:	
  1699 ;; *************** function _setupTimer *****************
  1700 ;; Defined at:
  1701 ;;		line 97 in file "main.c"
  1702 ;; Parameters:    Size  Location     Type
  1703 ;;		None
  1704 ;; Auto vars:     Size  Location     Type
  1705 ;;		None
  1706 ;; Return value:  Size  Location     Type
  1707 ;;                  1    wreg      void 
  1708 ;; Registers used:
  1709 ;;		wreg, status,2, status,0, pclath, cstack
  1710 ;; Tracked objects:
  1711 ;;		On entry : 0/0
  1712 ;;		On exit  : 0/0
  1713 ;;		Unchanged: 0/0
  1714 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1715 ;;      Params:         0       0       0       0       0
  1716 ;;      Locals:         0       0       0       0       0
  1717 ;;      Temps:          0       0       0       0       0
  1718 ;;      Totals:         0       0       0       0       0
  1719 ;;Total ram usage:        0 bytes
  1720 ;; Hardware stack levels used: 1
  1721 ;; Hardware stack levels required when called: 5
  1722 ;; This function calls:
  1723 ;;		_setupNewVolumeFlow
  1724 ;; This function is called by:
  1725 ;;		_main
  1726 ;; This function uses a non-reentrant model
  1727 ;;
  1728                           
  1729  04AA                     _setupTimer:	
  1730                           ;psect for function _setupTimer
  1731                           
  1732  04AA                     l1593:	
  1733                           ;incstack = 0
  1734                           ; Regs used in _setupTimer: [wreg+status,2+status,0+pclath+cstack]
  1735                           
  1736                           
  1737                           ;main.c: 100:     INTCONbits.GIE = 1;
  1738  04AA  178B               	bsf	11,7	;volatile
  1739                           
  1740                           ;main.c: 101:     INTCONbits.PEIE = 1;
  1741  04AB  170B               	bsf	11,6	;volatile
  1742                           
  1743                           ;main.c: 102:     PIE1bits.TMR1IE = 1;
  1744  04AC  1683               	bsf	3,5	;RP0=1, select bank1
  1745  04AD  1303               	bcf	3,6	;RP1=0, select bank1
  1746  04AE  140C               	bsf	12,0	;volatile
  1747                           
  1748                           ;main.c: 105:     T1CONbits.TMR1CS = 0;
  1749  04AF  1283               	bcf	3,5	;RP0=0, select bank0
  1750  04B0  1303               	bcf	3,6	;RP1=0, select bank0
  1751  04B1  1090               	bcf	16,1	;volatile
  1752                           
  1753                           ;main.c: 108:     T1CONbits.T1CKPS0 = 1;
  1754  04B2  1610               	bsf	16,4	;volatile
  1755                           
  1756                           ;main.c: 109:     T1CONbits.T1CKPS1 = 1;
  1757  04B3  1690               	bsf	16,5	;volatile
  1758  04B4                     l1595:
  1759                           
  1760                           ;main.c: 117:     TMR1H = 0x0B;
  1761  04B4  300B               	movlw	11
  1762  04B5  008F               	movwf	15	;volatile
  1763                           
  1764                           ;main.c: 118:     TMR1L = 0xDC;
  1765  04B6  30DC               	movlw	220
  1766  04B7  008E               	movwf	14	;volatile
  1767  04B8                     l1597:
  1768                           
  1769                           ;main.c: 120:     T1CONbits.TMR1ON = 0;
  1770  04B8  1010               	bcf	16,0	;volatile
  1771  04B9                     l1599:
  1772                           
  1773                           ;main.c: 124:     setupNewVolumeFlow(200);
  1774  04B9  30C8               	movlw	200
  1775  04BA  00AB               	movwf	setupNewVolumeFlow@new_ml
  1776  04BB  3000               	movlw	0
  1777  04BC  00AC               	movwf	setupNewVolumeFlow@new_ml+1
  1778  04BD  120A  118A  2455  120A  118A  	fcall	_setupNewVolumeFlow
  1779  04C2                     l112:
  1780  04C2  0008               	return
  1781  04C3                     __end_of_setupTimer:
  1782                           
  1783                           	psect	text10
  1784  0455                     __ptext10:	
  1785 ;; *************** function _setupNewVolumeFlow *****************
  1786 ;; Defined at:
  1787 ;;		line 88 in file "main.c"
  1788 ;; Parameters:    Size  Location     Type
  1789 ;;  new_ml          2   11[BANK0 ] int 
  1790 ;; Auto vars:     Size  Location     Type
  1791 ;;  new_ms          2   13[BANK0 ] int 
  1792 ;; Return value:  Size  Location     Type
  1793 ;;                  1    wreg      void 
  1794 ;; Registers used:
  1795 ;;		wreg, status,2, status,0, pclath, cstack
  1796 ;; Tracked objects:
  1797 ;;		On entry : 0/0
  1798 ;;		On exit  : 0/0
  1799 ;;		Unchanged: 0/0
  1800 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1801 ;;      Params:         0       2       0       0       0
  1802 ;;      Locals:         0       2       0       0       0
  1803 ;;      Temps:          0       0       0       0       0
  1804 ;;      Totals:         0       4       0       0       0
  1805 ;;Total ram usage:        4 bytes
  1806 ;; Hardware stack levels used: 1
  1807 ;; Hardware stack levels required when called: 4
  1808 ;; This function calls:
  1809 ;;		___wmul
  1810 ;;		_changeTimerMaxConter
  1811 ;; This function is called by:
  1812 ;;		_setupTimer
  1813 ;; This function uses a non-reentrant model
  1814 ;;
  1815                           
  1816  0455                     _setupNewVolumeFlow:	
  1817                           ;psect for function _setupNewVolumeFlow
  1818                           
  1819  0455                     l1539:	
  1820                           ;incstack = 0
  1821                           ; Regs used in _setupNewVolumeFlow: [wreg+status,2+status,0+pclath+cstack]
  1822                           
  1823                           
  1824                           ;main.c: 88: void setupNewVolumeFlow(int new_ml);main.c: 89: {;main.c: 91:     int new_m
      +                          s = new_ml*MLxMS;
  1825  0455  1283               	bcf	3,5	;RP0=0, select bank0
  1826  0456  1303               	bcf	3,6	;RP1=0, select bank0
  1827  0457  082C               	movf	setupNewVolumeFlow@new_ml+1,w
  1828  0458  00F4               	movwf	___wmul@multiplier+1
  1829  0459  082B               	movf	setupNewVolumeFlow@new_ml,w
  1830  045A  00F3               	movwf	___wmul@multiplier
  1831  045B  3019               	movlw	25
  1832  045C  00F5               	movwf	___wmul@multiplicand
  1833  045D  3000               	movlw	0
  1834  045E  00F6               	movwf	___wmul@multiplicand+1
  1835  045F  120A  118A  23EB  120A  118A  	fcall	___wmul
  1836  0464  0874               	movf	?___wmul+1,w
  1837  0465  1283               	bcf	3,5	;RP0=0, select bank0
  1838  0466  1303               	bcf	3,6	;RP1=0, select bank0
  1839  0467  00AE               	movwf	setupNewVolumeFlow@new_ms+1
  1840  0468  0873               	movf	?___wmul,w
  1841  0469  00AD               	movwf	setupNewVolumeFlow@new_ms
  1842                           
  1843                           ;main.c: 93:     changeTimerMaxConter(new_ms);
  1844  046A  082E               	movf	setupNewVolumeFlow@new_ms+1,w
  1845  046B  00AA               	movwf	changeTimerMaxConter@mili_s+1
  1846  046C  082D               	movf	setupNewVolumeFlow@new_ms,w
  1847  046D  00A9               	movwf	changeTimerMaxConter@mili_s
  1848  046E  120A  118A  24DA  120A  118A  	fcall	_changeTimerMaxConter
  1849  0473                     l109:
  1850  0473  0008               	return
  1851  0474                     __end_of_setupNewVolumeFlow:
  1852                           
  1853                           	psect	text11
  1854  04DA                     __ptext11:	
  1855 ;; *************** function _changeTimerMaxConter *****************
  1856 ;; Defined at:
  1857 ;;		line 79 in file "main.c"
  1858 ;; Parameters:    Size  Location     Type
  1859 ;;  mili_s          2    9[BANK0 ] int 
  1860 ;; Auto vars:     Size  Location     Type
  1861 ;;		None
  1862 ;; Return value:  Size  Location     Type
  1863 ;;                  1    wreg      void 
  1864 ;; Registers used:
  1865 ;;		wreg, status,2, status,0, pclath, cstack
  1866 ;; Tracked objects:
  1867 ;;		On entry : 0/0
  1868 ;;		On exit  : 0/0
  1869 ;;		Unchanged: 0/0
  1870 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1871 ;;      Params:         0       2       0       0       0
  1872 ;;      Locals:         0       0       0       0       0
  1873 ;;      Temps:          0       0       0       0       0
  1874 ;;      Totals:         0       2       0       0       0
  1875 ;;Total ram usage:        2 bytes
  1876 ;; Hardware stack levels used: 1
  1877 ;; Hardware stack levels required when called: 3
  1878 ;; This function calls:
  1879 ;;		___awdiv
  1880 ;; This function is called by:
  1881 ;;		_setupNewVolumeFlow
  1882 ;; This function uses a non-reentrant model
  1883 ;;
  1884                           
  1885  04DA                     _changeTimerMaxConter:	
  1886                           ;psect for function _changeTimerMaxConter
  1887                           
  1888  04DA                     l1505:	
  1889                           ;incstack = 0
  1890                           ; Regs used in _changeTimerMaxConter: [wreg+status,2+status,0+pclath+cstack]
  1891                           
  1892                           
  1893                           ;main.c: 81:     timer_counter_max = (mili_s/500);
  1894  04DA  30F4               	movlw	244
  1895  04DB  1283               	bcf	3,5	;RP0=0, select bank0
  1896  04DC  1303               	bcf	3,6	;RP1=0, select bank0
  1897  04DD  00A0               	movwf	___awdiv@divisor
  1898  04DE  3001               	movlw	1
  1899  04DF  00A1               	movwf	___awdiv@divisor+1
  1900  04E0  082A               	movf	changeTimerMaxConter@mili_s+1,w
  1901  04E1  00A3               	movwf	___awdiv@dividend+1
  1902  04E2  0829               	movf	changeTimerMaxConter@mili_s,w
  1903  04E3  00A2               	movwf	___awdiv@dividend
  1904  04E4  120A  118A  21E2  120A  118A  	fcall	___awdiv
  1905  04E9  1283               	bcf	3,5	;RP0=0, select bank0
  1906  04EA  1303               	bcf	3,6	;RP1=0, select bank0
  1907  04EB  0821               	movf	?___awdiv+1,w
  1908  04EC  00C7               	movwf	_timer_counter_max+1
  1909  04ED  0820               	movf	?___awdiv,w
  1910  04EE  00C6               	movwf	_timer_counter_max
  1911  04EF                     l106:
  1912  04EF  0008               	return
  1913  04F0                     __end_of_changeTimerMaxConter:
  1914                           
  1915                           	psect	text12
  1916  01E2                     __ptext12:	
  1917 ;; *************** function ___awdiv *****************
  1918 ;; Defined at:
  1919 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\awdiv.c"
  1920 ;; Parameters:    Size  Location     Type
  1921 ;;  divisor         2    0[BANK0 ] int 
  1922 ;;  dividend        2    2[BANK0 ] int 
  1923 ;; Auto vars:     Size  Location     Type
  1924 ;;  quotient        2    7[BANK0 ] int 
  1925 ;;  sign            1    6[BANK0 ] unsigned char 
  1926 ;;  counter         1    5[BANK0 ] unsigned char 
  1927 ;; Return value:  Size  Location     Type
  1928 ;;                  2    0[BANK0 ] int 
  1929 ;; Registers used:
  1930 ;;		wreg, status,2, status,0
  1931 ;; Tracked objects:
  1932 ;;		On entry : 0/0
  1933 ;;		On exit  : 0/0
  1934 ;;		Unchanged: 0/0
  1935 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1936 ;;      Params:         0       4       0       0       0
  1937 ;;      Locals:         0       4       0       0       0
  1938 ;;      Temps:          0       1       0       0       0
  1939 ;;      Totals:         0       9       0       0       0
  1940 ;;Total ram usage:        9 bytes
  1941 ;; Hardware stack levels used: 1
  1942 ;; Hardware stack levels required when called: 2
  1943 ;; This function calls:
  1944 ;;		Nothing
  1945 ;; This function is called by:
  1946 ;;		_changeTimerMaxConter
  1947 ;;		_getADConverterValue
  1948 ;; This function uses a non-reentrant model
  1949 ;;
  1950                           
  1951  01E2                     ___awdiv:	
  1952                           ;psect for function ___awdiv
  1953                           
  1954  01E2                     l1451:	
  1955                           ;incstack = 0
  1956                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1957                           
  1958  01E2  1283               	bcf	3,5	;RP0=0, select bank0
  1959  01E3  1303               	bcf	3,6	;RP1=0, select bank0
  1960  01E4  01A6               	clrf	___awdiv@sign
  1961  01E5                     l1453:
  1962  01E5  1FA1               	btfss	___awdiv@divisor+1,7
  1963  01E6  29E8               	goto	u1091
  1964  01E7  29E9               	goto	u1090
  1965  01E8                     u1091:
  1966  01E8  29F0               	goto	l1459
  1967  01E9                     u1090:
  1968  01E9                     l1455:
  1969  01E9  09A0               	comf	___awdiv@divisor,f
  1970  01EA  09A1               	comf	___awdiv@divisor+1,f
  1971  01EB  0AA0               	incf	___awdiv@divisor,f
  1972  01EC  1903               	skipnz
  1973  01ED  0AA1               	incf	___awdiv@divisor+1,f
  1974  01EE                     l1457:
  1975  01EE  01A6               	clrf	___awdiv@sign
  1976  01EF  0AA6               	incf	___awdiv@sign,f
  1977  01F0                     l1459:
  1978  01F0  1FA3               	btfss	___awdiv@dividend+1,7
  1979  01F1  29F3               	goto	u1101
  1980  01F2  29F4               	goto	u1100
  1981  01F3                     u1101:
  1982  01F3  29FD               	goto	l1465
  1983  01F4                     u1100:
  1984  01F4                     l1461:
  1985  01F4  09A2               	comf	___awdiv@dividend,f
  1986  01F5  09A3               	comf	___awdiv@dividend+1,f
  1987  01F6  0AA2               	incf	___awdiv@dividend,f
  1988  01F7  1903               	skipnz
  1989  01F8  0AA3               	incf	___awdiv@dividend+1,f
  1990  01F9                     l1463:
  1991  01F9  3001               	movlw	1
  1992  01FA  00A4               	movwf	??___awdiv
  1993  01FB  0824               	movf	??___awdiv,w
  1994  01FC  06A6               	xorwf	___awdiv@sign,f
  1995  01FD                     l1465:
  1996  01FD  01A7               	clrf	___awdiv@quotient
  1997  01FE  01A8               	clrf	___awdiv@quotient+1
  1998  01FF                     l1467:
  1999  01FF  0820               	movf	___awdiv@divisor,w
  2000  0200  0421               	iorwf	___awdiv@divisor+1,w
  2001  0201  1903               	btfsc	3,2
  2002  0202  2A04               	goto	u1111
  2003  0203  2A05               	goto	u1110
  2004  0204                     u1111:
  2005  0204  2A3C               	goto	l1487
  2006  0205                     u1110:
  2007  0205                     l1469:
  2008  0205  01A5               	clrf	___awdiv@counter
  2009  0206  0AA5               	incf	___awdiv@counter,f
  2010  0207  2A13               	goto	l1475
  2011  0208                     l1471:
  2012  0208  3001               	movlw	1
  2013  0209                     u1125:
  2014  0209  1003               	clrc
  2015  020A  0DA0               	rlf	___awdiv@divisor,f
  2016  020B  0DA1               	rlf	___awdiv@divisor+1,f
  2017  020C  3EFF               	addlw	-1
  2018  020D  1D03               	skipz
  2019  020E  2A09               	goto	u1125
  2020  020F                     l1473:
  2021  020F  3001               	movlw	1
  2022  0210  00A4               	movwf	??___awdiv
  2023  0211  0824               	movf	??___awdiv,w
  2024  0212  07A5               	addwf	___awdiv@counter,f
  2025  0213                     l1475:
  2026  0213  1FA1               	btfss	___awdiv@divisor+1,7
  2027  0214  2A16               	goto	u1131
  2028  0215  2A17               	goto	u1130
  2029  0216                     u1131:
  2030  0216  2A08               	goto	l1471
  2031  0217                     u1130:
  2032  0217                     l1477:
  2033  0217  3001               	movlw	1
  2034  0218                     u1145:
  2035  0218  1003               	clrc
  2036  0219  0DA7               	rlf	___awdiv@quotient,f
  2037  021A  0DA8               	rlf	___awdiv@quotient+1,f
  2038  021B  3EFF               	addlw	-1
  2039  021C  1D03               	skipz
  2040  021D  2A18               	goto	u1145
  2041  021E  0821               	movf	___awdiv@divisor+1,w
  2042  021F  0223               	subwf	___awdiv@dividend+1,w
  2043  0220  1D03               	skipz
  2044  0221  2A24               	goto	u1155
  2045  0222  0820               	movf	___awdiv@divisor,w
  2046  0223  0222               	subwf	___awdiv@dividend,w
  2047  0224                     u1155:
  2048  0224  1C03               	skipc
  2049  0225  2A27               	goto	u1151
  2050  0226  2A28               	goto	u1150
  2051  0227                     u1151:
  2052  0227  2A2F               	goto	l1483
  2053  0228                     u1150:
  2054  0228                     l1479:
  2055  0228  0820               	movf	___awdiv@divisor,w
  2056  0229  02A2               	subwf	___awdiv@dividend,f
  2057  022A  0821               	movf	___awdiv@divisor+1,w
  2058  022B  1C03               	skipc
  2059  022C  03A3               	decf	___awdiv@dividend+1,f
  2060  022D  02A3               	subwf	___awdiv@dividend+1,f
  2061  022E                     l1481:
  2062  022E  1427               	bsf	___awdiv@quotient,0
  2063  022F                     l1483:
  2064  022F  3001               	movlw	1
  2065  0230                     u1165:
  2066  0230  1003               	clrc
  2067  0231  0CA1               	rrf	___awdiv@divisor+1,f
  2068  0232  0CA0               	rrf	___awdiv@divisor,f
  2069  0233  3EFF               	addlw	-1
  2070  0234  1D03               	skipz
  2071  0235  2A30               	goto	u1165
  2072  0236                     l1485:
  2073  0236  3001               	movlw	1
  2074  0237  02A5               	subwf	___awdiv@counter,f
  2075  0238  1D03               	btfss	3,2
  2076  0239  2A3B               	goto	u1171
  2077  023A  2A3C               	goto	u1170
  2078  023B                     u1171:
  2079  023B  2A17               	goto	l1477
  2080  023C                     u1170:
  2081  023C                     l1487:
  2082  023C  0826               	movf	___awdiv@sign,w
  2083  023D  1903               	btfsc	3,2
  2084  023E  2A40               	goto	u1181
  2085  023F  2A41               	goto	u1180
  2086  0240                     u1181:
  2087  0240  2A46               	goto	l1491
  2088  0241                     u1180:
  2089  0241                     l1489:
  2090  0241  09A7               	comf	___awdiv@quotient,f
  2091  0242  09A8               	comf	___awdiv@quotient+1,f
  2092  0243  0AA7               	incf	___awdiv@quotient,f
  2093  0244  1903               	skipnz
  2094  0245  0AA8               	incf	___awdiv@quotient+1,f
  2095  0246                     l1491:
  2096  0246  0828               	movf	___awdiv@quotient+1,w
  2097  0247  00A1               	movwf	?___awdiv+1
  2098  0248  0827               	movf	___awdiv@quotient,w
  2099  0249  00A0               	movwf	?___awdiv
  2100  024A                     l404:
  2101  024A  0008               	return
  2102  024B                     __end_of___awdiv:
  2103                           
  2104                           	psect	text13
  2105  03EB                     __ptext13:	
  2106 ;; *************** function ___wmul *****************
  2107 ;; Defined at:
  2108 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\Umul16.c"
  2109 ;; Parameters:    Size  Location     Type
  2110 ;;  multiplier      2    3[COMMON] unsigned int 
  2111 ;;  multiplicand    2    5[COMMON] unsigned int 
  2112 ;; Auto vars:     Size  Location     Type
  2113 ;;  product         2    7[COMMON] unsigned int 
  2114 ;; Return value:  Size  Location     Type
  2115 ;;                  2    3[COMMON] unsigned int 
  2116 ;; Registers used:
  2117 ;;		wreg, status,2, status,0
  2118 ;; Tracked objects:
  2119 ;;		On entry : 0/0
  2120 ;;		On exit  : 0/0
  2121 ;;		Unchanged: 0/0
  2122 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2123 ;;      Params:         4       0       0       0       0
  2124 ;;      Locals:         2       0       0       0       0
  2125 ;;      Temps:          0       0       0       0       0
  2126 ;;      Totals:         6       0       0       0       0
  2127 ;;Total ram usage:        6 bytes
  2128 ;; Hardware stack levels used: 1
  2129 ;; Hardware stack levels required when called: 2
  2130 ;; This function calls:
  2131 ;;		Nothing
  2132 ;; This function is called by:
  2133 ;;		_setupNewVolumeFlow
  2134 ;;		_getADConverterValue
  2135 ;; This function uses a non-reentrant model
  2136 ;;
  2137                           
  2138  03EB                     ___wmul:	
  2139                           ;psect for function ___wmul
  2140                           
  2141  03EB                     l1177:	
  2142                           ;incstack = 0
  2143                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2144                           
  2145  03EB  01F7               	clrf	___wmul@product
  2146  03EC  01F8               	clrf	___wmul@product+1
  2147  03ED                     l1179:
  2148  03ED  1C73               	btfss	___wmul@multiplier,0
  2149  03EE  2BF0               	goto	u701
  2150  03EF  2BF1               	goto	u700
  2151  03F0                     u701:
  2152  03F0  2BF7               	goto	l251
  2153  03F1                     u700:
  2154  03F1                     l1181:
  2155  03F1  0875               	movf	___wmul@multiplicand,w
  2156  03F2  07F7               	addwf	___wmul@product,f
  2157  03F3  1803               	skipnc
  2158  03F4  0AF8               	incf	___wmul@product+1,f
  2159  03F5  0876               	movf	___wmul@multiplicand+1,w
  2160  03F6  07F8               	addwf	___wmul@product+1,f
  2161  03F7                     l251:
  2162  03F7  3001               	movlw	1
  2163  03F8                     u715:
  2164  03F8  1003               	clrc
  2165  03F9  0DF5               	rlf	___wmul@multiplicand,f
  2166  03FA  0DF6               	rlf	___wmul@multiplicand+1,f
  2167  03FB  3EFF               	addlw	-1
  2168  03FC  1D03               	skipz
  2169  03FD  2BF8               	goto	u715
  2170  03FE                     l1183:
  2171  03FE  3001               	movlw	1
  2172  03FF                     u725:
  2173  03FF  1003               	clrc
  2174  0400  0CF4               	rrf	___wmul@multiplier+1,f
  2175  0401  0CF3               	rrf	___wmul@multiplier,f
  2176  0402  3EFF               	addlw	-1
  2177  0403  1D03               	skipz
  2178  0404  2BFF               	goto	u725
  2179  0405                     l1185:
  2180  0405  0873               	movf	___wmul@multiplier,w
  2181  0406  0474               	iorwf	___wmul@multiplier+1,w
  2182  0407  1D03               	btfss	3,2
  2183  0408  2C0A               	goto	u731
  2184  0409  2C0B               	goto	u730
  2185  040A                     u731:
  2186  040A  2BED               	goto	l1179
  2187  040B                     u730:
  2188  040B                     l1187:
  2189  040B  0878               	movf	___wmul@product+1,w
  2190  040C  00F4               	movwf	?___wmul+1
  2191  040D  0877               	movf	___wmul@product,w
  2192  040E  00F3               	movwf	?___wmul
  2193  040F                     l253:
  2194  040F  0008               	return
  2195  0410                     __end_of___wmul:
  2196                           
  2197                           	psect	text14
  2198  053C                     __ptext14:	
  2199 ;; *************** function _setupExternalInterruption *****************
  2200 ;; Defined at:
  2201 ;;		line 187 in file "main.c"
  2202 ;; Parameters:    Size  Location     Type
  2203 ;;		None
  2204 ;; Auto vars:     Size  Location     Type
  2205 ;;		None
  2206 ;; Return value:  Size  Location     Type
  2207 ;;                  1    wreg      void 
  2208 ;; Registers used:
  2209 ;;		None
  2210 ;; Tracked objects:
  2211 ;;		On entry : 0/0
  2212 ;;		On exit  : 0/0
  2213 ;;		Unchanged: 0/0
  2214 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2215 ;;      Params:         0       0       0       0       0
  2216 ;;      Locals:         0       0       0       0       0
  2217 ;;      Temps:          0       0       0       0       0
  2218 ;;      Totals:         0       0       0       0       0
  2219 ;;Total ram usage:        0 bytes
  2220 ;; Hardware stack levels used: 1
  2221 ;; Hardware stack levels required when called: 2
  2222 ;; This function calls:
  2223 ;;		Nothing
  2224 ;; This function is called by:
  2225 ;;		_main
  2226 ;; This function uses a non-reentrant model
  2227 ;;
  2228                           
  2229  053C                     _setupExternalInterruption:	
  2230                           ;psect for function _setupExternalInterruption
  2231                           
  2232  053C                     l1041:	
  2233                           ;incstack = 0
  2234                           ; Regs used in _setupExternalInterruption: []
  2235                           
  2236                           
  2237                           ;main.c: 189:     OPTION_REGbits.INTEDG = 0;
  2238  053C  1683               	bsf	3,5	;RP0=1, select bank1
  2239  053D  1303               	bcf	3,6	;RP1=0, select bank1
  2240  053E  1301               	bcf	1,6	;volatile
  2241                           
  2242                           ;main.c: 190:  INTCONbits.GIE = 1;
  2243  053F  178B               	bsf	11,7	;volatile
  2244                           
  2245                           ;main.c: 191:  INTCONbits.INTE = 1;
  2246  0540  160B               	bsf	11,4	;volatile
  2247  0541                     l137:	
  2248                           ;main.c: 192:     return;
  2249                           
  2250  0541  0008               	return
  2251  0542                     __end_of_setupExternalInterruption:
  2252                           
  2253                           	psect	text15
  2254  04C3                     __ptext15:	
  2255 ;; *************** function _setupADC *****************
  2256 ;; Defined at:
  2257 ;;		line 235 in file "main.c"
  2258 ;; Parameters:    Size  Location     Type
  2259 ;;		None
  2260 ;; Auto vars:     Size  Location     Type
  2261 ;;		None
  2262 ;; Return value:  Size  Location     Type
  2263 ;;                  1    wreg      void 
  2264 ;; Registers used:
  2265 ;;		status,2
  2266 ;; Tracked objects:
  2267 ;;		On entry : 0/0
  2268 ;;		On exit  : 0/0
  2269 ;;		Unchanged: 0/0
  2270 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2271 ;;      Params:         0       0       0       0       0
  2272 ;;      Locals:         0       0       0       0       0
  2273 ;;      Temps:          0       0       0       0       0
  2274 ;;      Totals:         0       0       0       0       0
  2275 ;;Total ram usage:        0 bytes
  2276 ;; Hardware stack levels used: 1
  2277 ;; Hardware stack levels required when called: 2
  2278 ;; This function calls:
  2279 ;;		Nothing
  2280 ;; This function is called by:
  2281 ;;		_main
  2282 ;; This function uses a non-reentrant model
  2283 ;;
  2284                           
  2285  04C3                     _setupADC:	
  2286                           ;psect for function _setupADC
  2287                           
  2288  04C3                     l1059:	
  2289                           ;incstack = 0
  2290                           ; Regs used in _setupADC: [status,2]
  2291                           
  2292                           
  2293                           ;main.c: 240:     ADCON1bits.PCFG0 = 1;
  2294  04C3  1683               	bsf	3,5	;RP0=1, select bank1
  2295  04C4  1303               	bcf	3,6	;RP1=0, select bank1
  2296  04C5  141F               	bsf	31,0	;volatile
  2297                           
  2298                           ;main.c: 241:     ADCON1bits.PCFG1 = 1;
  2299  04C6  149F               	bsf	31,1	;volatile
  2300                           
  2301                           ;main.c: 242:     ADCON1bits.PCFG2 = 1;
  2302  04C7  151F               	bsf	31,2	;volatile
  2303                           
  2304                           ;main.c: 243:     ADCON1bits.PCFG3 = 1;
  2305  04C8  159F               	bsf	31,3	;volatile
  2306                           
  2307                           ;main.c: 246:     ADCON1bits.ADCS2 = 1;
  2308  04C9  171F               	bsf	31,6	;volatile
  2309                           
  2310                           ;main.c: 247:     ADCON0bits.ADCS1 = 1;
  2311  04CA  1283               	bcf	3,5	;RP0=0, select bank0
  2312  04CB  1303               	bcf	3,6	;RP1=0, select bank0
  2313  04CC  179F               	bsf	31,7	;volatile
  2314                           
  2315                           ;main.c: 248:     ADCON0bits.ADCS0 = 0;
  2316  04CD  131F               	bcf	31,6	;volatile
  2317                           
  2318                           ;main.c: 251:     ADCON1bits.ADFM = 0;
  2319  04CE  1683               	bsf	3,5	;RP0=1, select bank1
  2320  04CF  1303               	bcf	3,6	;RP1=0, select bank1
  2321  04D0  139F               	bcf	31,7	;volatile
  2322  04D1                     l1061:
  2323                           
  2324                           ;main.c: 254:     ADRESL = 0;
  2325  04D1  019E               	clrf	30	;volatile
  2326                           
  2327                           ;main.c: 255:     ADRESH = 0;
  2328  04D2  1283               	bcf	3,5	;RP0=0, select bank0
  2329  04D3  1303               	bcf	3,6	;RP1=0, select bank0
  2330  04D4  019E               	clrf	30	;volatile
  2331  04D5                     l1063:
  2332                           
  2333                           ;main.c: 259:     ADCON0bits.ADON = 1;
  2334  04D5  141F               	bsf	31,0	;volatile
  2335  04D6                     l1065:
  2336                           
  2337                           ;main.c: 262:     ADCON0bits.CHS0 = 0;
  2338  04D6  119F               	bcf	31,3	;volatile
  2339  04D7                     l1067:
  2340                           
  2341                           ;main.c: 263:     ADCON0bits.CHS1 = 0;
  2342  04D7  121F               	bcf	31,4	;volatile
  2343  04D8                     l1069:
  2344                           
  2345                           ;main.c: 264:     ADCON0bits.CHS2 = 0;
  2346  04D8  129F               	bcf	31,5	;volatile
  2347  04D9                     l157:
  2348  04D9  0008               	return
  2349  04DA                     __end_of_setupADC:
  2350                           
  2351                           	psect	text16
  2352  03C2                     __ptext16:	
  2353 ;; *************** function _Lcd_Write_String *****************
  2354 ;; Defined at:
  2355 ;;		line 97 in file "./lcd.h"
  2356 ;; Parameters:    Size  Location     Type
  2357 ;;  a               1    wreg     PTR unsigned char 
  2358 ;;		 -> STR_2(12), STR_1(10), 
  2359 ;; Auto vars:     Size  Location     Type
  2360 ;;  a               1    2[BANK0 ] PTR unsigned char 
  2361 ;;		 -> STR_2(12), STR_1(10), 
  2362 ;;  i               2    0[BANK0 ] int 
  2363 ;; Return value:  Size  Location     Type
  2364 ;;                  1    wreg      void 
  2365 ;; Registers used:
  2366 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2367 ;; Tracked objects:
  2368 ;;		On entry : 0/0
  2369 ;;		On exit  : 0/0
  2370 ;;		Unchanged: 0/0
  2371 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2372 ;;      Params:         0       0       0       0       0
  2373 ;;      Locals:         0       3       0       0       0
  2374 ;;      Temps:          0       0       0       0       0
  2375 ;;      Totals:         0       3       0       0       0
  2376 ;;Total ram usage:        3 bytes
  2377 ;; Hardware stack levels used: 1
  2378 ;; Hardware stack levels required when called: 4
  2379 ;; This function calls:
  2380 ;;		_Lcd_Write_Char
  2381 ;; This function is called by:
  2382 ;;		_main
  2383 ;; This function uses a non-reentrant model
  2384 ;;
  2385                           
  2386  03C2                     _Lcd_Write_String:	
  2387                           ;psect for function _Lcd_Write_String
  2388                           
  2389                           
  2390                           ;incstack = 0
  2391                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2392                           ;Lcd_Write_String@a stored from wreg
  2393  03C2  1283               	bcf	3,5	;RP0=0, select bank0
  2394  03C3  1303               	bcf	3,6	;RP1=0, select bank0
  2395  03C4  00A2               	movwf	Lcd_Write_String@a
  2396  03C5                     l1585:
  2397                           
  2398                           ;./lcd.h: 97: void Lcd_Write_String(char *a);./lcd.h: 98: {;./lcd.h: 99:  int i;;./lcd.h
      +                          : 100:  for(i=0;a[i]!='\0';i++)
  2399  03C5  01A0               	clrf	Lcd_Write_String@i
  2400  03C6  01A1               	clrf	Lcd_Write_String@i+1
  2401  03C7  2BDD               	goto	l1591
  2402  03C8                     l1587:
  2403                           
  2404                           ;./lcd.h: 101:     Lcd_Write_Char(a[i]);
  2405  03C8  0820               	movf	Lcd_Write_String@i,w
  2406  03C9  0722               	addwf	Lcd_Write_String@a,w
  2407  03CA  0084               	movwf	4
  2408  03CB  120A  118A  2474  120A  118A  	fcall	stringdir
  2409  03D0  120A  118A  235A  120A  118A  	fcall	_Lcd_Write_Char
  2410  03D5                     l1589:
  2411  03D5  3001               	movlw	1
  2412  03D6  1283               	bcf	3,5	;RP0=0, select bank0
  2413  03D7  1303               	bcf	3,6	;RP1=0, select bank0
  2414  03D8  07A0               	addwf	Lcd_Write_String@i,f
  2415  03D9  1803               	skipnc
  2416  03DA  0AA1               	incf	Lcd_Write_String@i+1,f
  2417  03DB  3000               	movlw	0
  2418  03DC  07A1               	addwf	Lcd_Write_String@i+1,f
  2419  03DD                     l1591:
  2420  03DD  0820               	movf	Lcd_Write_String@i,w
  2421  03DE  0722               	addwf	Lcd_Write_String@a,w
  2422  03DF  0084               	movwf	4
  2423  03E0  120A  118A  2474  120A  118A  	fcall	stringdir
  2424  03E5  3A00               	xorlw	0
  2425  03E6  1D03               	skipz
  2426  03E7  2BE9               	goto	u1281
  2427  03E8  2BEA               	goto	u1280
  2428  03E9                     u1281:
  2429  03E9  2BC8               	goto	l1587
  2430  03EA                     u1280:
  2431  03EA                     l87:
  2432  03EA  0008               	return
  2433  03EB                     __end_of_Lcd_Write_String:
  2434                           
  2435                           	psect	text17
  2436  035A                     __ptext17:	
  2437 ;; *************** function _Lcd_Write_Char *****************
  2438 ;; Defined at:
  2439 ;;		line 81 in file "./lcd.h"
  2440 ;; Parameters:    Size  Location     Type
  2441 ;;  a               1    wreg     unsigned char 
  2442 ;; Auto vars:     Size  Location     Type
  2443 ;;  a               1    7[COMMON] unsigned char 
  2444 ;;  y               1    6[COMMON] unsigned char 
  2445 ;;  temp            1    5[COMMON] unsigned char 
  2446 ;; Return value:  Size  Location     Type
  2447 ;;                  1    wreg      void 
  2448 ;; Registers used:
  2449 ;;		wreg, status,2, status,0, pclath, cstack
  2450 ;; Tracked objects:
  2451 ;;		On entry : 0/0
  2452 ;;		On exit  : 0/0
  2453 ;;		Unchanged: 0/0
  2454 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2455 ;;      Params:         0       0       0       0       0
  2456 ;;      Locals:         3       0       0       0       0
  2457 ;;      Temps:          1       0       0       0       0
  2458 ;;      Totals:         4       0       0       0       0
  2459 ;;Total ram usage:        4 bytes
  2460 ;; Hardware stack levels used: 1
  2461 ;; Hardware stack levels required when called: 3
  2462 ;; This function calls:
  2463 ;;		_Lcd_Port
  2464 ;; This function is called by:
  2465 ;;		_Lcd_Write_String
  2466 ;; This function uses a non-reentrant model
  2467 ;;
  2468                           
  2469  035A                     _Lcd_Write_Char:	
  2470                           ;psect for function _Lcd_Write_Char
  2471                           
  2472                           
  2473                           ;incstack = 0
  2474                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  2475                           ;Lcd_Write_Char@a stored from wreg
  2476  035A  00F7               	movwf	Lcd_Write_Char@a
  2477  035B                     l1519:
  2478                           
  2479                           ;./lcd.h: 81: void Lcd_Write_Char(char a);./lcd.h: 82: {;./lcd.h: 83:    char temp,y;;./
      +                          lcd.h: 84:    temp = a&0x0F;
  2480  035B  0877               	movf	Lcd_Write_Char@a,w
  2481  035C  390F               	andlw	15
  2482  035D  00F4               	movwf	??_Lcd_Write_Char
  2483  035E  0874               	movf	??_Lcd_Write_Char,w
  2484  035F  00F5               	movwf	Lcd_Write_Char@temp
  2485                           
  2486                           ;./lcd.h: 85:    y = a&0xF0;
  2487  0360  0877               	movf	Lcd_Write_Char@a,w
  2488  0361  39F0               	andlw	240
  2489  0362  00F4               	movwf	??_Lcd_Write_Char
  2490  0363  0874               	movf	??_Lcd_Write_Char,w
  2491  0364  00F6               	movwf	Lcd_Write_Char@y
  2492  0365                     l1521:
  2493                           
  2494                           ;./lcd.h: 86:    RD2 = 1;
  2495  0365  1283               	bcf	3,5	;RP0=0, select bank0
  2496  0366  1303               	bcf	3,6	;RP1=0, select bank0
  2497  0367  1508               	bsf	8,2	;volatile
  2498  0368                     l1523:
  2499                           
  2500                           ;./lcd.h: 87:    Lcd_Port(y>>4);
  2501  0368  0876               	movf	Lcd_Write_Char@y,w
  2502  0369  00F4               	movwf	??_Lcd_Write_Char
  2503  036A  3004               	movlw	4
  2504  036B                     u1235:
  2505  036B  1003               	clrc
  2506  036C  0CF4               	rrf	??_Lcd_Write_Char,f
  2507  036D  3EFF               	addlw	-1
  2508  036E  1D03               	skipz
  2509  036F  2B6B               	goto	u1235
  2510  0370  0874               	movf	??_Lcd_Write_Char,w
  2511  0371  120A  118A  2433  120A  118A  	fcall	_Lcd_Port
  2512  0376                     l1525:
  2513                           
  2514                           ;./lcd.h: 88:    RD3 = 1;
  2515  0376  1283               	bcf	3,5	;RP0=0, select bank0
  2516  0377  1303               	bcf	3,6	;RP1=0, select bank0
  2517  0378  1588               	bsf	8,3	;volatile
  2518  0379                     l1527:
  2519                           
  2520                           ;./lcd.h: 89:    _delay((unsigned long)((40)*(4000000/4000000.0)));
  2521  0379  300D               	movlw	13
  2522  037A  00F4               	movwf	??_Lcd_Write_Char
  2523  037B                     u1337:
  2524  037B  0BF4               	decfsz	??_Lcd_Write_Char,f
  2525  037C  2B7B               	goto	u1337
  2526  037D                     l1529:
  2527                           
  2528                           ;./lcd.h: 90:    RD3 = 0;
  2529  037D  1283               	bcf	3,5	;RP0=0, select bank0
  2530  037E  1303               	bcf	3,6	;RP1=0, select bank0
  2531  037F  1188               	bcf	8,3	;volatile
  2532  0380                     l1531:
  2533                           
  2534                           ;./lcd.h: 91:    Lcd_Port(temp);
  2535  0380  0875               	movf	Lcd_Write_Char@temp,w
  2536  0381  120A  118A  2433  120A  118A  	fcall	_Lcd_Port
  2537  0386                     l1533:
  2538                           
  2539                           ;./lcd.h: 92:    RD3 = 1;
  2540  0386  1283               	bcf	3,5	;RP0=0, select bank0
  2541  0387  1303               	bcf	3,6	;RP1=0, select bank0
  2542  0388  1588               	bsf	8,3	;volatile
  2543  0389                     l1535:
  2544                           
  2545                           ;./lcd.h: 93:    _delay((unsigned long)((40)*(4000000/4000000.0)));
  2546  0389  300D               	movlw	13
  2547  038A  00F4               	movwf	??_Lcd_Write_Char
  2548  038B                     u1347:
  2549  038B  0BF4               	decfsz	??_Lcd_Write_Char,f
  2550  038C  2B8B               	goto	u1347
  2551  038D                     l1537:
  2552                           
  2553                           ;./lcd.h: 94:    RD3 = 0;
  2554  038D  1283               	bcf	3,5	;RP0=0, select bank0
  2555  038E  1303               	bcf	3,6	;RP1=0, select bank0
  2556  038F  1188               	bcf	8,3	;volatile
  2557  0390                     l81:
  2558  0390  0008               	return
  2559  0391                     __end_of_Lcd_Write_Char:
  2560                           
  2561                           	psect	text18
  2562  0302                     __ptext18:	
  2563 ;; *************** function _Lcd_Set_Cursor *****************
  2564 ;; Defined at:
  2565 ;;		line 41 in file "./lcd.h"
  2566 ;; Parameters:    Size  Location     Type
  2567 ;;  a               1    wreg     unsigned char 
  2568 ;;  b               1    7[COMMON] unsigned char 
  2569 ;; Auto vars:     Size  Location     Type
  2570 ;;  a               1    2[BANK0 ] unsigned char 
  2571 ;;  temp            1    5[BANK0 ] unsigned char 
  2572 ;;  y               1    4[BANK0 ] unsigned char 
  2573 ;;  z               1    3[BANK0 ] unsigned char 
  2574 ;; Return value:  Size  Location     Type
  2575 ;;                  1    wreg      void 
  2576 ;; Registers used:
  2577 ;;		wreg, status,2, status,0, pclath, cstack
  2578 ;; Tracked objects:
  2579 ;;		On entry : 0/0
  2580 ;;		On exit  : 0/0
  2581 ;;		Unchanged: 0/0
  2582 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2583 ;;      Params:         1       0       0       0       0
  2584 ;;      Locals:         0       4       0       0       0
  2585 ;;      Temps:          0       2       0       0       0
  2586 ;;      Totals:         1       6       0       0       0
  2587 ;;Total ram usage:        7 bytes
  2588 ;; Hardware stack levels used: 1
  2589 ;; Hardware stack levels required when called: 4
  2590 ;; This function calls:
  2591 ;;		_Lcd_Cmd
  2592 ;; This function is called by:
  2593 ;;		_main
  2594 ;; This function uses a non-reentrant model
  2595 ;;
  2596                           
  2597  0302                     _Lcd_Set_Cursor:	
  2598                           ;psect for function _Lcd_Set_Cursor
  2599                           
  2600                           
  2601                           ;incstack = 0
  2602                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  2603                           ;Lcd_Set_Cursor@a stored from wreg
  2604  0302  1283               	bcf	3,5	;RP0=0, select bank0
  2605  0303  1303               	bcf	3,6	;RP1=0, select bank0
  2606  0304  00A2               	movwf	Lcd_Set_Cursor@a
  2607  0305                     l1555:
  2608                           
  2609                           ;./lcd.h: 41: void Lcd_Set_Cursor(char a, char b);./lcd.h: 42: {;./lcd.h: 43:  char temp
      +                          ,z,y;;./lcd.h: 44:  if(a == 1)
  2610  0305  0322               	decf	Lcd_Set_Cursor@a,w
  2611  0306  1D03               	btfss	3,2
  2612  0307  2B09               	goto	u1241
  2613  0308  2B0A               	goto	u1240
  2614  0309                     u1241:
  2615  0309  2B2F               	goto	l1565
  2616  030A                     u1240:
  2617  030A                     l1557:
  2618                           
  2619                           ;./lcd.h: 45:  {;./lcd.h: 46:    temp = 0x80 + b - 1;
  2620  030A  0877               	movf	Lcd_Set_Cursor@b,w
  2621  030B  3E7F               	addlw	127
  2622  030C  00A0               	movwf	??_Lcd_Set_Cursor
  2623  030D  0820               	movf	??_Lcd_Set_Cursor,w
  2624  030E  00A5               	movwf	Lcd_Set_Cursor@temp
  2625                           
  2626                           ;./lcd.h: 47:   z = temp>>4;
  2627  030F  0825               	movf	Lcd_Set_Cursor@temp,w
  2628  0310  00A0               	movwf	??_Lcd_Set_Cursor
  2629  0311  3004               	movlw	4
  2630  0312                     u1255:
  2631  0312  1003               	clrc
  2632  0313  0CA0               	rrf	??_Lcd_Set_Cursor,f
  2633  0314  3EFF               	addlw	-1
  2634  0315  1D03               	skipz
  2635  0316  2B12               	goto	u1255
  2636  0317  0820               	movf	??_Lcd_Set_Cursor,w
  2637  0318  00A1               	movwf	??_Lcd_Set_Cursor+1
  2638  0319  0821               	movf	??_Lcd_Set_Cursor+1,w
  2639  031A  00A3               	movwf	Lcd_Set_Cursor@z
  2640  031B                     l1559:
  2641                           
  2642                           ;./lcd.h: 48:   y = temp & 0x0F;
  2643  031B  0825               	movf	Lcd_Set_Cursor@temp,w
  2644  031C  390F               	andlw	15
  2645  031D  00A0               	movwf	??_Lcd_Set_Cursor
  2646  031E  0820               	movf	??_Lcd_Set_Cursor,w
  2647  031F  00A4               	movwf	Lcd_Set_Cursor@y
  2648  0320                     l1561:
  2649                           
  2650                           ;./lcd.h: 49:   Lcd_Cmd(z);
  2651  0320  0823               	movf	Lcd_Set_Cursor@z,w
  2652  0321  120A  118A  2490  120A  118A  	fcall	_Lcd_Cmd
  2653  0326                     l1563:
  2654                           
  2655                           ;./lcd.h: 50:   Lcd_Cmd(y);
  2656  0326  1283               	bcf	3,5	;RP0=0, select bank0
  2657  0327  1303               	bcf	3,6	;RP1=0, select bank0
  2658  0328  0824               	movf	Lcd_Set_Cursor@y,w
  2659  0329  120A  118A  2490  120A  118A  	fcall	_Lcd_Cmd
  2660                           
  2661                           ;./lcd.h: 51:  }
  2662  032E  2B59               	goto	l75
  2663  032F                     l1565:
  2664  032F  3002               	movlw	2
  2665  0330  0622               	xorwf	Lcd_Set_Cursor@a,w
  2666  0331  1D03               	btfss	3,2
  2667  0332  2B34               	goto	u1261
  2668  0333  2B35               	goto	u1260
  2669  0334                     u1261:
  2670  0334  2B59               	goto	l75
  2671  0335                     u1260:
  2672  0335                     l1567:
  2673                           
  2674                           ;./lcd.h: 53:  {;./lcd.h: 54:   temp = 0xC0 + b - 1;
  2675  0335  0877               	movf	Lcd_Set_Cursor@b,w
  2676  0336  3EBF               	addlw	191
  2677  0337  00A0               	movwf	??_Lcd_Set_Cursor
  2678  0338  0820               	movf	??_Lcd_Set_Cursor,w
  2679  0339  00A5               	movwf	Lcd_Set_Cursor@temp
  2680                           
  2681                           ;./lcd.h: 55:   z = temp>>4;
  2682  033A  0825               	movf	Lcd_Set_Cursor@temp,w
  2683  033B  00A0               	movwf	??_Lcd_Set_Cursor
  2684  033C  3004               	movlw	4
  2685  033D                     u1275:
  2686  033D  1003               	clrc
  2687  033E  0CA0               	rrf	??_Lcd_Set_Cursor,f
  2688  033F  3EFF               	addlw	-1
  2689  0340  1D03               	skipz
  2690  0341  2B3D               	goto	u1275
  2691  0342  0820               	movf	??_Lcd_Set_Cursor,w
  2692  0343  00A1               	movwf	??_Lcd_Set_Cursor+1
  2693  0344  0821               	movf	??_Lcd_Set_Cursor+1,w
  2694  0345  00A3               	movwf	Lcd_Set_Cursor@z
  2695  0346                     l1569:
  2696                           
  2697                           ;./lcd.h: 56:   y = temp & 0x0F;
  2698  0346  0825               	movf	Lcd_Set_Cursor@temp,w
  2699  0347  390F               	andlw	15
  2700  0348  00A0               	movwf	??_Lcd_Set_Cursor
  2701  0349  0820               	movf	??_Lcd_Set_Cursor,w
  2702  034A  00A4               	movwf	Lcd_Set_Cursor@y
  2703  034B                     l1571:
  2704                           
  2705                           ;./lcd.h: 57:   Lcd_Cmd(z);
  2706  034B  0823               	movf	Lcd_Set_Cursor@z,w
  2707  034C  120A  118A  2490  120A  118A  	fcall	_Lcd_Cmd
  2708  0351                     l1573:
  2709                           
  2710                           ;./lcd.h: 58:   Lcd_Cmd(y);
  2711  0351  1283               	bcf	3,5	;RP0=0, select bank0
  2712  0352  1303               	bcf	3,6	;RP1=0, select bank0
  2713  0353  0824               	movf	Lcd_Set_Cursor@y,w
  2714  0354  120A  118A  2490  120A  118A  	fcall	_Lcd_Cmd
  2715  0359                     l75:
  2716  0359  0008               	return
  2717  035A                     __end_of_Lcd_Set_Cursor:
  2718                           
  2719                           	psect	text19
  2720  024B                     __ptext19:	
  2721 ;; *************** function _Lcd_Init *****************
  2722 ;; Defined at:
  2723 ;;		line 62 in file "./lcd.h"
  2724 ;; Parameters:    Size  Location     Type
  2725 ;;		None
  2726 ;; Auto vars:     Size  Location     Type
  2727 ;;		None
  2728 ;; Return value:  Size  Location     Type
  2729 ;;                  1    wreg      void 
  2730 ;; Registers used:
  2731 ;;		wreg, status,2, status,0, pclath, cstack
  2732 ;; Tracked objects:
  2733 ;;		On entry : 0/0
  2734 ;;		On exit  : 0/0
  2735 ;;		Unchanged: 0/0
  2736 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2737 ;;      Params:         0       0       0       0       0
  2738 ;;      Locals:         0       0       0       0       0
  2739 ;;      Temps:          2       0       0       0       0
  2740 ;;      Totals:         2       0       0       0       0
  2741 ;;Total ram usage:        2 bytes
  2742 ;; Hardware stack levels used: 1
  2743 ;; Hardware stack levels required when called: 4
  2744 ;; This function calls:
  2745 ;;		_Lcd_Cmd
  2746 ;;		_Lcd_Port
  2747 ;; This function is called by:
  2748 ;;		_main
  2749 ;; This function uses a non-reentrant model
  2750 ;;
  2751                           
  2752  024B                     _Lcd_Init:	
  2753                           ;psect for function _Lcd_Init
  2754                           
  2755  024B                     l1575:	
  2756                           ;incstack = 0
  2757                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  2758                           
  2759                           
  2760                           ;./lcd.h: 64:   Lcd_Port(0x00);
  2761  024B  3000               	movlw	0
  2762  024C  120A  118A  2433  120A  118A  	fcall	_Lcd_Port
  2763  0251                     l1577:
  2764                           
  2765                           ;./lcd.h: 65:    _delay((unsigned long)((20)*(4000000/4000.0)));
  2766  0251  301A               	movlw	26
  2767  0252  00F8               	movwf	??_Lcd_Init+1
  2768  0253  30F8               	movlw	248
  2769  0254  00F7               	movwf	??_Lcd_Init
  2770  0255                     u1357:
  2771  0255  0BF7               	decfsz	??_Lcd_Init,f
  2772  0256  2A55               	goto	u1357
  2773  0257  0BF8               	decfsz	??_Lcd_Init+1,f
  2774  0258  2A55               	goto	u1357
  2775  0259  0000               	nop
  2776  025A                     l1579:
  2777                           
  2778                           ;./lcd.h: 66:   Lcd_Cmd(0x03);
  2779  025A  3003               	movlw	3
  2780  025B  120A  118A  2490  120A  118A  	fcall	_Lcd_Cmd
  2781                           
  2782                           ;./lcd.h: 67:  _delay((unsigned long)((5)*(4000000/4000.0)));
  2783  0260  3007               	movlw	7
  2784  0261  00F8               	movwf	??_Lcd_Init+1
  2785  0262  307D               	movlw	125
  2786  0263  00F7               	movwf	??_Lcd_Init
  2787  0264                     u1367:
  2788  0264  0BF7               	decfsz	??_Lcd_Init,f
  2789  0265  2A64               	goto	u1367
  2790  0266  0BF8               	decfsz	??_Lcd_Init+1,f
  2791  0267  2A64               	goto	u1367
  2792  0268                     l1581:
  2793                           
  2794                           ;./lcd.h: 68:   Lcd_Cmd(0x03);
  2795  0268  3003               	movlw	3
  2796  0269  120A  118A  2490  120A  118A  	fcall	_Lcd_Cmd
  2797  026E                     l1583:
  2798                           
  2799                           ;./lcd.h: 69:  _delay((unsigned long)((11)*(4000000/4000.0)));
  2800  026E  300F               	movlw	15
  2801  026F  00F8               	movwf	??_Lcd_Init+1
  2802  0270  3047               	movlw	71
  2803  0271  00F7               	movwf	??_Lcd_Init
  2804  0272                     u1377:
  2805  0272  0BF7               	decfsz	??_Lcd_Init,f
  2806  0273  2A72               	goto	u1377
  2807  0274  0BF8               	decfsz	??_Lcd_Init+1,f
  2808  0275  2A72               	goto	u1377
  2809  0276  2A77               	nop2
  2810                           
  2811                           ;./lcd.h: 70:   Lcd_Cmd(0x03);
  2812  0277  3003               	movlw	3
  2813  0278  120A  118A  2490  120A  118A  	fcall	_Lcd_Cmd
  2814                           
  2815                           ;./lcd.h: 72:   Lcd_Cmd(0x02);
  2816  027D  3002               	movlw	2
  2817  027E  120A  118A  2490  120A  118A  	fcall	_Lcd_Cmd
  2818                           
  2819                           ;./lcd.h: 73:   Lcd_Cmd(0x02);
  2820  0283  3002               	movlw	2
  2821  0284  120A  118A  2490  120A  118A  	fcall	_Lcd_Cmd
  2822                           
  2823                           ;./lcd.h: 74:   Lcd_Cmd(0x08);
  2824  0289  3008               	movlw	8
  2825  028A  120A  118A  2490  120A  118A  	fcall	_Lcd_Cmd
  2826                           
  2827                           ;./lcd.h: 75:   Lcd_Cmd(0x00);
  2828  028F  3000               	movlw	0
  2829  0290  120A  118A  2490  120A  118A  	fcall	_Lcd_Cmd
  2830                           
  2831                           ;./lcd.h: 76:   Lcd_Cmd(0x0C);
  2832  0295  300C               	movlw	12
  2833  0296  120A  118A  2490  120A  118A  	fcall	_Lcd_Cmd
  2834                           
  2835                           ;./lcd.h: 77:   Lcd_Cmd(0x00);
  2836  029B  3000               	movlw	0
  2837  029C  120A  118A  2490  120A  118A  	fcall	_Lcd_Cmd
  2838                           
  2839                           ;./lcd.h: 78:   Lcd_Cmd(0x06);
  2840  02A1  3006               	movlw	6
  2841  02A2  120A  118A  2490  120A  118A  	fcall	_Lcd_Cmd
  2842  02A7                     l78:
  2843  02A7  0008               	return
  2844  02A8                     __end_of_Lcd_Init:
  2845                           
  2846                           	psect	text20
  2847  0515                     __ptext20:	
  2848 ;; *************** function _Lcd_Clear *****************
  2849 ;; Defined at:
  2850 ;;		line 35 in file "./lcd.h"
  2851 ;; Parameters:    Size  Location     Type
  2852 ;;		None
  2853 ;; Auto vars:     Size  Location     Type
  2854 ;;		None
  2855 ;; Return value:  Size  Location     Type
  2856 ;;                  1    wreg      void 
  2857 ;; Registers used:
  2858 ;;		wreg, status,2, status,0, pclath, cstack
  2859 ;; Tracked objects:
  2860 ;;		On entry : 0/0
  2861 ;;		On exit  : 0/0
  2862 ;;		Unchanged: 0/0
  2863 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2864 ;;      Params:         0       0       0       0       0
  2865 ;;      Locals:         0       0       0       0       0
  2866 ;;      Temps:          0       0       0       0       0
  2867 ;;      Totals:         0       0       0       0       0
  2868 ;;Total ram usage:        0 bytes
  2869 ;; Hardware stack levels used: 1
  2870 ;; Hardware stack levels required when called: 4
  2871 ;; This function calls:
  2872 ;;		_Lcd_Cmd
  2873 ;; This function is called by:
  2874 ;;		_main
  2875 ;; This function uses a non-reentrant model
  2876 ;;
  2877                           
  2878  0515                     _Lcd_Clear:	
  2879                           ;psect for function _Lcd_Clear
  2880                           
  2881  0515                     l1553:	
  2882                           ;incstack = 0
  2883                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  2884                           
  2885                           
  2886                           ;./lcd.h: 37:  Lcd_Cmd(0);
  2887  0515  3000               	movlw	0
  2888  0516  120A  118A  2490  120A  118A  	fcall	_Lcd_Cmd
  2889                           
  2890                           ;./lcd.h: 38:  Lcd_Cmd(1);
  2891  051B  3001               	movlw	1
  2892  051C  120A  118A  2490  120A  118A  	fcall	_Lcd_Cmd
  2893  0521                     l69:
  2894  0521  0008               	return
  2895  0522                     __end_of_Lcd_Clear:
  2896                           
  2897                           	psect	text21
  2898  0490                     __ptext21:	
  2899 ;; *************** function _Lcd_Cmd *****************
  2900 ;; Defined at:
  2901 ;;		line 26 in file "./lcd.h"
  2902 ;; Parameters:    Size  Location     Type
  2903 ;;  a               1    wreg     unsigned char 
  2904 ;; Auto vars:     Size  Location     Type
  2905 ;;  a               1    6[COMMON] unsigned char 
  2906 ;; Return value:  Size  Location     Type
  2907 ;;                  1    wreg      void 
  2908 ;; Registers used:
  2909 ;;		wreg, status,2, status,0, pclath, cstack
  2910 ;; Tracked objects:
  2911 ;;		On entry : 0/0
  2912 ;;		On exit  : 0/0
  2913 ;;		Unchanged: 0/0
  2914 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2915 ;;      Params:         0       0       0       0       0
  2916 ;;      Locals:         1       0       0       0       0
  2917 ;;      Temps:          2       0       0       0       0
  2918 ;;      Totals:         3       0       0       0       0
  2919 ;;Total ram usage:        3 bytes
  2920 ;; Hardware stack levels used: 1
  2921 ;; Hardware stack levels required when called: 3
  2922 ;; This function calls:
  2923 ;;		_Lcd_Port
  2924 ;; This function is called by:
  2925 ;;		_Lcd_Clear
  2926 ;;		_Lcd_Set_Cursor
  2927 ;;		_Lcd_Init
  2928 ;;		_Lcd_Shift_Right
  2929 ;;		_Lcd_Shift_Left
  2930 ;; This function uses a non-reentrant model
  2931 ;;
  2932                           
  2933  0490                     _Lcd_Cmd:	
  2934                           ;psect for function _Lcd_Cmd
  2935                           
  2936                           
  2937                           ;incstack = 0
  2938                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  2939                           ;Lcd_Cmd@a stored from wreg
  2940  0490  00F6               	movwf	Lcd_Cmd@a
  2941  0491                     l1509:
  2942                           
  2943                           ;./lcd.h: 26: void Lcd_Cmd(char a);./lcd.h: 27: {;./lcd.h: 28:  RD2 = 0;
  2944  0491  1283               	bcf	3,5	;RP0=0, select bank0
  2945  0492  1303               	bcf	3,6	;RP1=0, select bank0
  2946  0493  1108               	bcf	8,2	;volatile
  2947  0494                     l1511:
  2948                           
  2949                           ;./lcd.h: 29:  Lcd_Port(a);
  2950  0494  0876               	movf	Lcd_Cmd@a,w
  2951  0495  120A  118A  2433  120A  118A  	fcall	_Lcd_Port
  2952  049A                     l1513:
  2953                           
  2954                           ;./lcd.h: 30:  RD3 = 1;
  2955  049A  1283               	bcf	3,5	;RP0=0, select bank0
  2956  049B  1303               	bcf	3,6	;RP1=0, select bank0
  2957  049C  1588               	bsf	8,3	;volatile
  2958  049D                     l1515:
  2959                           
  2960                           ;./lcd.h: 31:         _delay((unsigned long)((4)*(4000000/4000.0)));
  2961  049D  3006               	movlw	6
  2962  049E  00F5               	movwf	??_Lcd_Cmd+1
  2963  049F  3030               	movlw	48
  2964  04A0  00F4               	movwf	??_Lcd_Cmd
  2965  04A1                     u1387:
  2966  04A1  0BF4               	decfsz	??_Lcd_Cmd,f
  2967  04A2  2CA1               	goto	u1387
  2968  04A3  0BF5               	decfsz	??_Lcd_Cmd+1,f
  2969  04A4  2CA1               	goto	u1387
  2970  04A5  0000               	nop
  2971  04A6                     l1517:
  2972                           
  2973                           ;./lcd.h: 32:         RD3 = 0;
  2974  04A6  1283               	bcf	3,5	;RP0=0, select bank0
  2975  04A7  1303               	bcf	3,6	;RP1=0, select bank0
  2976  04A8  1188               	bcf	8,3	;volatile
  2977  04A9                     l66:
  2978  04A9  0008               	return
  2979  04AA                     __end_of_Lcd_Cmd:
  2980                           
  2981                           	psect	text22
  2982  0433                     __ptext22:	
  2983 ;; *************** function _Lcd_Port *****************
  2984 ;; Defined at:
  2985 ;;		line 4 in file "./lcd.h"
  2986 ;; Parameters:    Size  Location     Type
  2987 ;;  a               1    wreg     unsigned char 
  2988 ;; Auto vars:     Size  Location     Type
  2989 ;;  a               1    3[COMMON] unsigned char 
  2990 ;; Return value:  Size  Location     Type
  2991 ;;                  1    wreg      void 
  2992 ;; Registers used:
  2993 ;;		wreg
  2994 ;; Tracked objects:
  2995 ;;		On entry : 0/0
  2996 ;;		On exit  : 0/0
  2997 ;;		Unchanged: 0/0
  2998 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2999 ;;      Params:         0       0       0       0       0
  3000 ;;      Locals:         1       0       0       0       0
  3001 ;;      Temps:          0       0       0       0       0
  3002 ;;      Totals:         1       0       0       0       0
  3003 ;;Total ram usage:        1 bytes
  3004 ;; Hardware stack levels used: 1
  3005 ;; Hardware stack levels required when called: 2
  3006 ;; This function calls:
  3007 ;;		Nothing
  3008 ;; This function is called by:
  3009 ;;		_Lcd_Cmd
  3010 ;;		_Lcd_Init
  3011 ;;		_Lcd_Write_Char
  3012 ;; This function uses a non-reentrant model
  3013 ;;
  3014                           
  3015  0433                     _Lcd_Port:	
  3016                           ;psect for function _Lcd_Port
  3017                           
  3018                           
  3019                           ;incstack = 0
  3020                           ; Regs used in _Lcd_Port: [wreg]
  3021                           ;Lcd_Port@a stored from wreg
  3022  0433  00F3               	movwf	Lcd_Port@a
  3023  0434                     l1495:
  3024                           
  3025                           ;./lcd.h: 4: void Lcd_Port(char a);./lcd.h: 5: {;./lcd.h: 6:  if(a & 1)
  3026  0434  1C73               	btfss	Lcd_Port@a,0
  3027  0435  2C37               	goto	u1191
  3028  0436  2C38               	goto	u1190
  3029  0437                     u1191:
  3030  0437  2C3C               	goto	l55
  3031  0438                     u1190:
  3032  0438                     l1497:
  3033                           
  3034                           ;./lcd.h: 7:   RD4 = 1;
  3035  0438  1283               	bcf	3,5	;RP0=0, select bank0
  3036  0439  1303               	bcf	3,6	;RP1=0, select bank0
  3037  043A  1608               	bsf	8,4	;volatile
  3038  043B  2C3F               	goto	l56
  3039  043C                     l55:	
  3040                           ;./lcd.h: 8:  else
  3041                           
  3042                           
  3043                           ;./lcd.h: 9:   RD4 = 0;
  3044  043C  1283               	bcf	3,5	;RP0=0, select bank0
  3045  043D  1303               	bcf	3,6	;RP1=0, select bank0
  3046  043E  1208               	bcf	8,4	;volatile
  3047  043F                     l56:
  3048                           
  3049                           ;./lcd.h: 11:  if(a & 2)
  3050  043F  1CF3               	btfss	Lcd_Port@a,1
  3051  0440  2C42               	goto	u1201
  3052  0441  2C43               	goto	u1200
  3053  0442                     u1201:
  3054  0442  2C45               	goto	l57
  3055  0443                     u1200:
  3056  0443                     l1499:
  3057                           
  3058                           ;./lcd.h: 12:   RD5 = 1;
  3059  0443  1688               	bsf	8,5	;volatile
  3060  0444  2C46               	goto	l58
  3061  0445                     l57:	
  3062                           ;./lcd.h: 13:  else
  3063                           
  3064                           
  3065                           ;./lcd.h: 14:   RD5 = 0;
  3066  0445  1288               	bcf	8,5	;volatile
  3067  0446                     l58:
  3068                           
  3069                           ;./lcd.h: 16:  if(a & 4)
  3070  0446  1D73               	btfss	Lcd_Port@a,2
  3071  0447  2C49               	goto	u1211
  3072  0448  2C4A               	goto	u1210
  3073  0449                     u1211:
  3074  0449  2C4C               	goto	l59
  3075  044A                     u1210:
  3076  044A                     l1501:
  3077                           
  3078                           ;./lcd.h: 17:   RD6 = 1;
  3079  044A  1708               	bsf	8,6	;volatile
  3080  044B  2C4D               	goto	l60
  3081  044C                     l59:	
  3082                           ;./lcd.h: 18:  else
  3083                           
  3084                           
  3085                           ;./lcd.h: 19:   RD6 = 0;
  3086  044C  1308               	bcf	8,6	;volatile
  3087  044D                     l60:
  3088                           
  3089                           ;./lcd.h: 21:  if(a & 8)
  3090  044D  1DF3               	btfss	Lcd_Port@a,3
  3091  044E  2C50               	goto	u1221
  3092  044F  2C51               	goto	u1220
  3093  0450                     u1221:
  3094  0450  2C53               	goto	l61
  3095  0451                     u1220:
  3096  0451                     l1503:
  3097                           
  3098                           ;./lcd.h: 22:   RD7 = 1;
  3099  0451  1788               	bsf	8,7	;volatile
  3100  0452  2C54               	goto	l63
  3101  0453                     l61:	
  3102                           ;./lcd.h: 23:  else
  3103                           
  3104                           
  3105                           ;./lcd.h: 24:   RD7 = 0;
  3106  0453  1388               	bcf	8,7	;volatile
  3107  0454                     l63:
  3108  0454  0008               	return
  3109  0455                     __end_of_Lcd_Port:
  3110                           
  3111                           	psect	text23
  3112  0504                     __ptext23:	
  3113 ;; *************** function _interrupcao *****************
  3114 ;; Defined at:
  3115 ;;		line 180 in file "main.c"
  3116 ;; Parameters:    Size  Location     Type
  3117 ;;		None
  3118 ;; Auto vars:     Size  Location     Type
  3119 ;;		None
  3120 ;; Return value:  Size  Location     Type
  3121 ;;                  1    wreg      void 
  3122 ;; Registers used:
  3123 ;;		wreg, status,2, status,0, pclath, cstack
  3124 ;; Tracked objects:
  3125 ;;		On entry : 0/0
  3126 ;;		On exit  : 0/0
  3127 ;;		Unchanged: 0/0
  3128 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3129 ;;      Params:         0       0       0       0       0
  3130 ;;      Locals:         0       0       0       0       0
  3131 ;;      Temps:          2       0       0       0       0
  3132 ;;      Totals:         2       0       0       0       0
  3133 ;;Total ram usage:        2 bytes
  3134 ;; Hardware stack levels used: 1
  3135 ;; Hardware stack levels required when called: 1
  3136 ;; This function calls:
  3137 ;;		_handleExternalInterruption
  3138 ;;		_handleTimerInterruption
  3139 ;; This function is called by:
  3140 ;;		Interrupt level 1
  3141 ;; This function uses a non-reentrant model
  3142 ;;
  3143                           
  3144  0504                     _interrupcao:	
  3145                           ;psect for function _interrupcao
  3146                           
  3147  0504                     i1l1409:
  3148                           
  3149                           ;main.c: 182:     handleTimerInterruption();
  3150  0504  120A  118A  2391  120A  118A  	fcall	_handleTimerInterruption
  3151  0509                     i1l1411:
  3152                           
  3153                           ;main.c: 183:     handleExternalInterruption();
  3154  0509  120A  118A  252E  120A  118A  	fcall	_handleExternalInterruption
  3155  050E                     i1l134:
  3156  050E  0872               	movf	??_interrupcao+1,w
  3157  050F  008A               	movwf	10
  3158  0510  0E71               	swapf	??_interrupcao,w
  3159  0511  0083               	movwf	3
  3160  0512  0EFE               	swapf	btemp,f
  3161  0513  0E7E               	swapf	btemp,w
  3162  0514  0009               	retfie
  3163  0515                     __end_of_interrupcao:
  3164                           
  3165                           	psect	intentry
  3166  0004                     __pintentry:	
  3167                           ;incstack = 0
  3168                           ; Regs used in _interrupcao: [wreg+status,2+status,0+pclath+cstack]
  3169                           
  3170  0004                     interrupt_function:
  3171  007E                     saved_w	set	btemp
  3172  0004  00FE               	movwf	btemp
  3173  0005  0E03               	swapf	3,w
  3174  0006  00F1               	movwf	??_interrupcao
  3175  0007  080A               	movf	10,w
  3176  0008  00F2               	movwf	??_interrupcao+1
  3177  0009  120A  118A  2D04   	ljmp	_interrupcao
  3178                           
  3179                           	psect	text24
  3180  0391                     __ptext24:	
  3181 ;; *************** function _handleTimerInterruption *****************
  3182 ;; Defined at:
  3183 ;;		line 131 in file "main.c"
  3184 ;; Parameters:    Size  Location     Type
  3185 ;;		None
  3186 ;; Auto vars:     Size  Location     Type
  3187 ;;		None
  3188 ;; Return value:  Size  Location     Type
  3189 ;;                  1    wreg      void 
  3190 ;; Registers used:
  3191 ;;		wreg, status,2, status,0
  3192 ;; Tracked objects:
  3193 ;;		On entry : 0/0
  3194 ;;		On exit  : 0/0
  3195 ;;		Unchanged: 0/0
  3196 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3197 ;;      Params:         0       0       0       0       0
  3198 ;;      Locals:         0       0       0       0       0
  3199 ;;      Temps:          1       0       0       0       0
  3200 ;;      Totals:         1       0       0       0       0
  3201 ;;Total ram usage:        1 bytes
  3202 ;; Hardware stack levels used: 1
  3203 ;; This function calls:
  3204 ;;		Nothing
  3205 ;; This function is called by:
  3206 ;;		_interrupcao
  3207 ;; This function uses a non-reentrant model
  3208 ;;
  3209                           
  3210  0391                     _handleTimerInterruption:	
  3211                           ;psect for function _handleTimerInterruption
  3212                           
  3213  0391                     i1l1375:	
  3214                           ;incstack = 0
  3215                           ; Regs used in _handleTimerInterruption: [wreg+status,2+status,0]
  3216                           
  3217                           
  3218                           ;main.c: 133:     if(TMR1IF){
  3219  0391  1283               	bcf	3,5	;RP0=0, select bank0
  3220  0392  1303               	bcf	3,6	;RP1=0, select bank0
  3221  0393  1C0C               	btfss	12,0	;volatile
  3222  0394  2B96               	goto	u105_21
  3223  0395  2B97               	goto	u105_20
  3224  0396                     u105_21:
  3225  0396  2BC1               	goto	i1l119
  3226  0397                     u105_20:
  3227  0397                     i1l1377:
  3228                           
  3229                           ;main.c: 134:         if(irrigacao_ativa){
  3230  0397  0879               	movf	_irrigacao_ativa,w
  3231  0398  047A               	iorwf	_irrigacao_ativa+1,w
  3232  0399  1903               	btfsc	3,2
  3233  039A  2B9C               	goto	u106_21
  3234  039B  2B9D               	goto	u106_20
  3235  039C                     u106_21:
  3236  039C  2BB7               	goto	i1l1385
  3237  039D                     u106_20:
  3238  039D                     i1l1379:
  3239                           
  3240                           ;main.c: 136:             timer_counter++;
  3241  039D  3001               	movlw	1
  3242  039E  07C8               	addwf	_timer_counter,f
  3243  039F  1803               	skipnc
  3244  03A0  0AC9               	incf	_timer_counter+1,f
  3245  03A1  3000               	movlw	0
  3246  03A2  07C9               	addwf	_timer_counter+1,f
  3247                           
  3248                           ;main.c: 137:             if(timer_counter_max <= timer_counter){
  3249  03A3  0849               	movf	_timer_counter+1,w
  3250  03A4  3A80               	xorlw	128
  3251  03A5  00F0               	movwf	??_handleTimerInterruption
  3252  03A6  0847               	movf	_timer_counter_max+1,w
  3253  03A7  3A80               	xorlw	128
  3254  03A8  0270               	subwf	??_handleTimerInterruption,w
  3255  03A9  1D03               	skipz
  3256  03AA  2BAD               	goto	u107_25
  3257  03AB  0846               	movf	_timer_counter_max,w
  3258  03AC  0248               	subwf	_timer_counter,w
  3259  03AD                     u107_25:
  3260  03AD  1C03               	skipc
  3261  03AE  2BB0               	goto	u107_21
  3262  03AF  2BB1               	goto	u107_20
  3263  03B0                     u107_21:
  3264  03B0  2BBA               	goto	i1l1389
  3265  03B1                     u107_20:
  3266  03B1                     i1l1381:
  3267                           
  3268                           ;main.c: 138:                 PORTBbits.RB1 = 0;
  3269  03B1  1283               	bcf	3,5	;RP0=0, select bank0
  3270  03B2  1303               	bcf	3,6	;RP1=0, select bank0
  3271  03B3  1086               	bcf	6,1	;volatile
  3272  03B4                     i1l1383:
  3273                           
  3274                           ;main.c: 139:                 irrigacao_ativa = 0;
  3275  03B4  01F9               	clrf	_irrigacao_ativa
  3276  03B5  01FA               	clrf	_irrigacao_ativa+1
  3277  03B6  2BBA               	goto	i1l1389
  3278  03B7                     i1l1385:
  3279                           
  3280                           ;main.c: 143:             timer_counter = 0;
  3281  03B7  01C8               	clrf	_timer_counter
  3282  03B8  01C9               	clrf	_timer_counter+1
  3283  03B9                     i1l1387:
  3284                           
  3285                           ;main.c: 144:             PORTBbits.RB1 = 0;
  3286  03B9  1086               	bcf	6,1	;volatile
  3287  03BA                     i1l1389:
  3288                           
  3289                           ;main.c: 146:         PIR1bits.TMR1IF = 0;
  3290  03BA  1283               	bcf	3,5	;RP0=0, select bank0
  3291  03BB  1303               	bcf	3,6	;RP1=0, select bank0
  3292  03BC  100C               	bcf	12,0	;volatile
  3293  03BD                     i1l1391:
  3294                           
  3295                           ;main.c: 147:         TMR1H = 0x0B;
  3296  03BD  300B               	movlw	11
  3297  03BE  008F               	movwf	15	;volatile
  3298  03BF                     i1l1393:
  3299                           
  3300                           ;main.c: 148:         TMR1L = 0xDC;
  3301  03BF  30DC               	movlw	220
  3302  03C0  008E               	movwf	14	;volatile
  3303  03C1                     i1l119:
  3304  03C1  0008               	return
  3305  03C2                     __end_of_handleTimerInterruption:
  3306                           
  3307                           	psect	text25
  3308  052E                     __ptext25:	
  3309 ;; *************** function _handleExternalInterruption *****************
  3310 ;; Defined at:
  3311 ;;		line 170 in file "main.c"
  3312 ;; Parameters:    Size  Location     Type
  3313 ;;		None
  3314 ;; Auto vars:     Size  Location     Type
  3315 ;;		None
  3316 ;; Return value:  Size  Location     Type
  3317 ;;                  1    wreg      void 
  3318 ;; Registers used:
  3319 ;;		None
  3320 ;; Tracked objects:
  3321 ;;		On entry : 0/0
  3322 ;;		On exit  : 0/0
  3323 ;;		Unchanged: 0/0
  3324 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3325 ;;      Params:         0       0       0       0       0
  3326 ;;      Locals:         0       0       0       0       0
  3327 ;;      Temps:          0       0       0       0       0
  3328 ;;      Totals:         0       0       0       0       0
  3329 ;;Total ram usage:        0 bytes
  3330 ;; Hardware stack levels used: 1
  3331 ;; This function calls:
  3332 ;;		Nothing
  3333 ;; This function is called by:
  3334 ;;		_interrupcao
  3335 ;; This function uses a non-reentrant model
  3336 ;;
  3337                           
  3338  052E                     _handleExternalInterruption:	
  3339                           ;psect for function _handleExternalInterruption
  3340                           
  3341  052E                     i1l1037:	
  3342                           ;incstack = 0
  3343                           ; Regs used in _handleExternalInterruption: []
  3344                           
  3345                           
  3346                           ;main.c: 172:     if(INTF){
  3347  052E  1C8B               	btfss	11,1	;volatile
  3348  052F  2D31               	goto	u53_21
  3349  0530  2D32               	goto	u53_20
  3350  0531                     u53_21:
  3351  0531  2D35               	goto	i1l129
  3352  0532                     u53_20:
  3353  0532                     i1l1039:
  3354                           
  3355                           ;main.c: 175:         PORTBbits.RB6 = 1;
  3356  0532  1283               	bcf	3,5	;RP0=0, select bank0
  3357  0533  1303               	bcf	3,6	;RP1=0, select bank0
  3358  0534  1706               	bsf	6,6	;volatile
  3359  0535                     i1l129:
  3360  0535  0008               	return
  3361  0536                     __end_of_handleExternalInterruption:
  3362  007E                     btemp	set	126	;btemp
  3363  007E                     wtemp0	set	126

Data Sizes:
    Strings     22
    Constant    0
    Data        6
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      11
    BANK0            80     34      42
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 12
		 -> STR_2(CODE[12]), STR_1(CODE[10]), 


Critical Paths under _main in COMMON

    _main->_Lcd_Init
    _getADConverterValue->___fltol
    _getADConverterValue->___wmul
    ___xxtofl->___wmul
    _setupNewVolumeFlow->___wmul
    ___awdiv->___wmul
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _interrupcao in COMMON

    _interrupcao->_handleTimerInterruption

Critical Paths under _main in BANK0

    _verifySensor->_getADConverterValue
    _getADConverterValue->___xxtofl
    ___xxtofl->___awdiv
    _setupTimer->_setupNewVolumeFlow
    _setupNewVolumeFlow->_changeTimerMaxConter
    _changeTimerMaxConter->___awdiv

Critical Paths under _interrupcao in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _interrupcao in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _interrupcao in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _interrupcao in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0    5033
                                             31 BANK0      3     3      0
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                           _setupADC
          _setupExternalInterruption
                         _setupTimer
                 _setupWatchdogTimer
                         _verifyMenu
                       _verifySensor
 ---------------------------------------------------------------------------------
 (1) _verifySensor                                         0     0      0    1938
                _getADConverterValue
                            _irrigar
 ---------------------------------------------------------------------------------
 (2) _irrigar                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _getADConverterValue                                  8     6      2    1938
                                             23 BANK0      8     6      2
                            ___awdiv
                            ___fltol
                             ___wmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     398
                                              9 BANK0     14    10      4
                            ___awdiv (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             11     7      4     305
                                              3 COMMON     6     2      4
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (1) _verifyMenu                                           0     0      0       0
                         _handleMenu
 ---------------------------------------------------------------------------------
 (2) _handleMenu                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setupWatchdogTimer                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setupTimer                                           0     0      0    1477
                 _setupNewVolumeFlow
 ---------------------------------------------------------------------------------
 (2) _setupNewVolumeFlow                                   4     2      2    1477
                                             11 BANK0      4     2      2
                             ___wmul
               _changeTimerMaxConter
 ---------------------------------------------------------------------------------
 (3) _changeTimerMaxConter                                 2     0      2     926
                                              9 BANK0      2     0      2
                            ___awdiv
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     805
                                              0 BANK0      9     5      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     396
                                              3 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) _setupExternalInterruption                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setupADC                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     3     3      0     456
                                              0 BANK0      3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0     254
                                              4 COMMON     4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       7     6      1     725
                                              7 COMMON     1     0      1
                                              0 BANK0      6     6      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     279
                                              7 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     155
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     155
                                              4 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0     124
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _interrupcao                                          2     2      0       0
                                              1 COMMON     2     2      0
         _handleExternalInterruption
            _handleTimerInterruption
 ---------------------------------------------------------------------------------
 (6) _handleTimerInterruption                              1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (6) _handleExternalInterruption                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _setupADC
   _setupExternalInterruption
   _setupTimer
     _setupNewVolumeFlow
       ___wmul
       _changeTimerMaxConter
         ___awdiv
           ___wmul (ARG)
   _setupWatchdogTimer
   _verifyMenu
     _handleMenu
   _verifySensor
     _getADConverterValue
       ___awdiv
       ___fltol
       ___wmul
       ___xxtofl
         ___awdiv (ARG)
         ___wmul (ARG)
     _irrigar

 _interrupcao (ROOT)
   _handleExternalInterruption
   _handleTimerInterruption

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     22      2A       5       52.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      9       B       1       78.6%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      35      12        0.0%
ABS                  0      0      35       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.35 build 20211206165544 
Symbol Table                                                                                   Fri Mar 04 17:06:43 2022

                                 pc 0002                                  l60 044D  
                                l61 0453                                  l63 0454  
                                l55 043C                                  l56 043F  
                                l57 0445                                  l81 0390  
                                l58 0446                                  l66 04A9  
                                l59 044C                                  l75 0359  
                                l69 0521                                  l78 02A7  
                                l87 03EA                        ___awdiv@sign 0026  
                                fsr 0004                 ___wmul@multiplicand 0075  
                   _irrigacao_ativa 0079                                 l112 04C2  
                               l106 04EF                                 l140 0542  
                               l124 0500                                 l109 0473  
                               l125 0503                                 l151 0432  
                               l144 052D                                 l137 0541  
                               l154 0543                                 l251 03F7  
                               l147 0301                                 l404 024A  
                               l157 04D9                                 l253 040F  
                               l444 015D                                 l437 0172  
                               l447 0172                                 l690 00A4  
                               l684 005F                                 l686 00F6  
                               l953 0542                                 l697 00C0  
                               l698 00CC                                 _RD2 0042  
                               _RD3 0043                                 _RD4 0044  
                               _RD5 0045                                 _RD6 0046  
                               _RD7 0047                                 u700 03F1  
                               u540 0528                                 u701 03F0  
                               u541 0527                                 u800 0151  
                               u801 0150                                 u730 040B  
                               u731 040A                                 u715 03F8  
                               u820 0162                                 u740 0104  
                               u900 00AA                                 u725 03FF  
                               u821 0161                                 u741 0103  
                               u901 00A9                                 u830 0167  
                               u750 011B                                 u831 0166  
                               u815 0154                                 u760 0131  
                               u920 00BA                                 u840 0043  
                               u761 0130                                 u921 00B9  
                               u841 0042                                 u770 0138  
                               u930 00C0                                 u850 0047  
                               u771 0137                                 u755 0116  
                               u931 00BF                                 u915 00AF  
                               u851 0046                                 u940 00C4  
                               u860 0067                                 u941 00C3  
                               u861 0066                                 u790 014A  
                               u950 00D9                                 u791 0149  
                               u960 00E9                                 u880 0088  
                               u785 013A                                 u961 00E8  
                               u881 0087                                 u970 00ED  
                               u971 00EC                                 u955 00D4  
                               u875 007A                                 u990 0500  
                               u895 009C                                 u991 04FF  
                               fsr0 0004        ??_handleExternalInterruption 0070  
                      ___fltol@exp1 0078                                l1041 053C  
                              l1201 0123                                l1043 0522  
                              l1203 012B                                l1061 04D1  
                              l1045 0528                                l1221 0152  
                              l1213 0139                                l1205 012D  
                              l1063 04D5                                l1223 0162  
                              l1207 0131                                l1215 014B  
                              l1231 0047                                l1311 04F9  
                              l1065 04D6                                l1057 0543  
                              l1225 0167                                l1241 0075  
                              l1233 0057                                l1313 04FA  
                              l1305 04F0                                l1067 04D7  
                              l1059 04C3                                l1251 00AB  
                              l1243 0082                                l1235 0067  
                              l1227 003E                                l1307 04F4  
                              l1501 044A                                l1069 04D8  
                              l1181 03F1                                l1261 00E4  
                              l1253 00B6                                l1245 0089  
                              l1229 0043                                l1309 04F8  
                              l1503 0451                                l1511 0494  
                              l1183 03FE                                l1191 00F7  
                              l1263 00E9                                l1255 00BA  
                              l1247 008D                                l1239 0070  
                              l1513 049A                                l1521 0365  
                              l1185 0405                                l1177 03EB  
                              l1505 04DA                                l1193 0104  
                              l1265 00ED                                l1257 00C4  
                              l1249 009B                                l1515 049D  
                              l1531 0380                                l1523 0368  
                              l1187 040B                                l1179 03ED  
                              l1451 01E2                                l1267 00EE  
                              l1259 00CE                                l1603 0410  
                              l1517 04A6                                l1509 0491  
                              l1533 0386                                l1525 0376  
                              l1461 01F4                                l1453 01E5  
                              l1197 010D                                l1605 0419  
                              l1621 017B                                l1535 0389  
                              l1527 0379                                l1519 035B  
                              l1471 0208                                l1463 01F9  
                              l1455 01E9                                l1199 0122  
                              l1543 02A8                                l1607 042D  
                              l1631 0197                                l1623 017E  
                              l1615 0173                                l1553 0515  
                              l1561 0320                                l1537 038D  
                              l1529 037D                                l1481 022E  
                              l1473 020F                                l1465 01FD  
                              l1457 01EE                                l1545 02AB  
                              l1641 01AE                                l1633 0197  
                              l1625 0183                                l1617 0179  
                              l1571 034B                                l1563 0326  
                              l1555 0305                                l1491 0246  
                              l1483 022F                                l1475 0213  
                              l1467 01FF                                l1459 01F0  
                              l1539 0455                                l1547 02B2  
                              l1643 01B4                                l1635 019C  
                              l1627 0188                                l1619 017A  
                              l1581 0268                                l1573 0351  
                              l1557 030A                                l1565 032F  
                              l1485 0236                                l1477 0217  
                              l1469 0205                                l1549 02EE  
                              l1645 01C2                                l1637 01A1  
                              l1629 0192                                l1495 0434  
                              l1583 026E                                l1575 024B  
                              l1567 0335                                l1559 031B  
                              l1591 03DD                                l1479 0228  
                              l1487 023C                                l1647 01CA  
                              l1639 01A6                                l1497 0438  
                              l1577 0251                                l1569 0346  
                              l1585 03C5                                l1489 0241  
                              l1593 04AA                                l1649 01D0  
                              l1499 0443                                l1579 025A  
                              l1587 03C8                                l1595 04B4  
                              l1589 03D5                                l1597 04B8  
                              l1599 04B9          __end_of_setupNewVolumeFlow 0474  
                              STR_1 0486                                STR_2 047A  
                              u1100 01F4                                u1101 01F3  
                              u1110 0205                                u1111 0204  
                              u1200 0443                                u1201 0442  
                              u1210 044A                                u1130 0217  
                              u1211 0449                                u1131 0216  
                              u1220 0451                                u1221 0450  
                              u1125 0209                                u1150 0228  
                              u1151 0227                                u1240 030A  
                              u1241 0309                                u1145 0218  
                              u1170 023C                                u1090 01E9  
                              u1235 036B                                u1171 023B  
                              u1155 0224                                u1091 01E8  
                              u1307 01BC                                u1260 0335  
                              u1180 0241                                u1261 0334  
                              u1181 0240                                u1165 0230  
                              u1317 01D8                                u1190 0438  
                              u1191 0437                                u1255 0312  
                              u1327 02AF                                u1280 03EA  
                              u1337 037B                                u1281 03E9  
                              u1290 042D                                u1275 033D  
                              u1347 038B                                u1291 042C  
                              u1357 0255                                u1367 0264  
                              u1295 0429                                u1377 0272  
                              u1387 04A1                                _INTF 0059  
             ??_getADConverterValue 0039                   ?_Lcd_Write_String 0070  
                              _main 0173                                btemp 007E  
                              start 000C                  ??_Lcd_Write_String 0078  
                   __end_of_Lcd_Cmd 04AA         ?_handleExternalInterruption 0070  
                     ___fltol@sign1 0077                               ?_main 0070  
                   __end_of___awdiv 024B                     __end_of___fltol 0173  
                   ___awdiv@divisor 0020                               i1l134 050E  
                             i1l119 03C1                               i1l129 0535  
                   ___awdiv@counter 0025                               _TMR1H 000F  
                             _TMR1L 000E                               _PORTB 0006  
                             _PORTD 0008                               u53_20 0532  
                             u53_21 0531                               _TRISA 0085  
                             _TRISB 0086                               _TRISD 0088  
                             _MLxMS 0042                   _timer_counter_max 0046  
                   __end_of_irrigar 0504                               pclath 000A  
                             status 0003                               wtemp0 007E  
                  __end_of_Lcd_Init 02A8                    __end_of_Lcd_Port 0455  
                   __initialization 000F                        ?_interrupcao 0070  
                      __end_of_main 01E2                              ??_main 003F  
          setupNewVolumeFlow@new_ml 002B            setupNewVolumeFlow@new_ms 002D  
          ?_handleTimerInterruption 0070                              _ADRESH 001E  
                            _ADRESL 009E                    ___awdiv@dividend 0022  
                            i1l1037 052E                              i1l1039 0532  
                            i1l1411 0509                              i1l1409 0504  
                            i1l1381 03B1                              i1l1391 03BD  
                            i1l1383 03B4                              i1l1375 0391  
                            u105_20 0397                              i1l1393 03BF  
                            i1l1385 03B7                              i1l1377 0397  
                            u105_21 0396                              i1l1387 03B9  
                            i1l1379 039D                              i1l1389 03BA  
                            u106_20 039D                              u106_21 039C  
                            u107_20 03B1                              u107_21 03B0  
                            u107_25 03AD                           ??_Lcd_Cmd 0074  
                            _TMR1IF 0060                    __end_of___xxtofl 00F7  
 __end_of_setupExternalInterruption 0542                              ___wmul 03EB  
                         ??___awdiv 0024                           ??___fltol 0020  
                  ___awdiv@quotient 0027                    __end_of_setupADC 04DA  
                         ??_irrigar 0073                              saved_w 007E  
                   Lcd_Set_Cursor@a 0022                     Lcd_Set_Cursor@b 0077  
                   Lcd_Set_Cursor@y 0024                     Lcd_Set_Cursor@z 0023  
                      ___xxtofl@arg 0033                        ___xxtofl@exp 0032  
                      ___xxtofl@val 0029             __end_of__initialization 0037  
                 __end_of_Lcd_Clear 0522                          ___fltol@f1 0073  
                    __pcstackCOMMON 0070                        __pidataBANK0 0536  
                    _Lcd_Set_Cursor 0302                      _OPTION_REGbits 0081  
                         ?_Lcd_Init 0070                           ?_Lcd_Port 0070  
                        __pbssBANK0 0048                          __pmaintext 0173  
                _setupNewVolumeFlow 0455                             ?___wmul 0073  
      __end_of_changeTimerMaxConter 04F0                          __pintentry 0004  
                        _handleMenu 0542              __end_of_Lcd_Set_Cursor 035A  
               ?_setupNewVolumeFlow 002B                           ?___xxtofl 0029  
       __end_of_getADConverterValue 0302                          ??_Lcd_Init 0077  
                        ??_Lcd_Port 0073                          __stringtab 0474  
                    _Lcd_Write_Char 035A                             _Lcd_Cmd 0490  
              ??_setupNewVolumeFlow 0079                           ?_setupADC 0070  
                           ___awdiv 01E2                             ___fltol 00F7  
                   ?_Lcd_Set_Cursor 0077                             __ptext1 0410  
                           __ptext2 04F0                             __ptext3 02A8  
                           __ptext4 003B                             __ptext5 00F7  
                           __ptext6 0522                             __ptext7 0542  
                           __ptext8 0543                             __ptext9 04AA  
                         _T1CONbits 0010                          ??___xxtofl 002D  
                           _irrigar 04F0              __end_of_Lcd_Write_Char 0391  
              end_of_initialization 0037                          ??_setupADC 0073  
                         Lcd_Port@a 0073                         ?_handleMenu 0070  
                         _PORTBbits 0006                          _setupTimer 04AA  
                        _verifyMenu 0522                       ___xxtofl@sign 0031  
                   ?_Lcd_Write_Char 0070                   Lcd_Write_String@a 0022  
                 Lcd_Write_String@i 0020                _changeTimerMaxConter 04DA  
        __end_of_setupWatchdogTimer 0544                       ?_verifySensor 0070  
        ?_setupExternalInterruption 0070                           _Lcd_Clear 0515  
                    __end_of___wmul 0410                    _Lcd_Write_String 03C2  
               start_initialization 000F               ?_changeTimerMaxConter 0029  
                    ??_verifySensor 0079                          ?_Lcd_Clear 0070  
                          ??___wmul 0077                         __pdataBANK0 0042  
        getADConverterValue@leitura 003B                     Lcd_Write_Char@a 0077  
                   Lcd_Write_Char@y 0076                         ?_setupTimer 0070  
                       __pbssCOMMON 0079                         ?_verifyMenu 0070  
                         ___latbits 0002                       __pcstackBANK0 0020  
                          ?_Lcd_Cmd 0070             _handleTimerInterruption 0391  
                     ??_interrupcao 0071                    ??_Lcd_Set_Cursor 0020  
                          ?___awdiv 0020                            ?___fltol 0073  
                         __pstrings 0474                            ?_irrigar 0070  
            ??_changeTimerMaxConter 0079                   interrupt_function 0004  
                    ___wmul@product 0077                            _PIE1bits 008C  
                          Lcd_Cmd@a 0076                            _PIR1bits 000C  
                       ??_Lcd_Clear 0077                        ??_handleMenu 0073  
               __end_of_interrupcao 0515                          _ADCON0bits 001F  
                       __stringbase 0479                          _ADCON1bits 009F  
                 ___wmul@multiplier 0073                __end_of_verifySensor 0433  
                  ??_Lcd_Write_Char 0074                            _Lcd_Init 024B  
                          _Lcd_Port 0433           ??_handleTimerInterruption 0070  
          __end_of_Lcd_Write_String 03EB                  __end_of_handleMenu 0543  
       ??_setupExternalInterruption 0073                  _setupWatchdogTimer 0543  
__end_of_handleExternalInterruption 0536          _handleExternalInterruption 052E  
                __end_of__stringtab 047A                            ___xxtofl 003B  
               ?_setupWatchdogTimer 0070                            __ptext10 0455  
                          __ptext11 04DA                            __ptext20 0515  
                          __ptext12 01E2                            __ptext21 0490  
                          __ptext13 03EB                            __ptext22 0433  
                          __ptext14 053C                            __ptext23 0504  
                          __ptext15 04C3                            __ptext24 0391  
                          __ptext16 03C2                            __ptext25 052E  
                          __ptext17 035A                            __ptext18 0302  
                          __ptext19 024B          changeTimerMaxConter@mili_s 0029  
              ??_setupWatchdogTimer 0073                            _setupADC 04C3  
                       _interrupcao 0504     __end_of_handleTimerInterruption 03C2  
                    _umidade_minima 0044                       _timer_counter 0048  
                      ??_setupTimer 0079                          _INTCONbits 000B  
                      ??_verifyMenu 0073           _setupExternalInterruption 053C  
                Lcd_Write_Char@temp 0075                            intlevel1 0000  
                __end_of_setupTimer 04C3                           stringcode 0474  
                __end_of_verifyMenu 052E                  Lcd_Set_Cursor@temp 0025  
               _getADConverterValue 02A8                            stringdir 0474  
                          stringtab 0474                ?_getADConverterValue 0037  
                      _verifySensor 0410  
