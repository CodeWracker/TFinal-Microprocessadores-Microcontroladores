

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Fri Mar 04 15:05:35 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	psect	text1,local,class=CODE,merge=1,delta=2
     8                           	psect	text2,local,class=CODE,merge=1,delta=2
     9                           	psect	text3,local,class=CODE,merge=1,delta=2
    10                           	psect	text4,local,class=CODE,merge=1,delta=2
    11                           	psect	text5,local,class=CODE,merge=1,delta=2
    12                           	psect	text6,local,class=CODE,merge=1,delta=2
    13                           	psect	text7,local,class=CODE,merge=1,delta=2
    14                           	psect	text8,local,class=CODE,merge=1,delta=2
    15                           	psect	text9,local,class=CODE,merge=1,delta=2
    16                           	psect	text10,local,class=CODE,merge=1,delta=2
    17                           	psect	intentry,global,class=CODE,delta=2
    18                           	psect	text11,local,class=CODE,merge=1,delta=2
    19                           	psect	text12,local,class=CODE,merge=1,delta=2
    20                           	dabs	1,0x7E,2
    21  0000                     
    22                           ; Version 2.20
    23                           ; Generated 12/02/2020 GMT
    24                           ; 
    25                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    26                           ; All rights reserved.
    27                           ; 
    28                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    29                           ; 
    30                           ; Redistribution and use in source and binary forms, with or without modification, are
    31                           ; permitted provided that the following conditions are met:
    32                           ; 
    33                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    34                           ;        conditions and the following disclaimer.
    35                           ; 
    36                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    37                           ;        of conditions and the following disclaimer in the documentation and/or other
    38                           ;        materials provided with the distribution.
    39                           ; 
    40                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    41                           ;        software without specific prior written permission.
    42                           ; 
    43                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    44                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    45                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    46                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    47                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    48                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    49                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    50                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    51                           ; 
    52                           ; 
    53                           ; Code-generator required, PIC16F877A Definitions
    54                           ; 
    55                           ; SFR Addresses
    56  0000                     	;# 
    57  0001                     	;# 
    58  0002                     	;# 
    59  0003                     	;# 
    60  0004                     	;# 
    61  0005                     	;# 
    62  0006                     	;# 
    63  0007                     	;# 
    64  0008                     	;# 
    65  0009                     	;# 
    66  000A                     	;# 
    67  000B                     	;# 
    68  000C                     	;# 
    69  000D                     	;# 
    70  000E                     	;# 
    71  000E                     	;# 
    72  000F                     	;# 
    73  0010                     	;# 
    74  0011                     	;# 
    75  0012                     	;# 
    76  0013                     	;# 
    77  0014                     	;# 
    78  0015                     	;# 
    79  0015                     	;# 
    80  0016                     	;# 
    81  0017                     	;# 
    82  0018                     	;# 
    83  0019                     	;# 
    84  001A                     	;# 
    85  001B                     	;# 
    86  001B                     	;# 
    87  001C                     	;# 
    88  001D                     	;# 
    89  001E                     	;# 
    90  001F                     	;# 
    91  0081                     	;# 
    92  0085                     	;# 
    93  0086                     	;# 
    94  0087                     	;# 
    95  0088                     	;# 
    96  0089                     	;# 
    97  008C                     	;# 
    98  008D                     	;# 
    99  008E                     	;# 
   100  0091                     	;# 
   101  0092                     	;# 
   102  0093                     	;# 
   103  0094                     	;# 
   104  0098                     	;# 
   105  0099                     	;# 
   106  009C                     	;# 
   107  009D                     	;# 
   108  009E                     	;# 
   109  009F                     	;# 
   110  010C                     	;# 
   111  010D                     	;# 
   112  010E                     	;# 
   113  010F                     	;# 
   114  018C                     	;# 
   115  018D                     	;# 
   116  0000                     	;# 
   117  0001                     	;# 
   118  0002                     	;# 
   119  0003                     	;# 
   120  0004                     	;# 
   121  0005                     	;# 
   122  0006                     	;# 
   123  0007                     	;# 
   124  0008                     	;# 
   125  0009                     	;# 
   126  000A                     	;# 
   127  000B                     	;# 
   128  000C                     	;# 
   129  000D                     	;# 
   130  000E                     	;# 
   131  000E                     	;# 
   132  000F                     	;# 
   133  0010                     	;# 
   134  0011                     	;# 
   135  0012                     	;# 
   136  0013                     	;# 
   137  0014                     	;# 
   138  0015                     	;# 
   139  0015                     	;# 
   140  0016                     	;# 
   141  0017                     	;# 
   142  0018                     	;# 
   143  0019                     	;# 
   144  001A                     	;# 
   145  001B                     	;# 
   146  001B                     	;# 
   147  001C                     	;# 
   148  001D                     	;# 
   149  001E                     	;# 
   150  001F                     	;# 
   151  0081                     	;# 
   152  0085                     	;# 
   153  0086                     	;# 
   154  0087                     	;# 
   155  0088                     	;# 
   156  0089                     	;# 
   157  008C                     	;# 
   158  008D                     	;# 
   159  008E                     	;# 
   160  0091                     	;# 
   161  0092                     	;# 
   162  0093                     	;# 
   163  0094                     	;# 
   164  0098                     	;# 
   165  0099                     	;# 
   166  009C                     	;# 
   167  009D                     	;# 
   168  009E                     	;# 
   169  009F                     	;# 
   170  010C                     	;# 
   171  010D                     	;# 
   172  010E                     	;# 
   173  010F                     	;# 
   174  018C                     	;# 
   175  018D                     	;# 
   176  0006                     _PORTBbits	set	6
   177  0008                     _PORTDbits	set	8
   178                           
   179                           	psect	cinit
   180  000F                     start_initialization:	
   181                           ; #config settings
   182                           
   183  000F                     __initialization:
   184  000F                     end_of_initialization:	
   185                           ;End of C runtime variable initialization code
   186                           
   187  000F                     __end_of__initialization:
   188  000F  0183               	clrf	3
   189  0010  120A  118A  2870   	ljmp	_main	;jump to C main() function
   190                           
   191                           	psect	cstackCOMMON
   192  0070                     __pcstackCOMMON:
   193  0070                     ?_Lcd_Port:
   194  0070                     ?_Lcd_Cmd:	
   195                           ; 1 bytes @ 0x0
   196                           
   197  0070                     ?_Lcd_Init:	
   198                           ; 1 bytes @ 0x0
   199                           
   200  0070                     ?_handleTimerInterruption:	
   201                           ; 1 bytes @ 0x0
   202                           
   203  0070                     ??_handleTimerInterruption:	
   204                           ; 1 bytes @ 0x0
   205                           
   206  0070                     ?_handleExternalInterruption:	
   207                           ; 1 bytes @ 0x0
   208                           
   209  0070                     ??_handleExternalInterruption:	
   210                           ; 1 bytes @ 0x0
   211                           
   212  0070                     ?_interrupcao:	
   213                           ; 1 bytes @ 0x0
   214                           
   215  0070                     ??_interrupcao:	
   216                           ; 1 bytes @ 0x0
   217                           
   218  0070                     ?_setupExternalInterruption:	
   219                           ; 1 bytes @ 0x0
   220                           
   221  0070                     ?_handleMenu:	
   222                           ; 1 bytes @ 0x0
   223                           
   224  0070                     ?_verifyMenu:	
   225                           ; 1 bytes @ 0x0
   226                           
   227  0070                     ?_verifySensor:	
   228                           ; 1 bytes @ 0x0
   229                           
   230  0070                     ?_setupWatchdogTimer:	
   231                           ; 1 bytes @ 0x0
   232                           
   233  0070                     ?_main:	
   234                           ; 1 bytes @ 0x0
   235                           
   236                           
   237                           ; 1 bytes @ 0x0
   238  0070                     	ds	2
   239  0072                     ??_Lcd_Port:
   240  0072                     ?_setupTimer:	
   241                           ; 1 bytes @ 0x2
   242                           
   243  0072                     ??_setupExternalInterruption:	
   244                           ; 1 bytes @ 0x2
   245                           
   246  0072                     ??_handleMenu:	
   247                           ; 1 bytes @ 0x2
   248                           
   249  0072                     ??_verifyMenu:	
   250                           ; 1 bytes @ 0x2
   251                           
   252  0072                     ??_verifySensor:	
   253                           ; 1 bytes @ 0x2
   254                           
   255  0072                     ??_setupWatchdogTimer:	
   256                           ; 1 bytes @ 0x2
   257                           
   258  0072                     Lcd_Port@a:	
   259                           ; 1 bytes @ 0x2
   260                           
   261  0072                     setupTimer@mili_s:	
   262                           ; 1 bytes @ 0x2
   263                           
   264                           
   265                           ; 2 bytes @ 0x2
   266  0072                     	ds	1
   267  0073                     ??_Lcd_Cmd:
   268                           
   269                           ; 1 bytes @ 0x3
   270  0073                     	ds	1
   271  0074                     ??_setupTimer:
   272                           
   273                           ; 1 bytes @ 0x4
   274  0074                     	ds	1
   275  0075                     Lcd_Cmd@a:
   276                           
   277                           ; 1 bytes @ 0x5
   278  0075                     	ds	1
   279  0076                     ??_Lcd_Init:
   280                           
   281                           ; 1 bytes @ 0x6
   282  0076                     	ds	2
   283  0078                     ??_main:
   284                           
   285                           	psect	maintext
   286  0070                     __pmaintext:	
   287                           ; 1 bytes @ 0x8
   288 ;;
   289 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   290 ;;
   291 ;; *************** function _main *****************
   292 ;; Defined at:
   293 ;;		line 107 in file "main.c"
   294 ;; Parameters:    Size  Location     Type
   295 ;;		None
   296 ;; Auto vars:     Size  Location     Type
   297 ;;		None
   298 ;; Return value:  Size  Location     Type
   299 ;;                  1    wreg      void 
   300 ;; Registers used:
   301 ;;		wreg, status,2, status,0, pclath, cstack
   302 ;; Tracked objects:
   303 ;;		On entry : B00/0
   304 ;;		On exit  : 0/0
   305 ;;		Unchanged: 0/0
   306 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   307 ;;      Params:         0       0       0       0       0
   308 ;;      Locals:         0       0       0       0       0
   309 ;;      Temps:          0       0       0       0       0
   310 ;;      Totals:         0       0       0       0       0
   311 ;;Total ram usage:        0 bytes
   312 ;; Hardware stack levels required when called: 5
   313 ;; This function calls:
   314 ;;		_Lcd_Init
   315 ;;		_setupExternalInterruption
   316 ;;		_setupTimer
   317 ;;		_setupWatchdogTimer
   318 ;;		_verifyMenu
   319 ;;		_verifySensor
   320 ;; This function is called by:
   321 ;;		Startup code after reset
   322 ;; This function uses a non-reentrant model
   323 ;;
   324                           
   325  0070                     _main:	
   326                           ;psect for function _main
   327                           
   328  0070                     l804:	
   329                           ;incstack = 0
   330                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   331                           
   332                           
   333                           ;main.c: 110:     setupExternalInterruption();
   334  0070  120A  118A  20F3  120A  118A  	fcall	_setupExternalInterruption
   335                           
   336                           ;main.c: 111:     setupWatchdogTimer();
   337  0075  120A  118A  20F1  120A  118A  	fcall	_setupWatchdogTimer
   338  007A                     l806:
   339                           
   340                           ;main.c: 112:     setupTimer(500);
   341  007A  30F4               	movlw	244
   342  007B  00F2               	movwf	setupTimer@mili_s
   343  007C  3001               	movlw	1
   344  007D  00F3               	movwf	setupTimer@mili_s+1
   345  007E  120A  118A  20F2  120A  118A  	fcall	_setupTimer
   346  0083                     l808:
   347                           
   348                           ;main.c: 113:     Lcd_Init();
   349  0083  120A  118A  2013  120A  118A  	fcall	_Lcd_Init
   350  0088                     l85:	
   351                           ;main.c: 115:     while (1)
   352                           
   353                           
   354                           ;main.c: 116:     {;main.c: 117:         verifySensor();
   355  0088  120A  118A  20EF  120A  118A  	fcall	_verifySensor
   356                           
   357                           ;main.c: 118:         verifyMenu();
   358  008D  120A  118A  20E3  120A  118A  	fcall	_verifyMenu
   359  0092  2888               	goto	l85
   360  0093  120A  118A  280C   	ljmp	start
   361  0096                     __end_of_main:
   362                           
   363                           	psect	text1
   364  00EF                     __ptext1:	
   365 ;; *************** function _verifySensor *****************
   366 ;; Defined at:
   367 ;;		line 97 in file "main.c"
   368 ;; Parameters:    Size  Location     Type
   369 ;;		None
   370 ;; Auto vars:     Size  Location     Type
   371 ;;		None
   372 ;; Return value:  Size  Location     Type
   373 ;;                  1    wreg      void 
   374 ;; Registers used:
   375 ;;		None
   376 ;; Tracked objects:
   377 ;;		On entry : 0/0
   378 ;;		On exit  : 0/0
   379 ;;		Unchanged: 0/0
   380 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   381 ;;      Params:         0       0       0       0       0
   382 ;;      Locals:         0       0       0       0       0
   383 ;;      Temps:          0       0       0       0       0
   384 ;;      Totals:         0       0       0       0       0
   385 ;;Total ram usage:        0 bytes
   386 ;; Hardware stack levels used: 1
   387 ;; Hardware stack levels required when called: 2
   388 ;; This function calls:
   389 ;;		Nothing
   390 ;; This function is called by:
   391 ;;		_main
   392 ;; This function uses a non-reentrant model
   393 ;;
   394                           
   395  00EF                     _verifySensor:	
   396                           ;psect for function _verifySensor
   397                           
   398  00EF                     l746:	
   399                           ;incstack = 0
   400                           ; Regs used in _verifySensor: []
   401                           
   402  00EF                     l77:	
   403                           ;main.c: 99:     return;
   404                           
   405  00EF  0008               	return
   406  00F0                     __end_of_verifySensor:
   407                           
   408                           	psect	text2
   409  00E3                     __ptext2:	
   410 ;; *************** function _verifyMenu *****************
   411 ;; Defined at:
   412 ;;		line 89 in file "main.c"
   413 ;; Parameters:    Size  Location     Type
   414 ;;		None
   415 ;; Auto vars:     Size  Location     Type
   416 ;;		None
   417 ;; Return value:  Size  Location     Type
   418 ;;                  1    wreg      void 
   419 ;; Registers used:
   420 ;;		status,2, status,0, pclath, cstack
   421 ;; Tracked objects:
   422 ;;		On entry : 0/0
   423 ;;		On exit  : 0/0
   424 ;;		Unchanged: 0/0
   425 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   426 ;;      Params:         0       0       0       0       0
   427 ;;      Locals:         0       0       0       0       0
   428 ;;      Temps:          0       0       0       0       0
   429 ;;      Totals:         0       0       0       0       0
   430 ;;Total ram usage:        0 bytes
   431 ;; Hardware stack levels used: 1
   432 ;; Hardware stack levels required when called: 3
   433 ;; This function calls:
   434 ;;		_handleMenu
   435 ;; This function is called by:
   436 ;;		_main
   437 ;; This function uses a non-reentrant model
   438 ;;
   439                           
   440  00E3                     _verifyMenu:	
   441                           ;psect for function _verifyMenu
   442                           
   443  00E3                     l740:	
   444                           ;incstack = 0
   445                           ; Regs used in _verifyMenu: [status,2+status,0+pclath+cstack]
   446                           
   447                           
   448                           ;main.c: 91:     if (PORTBbits.RB2)
   449  00E3  1283               	bcf	3,5	;RP0=0, select bank0
   450  00E4  1303               	bcf	3,6	;RP1=0, select bank0
   451  00E5  1D06               	btfss	6,2	;volatile
   452  00E6  28E8               	goto	u61
   453  00E7  28E9               	goto	u60
   454  00E8                     u61:
   455  00E8  28EE               	goto	l74
   456  00E9                     u60:
   457  00E9                     l742:
   458                           
   459                           ;main.c: 92:     {;main.c: 93:         handleMenu();
   460  00E9  120A  118A  20F0  120A  118A  	fcall	_handleMenu
   461  00EE                     l74:
   462  00EE  0008               	return
   463  00EF                     __end_of_verifyMenu:
   464                           
   465                           	psect	text3
   466  00F0                     __ptext3:	
   467 ;; *************** function _handleMenu *****************
   468 ;; Defined at:
   469 ;;		line 85 in file "main.c"
   470 ;; Parameters:    Size  Location     Type
   471 ;;		None
   472 ;; Auto vars:     Size  Location     Type
   473 ;;		None
   474 ;; Return value:  Size  Location     Type
   475 ;;                  1    wreg      void 
   476 ;; Registers used:
   477 ;;		None
   478 ;; Tracked objects:
   479 ;;		On entry : 0/0
   480 ;;		On exit  : 0/0
   481 ;;		Unchanged: 0/0
   482 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   483 ;;      Params:         0       0       0       0       0
   484 ;;      Locals:         0       0       0       0       0
   485 ;;      Temps:          0       0       0       0       0
   486 ;;      Totals:         0       0       0       0       0
   487 ;;Total ram usage:        0 bytes
   488 ;; Hardware stack levels used: 1
   489 ;; Hardware stack levels required when called: 2
   490 ;; This function calls:
   491 ;;		Nothing
   492 ;; This function is called by:
   493 ;;		_verifyMenu
   494 ;; This function uses a non-reentrant model
   495 ;;
   496                           
   497  00F0                     _handleMenu:	
   498                           ;psect for function _handleMenu
   499                           
   500  00F0                     l700:	
   501                           ;incstack = 0
   502                           ; Regs used in _handleMenu: []
   503                           
   504  00F0                     l70:	
   505                           ;main.c: 87:     return;
   506                           
   507  00F0  0008               	return
   508  00F1                     __end_of_handleMenu:
   509                           
   510                           	psect	text4
   511  00F1                     __ptext4:	
   512 ;; *************** function _setupWatchdogTimer *****************
   513 ;; Defined at:
   514 ;;		line 102 in file "main.c"
   515 ;; Parameters:    Size  Location     Type
   516 ;;		None
   517 ;; Auto vars:     Size  Location     Type
   518 ;;		None
   519 ;; Return value:  Size  Location     Type
   520 ;;                  1    wreg      void 
   521 ;; Registers used:
   522 ;;		None
   523 ;; Tracked objects:
   524 ;;		On entry : 0/0
   525 ;;		On exit  : 0/0
   526 ;;		Unchanged: 0/0
   527 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   528 ;;      Params:         0       0       0       0       0
   529 ;;      Locals:         0       0       0       0       0
   530 ;;      Temps:          0       0       0       0       0
   531 ;;      Totals:         0       0       0       0       0
   532 ;;Total ram usage:        0 bytes
   533 ;; Hardware stack levels used: 1
   534 ;; Hardware stack levels required when called: 2
   535 ;; This function calls:
   536 ;;		Nothing
   537 ;; This function is called by:
   538 ;;		_main
   539 ;; This function uses a non-reentrant model
   540 ;;
   541                           
   542  00F1                     _setupWatchdogTimer:	
   543                           ;psect for function _setupWatchdogTimer
   544                           
   545  00F1                     l748:	
   546                           ;incstack = 0
   547                           ; Regs used in _setupWatchdogTimer: []
   548                           
   549  00F1                     l80:	
   550                           ;main.c: 104:     return;
   551                           
   552  00F1  0008               	return
   553  00F2                     __end_of_setupWatchdogTimer:
   554                           
   555                           	psect	text5
   556  00F2                     __ptext5:	
   557 ;; *************** function _setupTimer *****************
   558 ;; Defined at:
   559 ;;		line 48 in file "main.c"
   560 ;; Parameters:    Size  Location     Type
   561 ;;  mili_s          2    2[COMMON] int 
   562 ;; Auto vars:     Size  Location     Type
   563 ;;		None
   564 ;; Return value:  Size  Location     Type
   565 ;;                  1    wreg      void 
   566 ;; Registers used:
   567 ;;		None
   568 ;; Tracked objects:
   569 ;;		On entry : 0/0
   570 ;;		On exit  : 0/0
   571 ;;		Unchanged: 0/0
   572 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   573 ;;      Params:         2       0       0       0       0
   574 ;;      Locals:         0       0       0       0       0
   575 ;;      Temps:          0       0       0       0       0
   576 ;;      Totals:         2       0       0       0       0
   577 ;;Total ram usage:        2 bytes
   578 ;; Hardware stack levels used: 1
   579 ;; Hardware stack levels required when called: 2
   580 ;; This function calls:
   581 ;;		Nothing
   582 ;; This function is called by:
   583 ;;		_main
   584 ;;		_setupNewVolumeFlow
   585 ;; This function uses a non-reentrant model
   586 ;;
   587                           
   588  00F2                     _setupTimer:	
   589                           ;psect for function _setupTimer
   590                           
   591  00F2                     l798:	
   592                           ;incstack = 0
   593                           ; Regs used in _setupTimer: []
   594                           
   595  00F2                     l50:	
   596                           ;main.c: 48: void setupTimer(int mili_s);main.c: 49: {;main.c: 50:     return;
   597                           
   598  00F2  0008               	return
   599  00F3                     __end_of_setupTimer:
   600                           
   601                           	psect	text6
   602  00F3                     __ptext6:	
   603 ;; *************** function _setupExternalInterruption *****************
   604 ;; Defined at:
   605 ;;		line 80 in file "main.c"
   606 ;; Parameters:    Size  Location     Type
   607 ;;		None
   608 ;; Auto vars:     Size  Location     Type
   609 ;;		None
   610 ;; Return value:  Size  Location     Type
   611 ;;                  1    wreg      void 
   612 ;; Registers used:
   613 ;;		None
   614 ;; Tracked objects:
   615 ;;		On entry : 0/0
   616 ;;		On exit  : 0/0
   617 ;;		Unchanged: 0/0
   618 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   619 ;;      Params:         0       0       0       0       0
   620 ;;      Locals:         0       0       0       0       0
   621 ;;      Temps:          0       0       0       0       0
   622 ;;      Totals:         0       0       0       0       0
   623 ;;Total ram usage:        0 bytes
   624 ;; Hardware stack levels used: 1
   625 ;; Hardware stack levels required when called: 2
   626 ;; This function calls:
   627 ;;		Nothing
   628 ;; This function is called by:
   629 ;;		_main
   630 ;; This function uses a non-reentrant model
   631 ;;
   632                           
   633  00F3                     _setupExternalInterruption:	
   634                           ;psect for function _setupExternalInterruption
   635                           
   636  00F3                     l738:	
   637                           ;incstack = 0
   638                           ; Regs used in _setupExternalInterruption: []
   639                           
   640  00F3                     l67:	
   641                           ;main.c: 82:     return;
   642                           
   643  00F3  0008               	return
   644  00F4                     __end_of_setupExternalInterruption:
   645                           
   646                           	psect	text7
   647  0013                     __ptext7:	
   648 ;; *************** function _Lcd_Init *****************
   649 ;; Defined at:
   650 ;;		line 62 in file "./lcd.h"
   651 ;; Parameters:    Size  Location     Type
   652 ;;		None
   653 ;; Auto vars:     Size  Location     Type
   654 ;;		None
   655 ;; Return value:  Size  Location     Type
   656 ;;                  1    wreg      void 
   657 ;; Registers used:
   658 ;;		wreg, status,2, status,0, pclath, cstack
   659 ;; Tracked objects:
   660 ;;		On entry : 0/0
   661 ;;		On exit  : 0/0
   662 ;;		Unchanged: 0/0
   663 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   664 ;;      Params:         0       0       0       0       0
   665 ;;      Locals:         0       0       0       0       0
   666 ;;      Temps:          2       0       0       0       0
   667 ;;      Totals:         2       0       0       0       0
   668 ;;Total ram usage:        2 bytes
   669 ;; Hardware stack levels used: 1
   670 ;; Hardware stack levels required when called: 4
   671 ;; This function calls:
   672 ;;		_Lcd_Cmd
   673 ;;		_Lcd_Port
   674 ;; This function is called by:
   675 ;;		_main
   676 ;; This function uses a non-reentrant model
   677 ;;
   678                           
   679  0013                     _Lcd_Init:	
   680                           ;psect for function _Lcd_Init
   681                           
   682  0013                     l702:	
   683                           ;incstack = 0
   684                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
   685                           
   686                           
   687                           ;./lcd.h: 64:   Lcd_Port(0x00);
   688  0013  3000               	movlw	0
   689  0014  120A  118A  2096  120A  118A  	fcall	_Lcd_Port
   690  0019                     l704:
   691                           
   692                           ;./lcd.h: 65:    _delay((unsigned long)((20)*(4000000/4000.0)));
   693  0019  301A               	movlw	26
   694  001A  00F7               	movwf	??_Lcd_Init+1
   695  001B  30F8               	movlw	248
   696  001C  00F6               	movwf	??_Lcd_Init
   697  001D                     u127:
   698  001D  0BF6               	decfsz	??_Lcd_Init,f
   699  001E  281D               	goto	u127
   700  001F  0BF7               	decfsz	??_Lcd_Init+1,f
   701  0020  281D               	goto	u127
   702  0021  0000               	nop
   703  0022                     l706:
   704                           
   705                           ;./lcd.h: 66:   Lcd_Cmd(0x03);
   706  0022  3003               	movlw	3
   707  0023  120A  118A  20B8  120A  118A  	fcall	_Lcd_Cmd
   708                           
   709                           ;./lcd.h: 67:  _delay((unsigned long)((5)*(4000000/4000.0)));
   710  0028  3007               	movlw	7
   711  0029  00F7               	movwf	??_Lcd_Init+1
   712  002A  307D               	movlw	125
   713  002B  00F6               	movwf	??_Lcd_Init
   714  002C                     u137:
   715  002C  0BF6               	decfsz	??_Lcd_Init,f
   716  002D  282C               	goto	u137
   717  002E  0BF7               	decfsz	??_Lcd_Init+1,f
   718  002F  282C               	goto	u137
   719  0030                     l708:
   720                           
   721                           ;./lcd.h: 68:   Lcd_Cmd(0x03);
   722  0030  3003               	movlw	3
   723  0031  120A  118A  20B8  120A  118A  	fcall	_Lcd_Cmd
   724  0036                     l710:
   725                           
   726                           ;./lcd.h: 69:  _delay((unsigned long)((11)*(4000000/4000.0)));
   727  0036  300F               	movlw	15
   728  0037  00F7               	movwf	??_Lcd_Init+1
   729  0038  3047               	movlw	71
   730  0039  00F6               	movwf	??_Lcd_Init
   731  003A                     u147:
   732  003A  0BF6               	decfsz	??_Lcd_Init,f
   733  003B  283A               	goto	u147
   734  003C  0BF7               	decfsz	??_Lcd_Init+1,f
   735  003D  283A               	goto	u147
   736  003E  283F               	nop2
   737                           
   738                           ;./lcd.h: 70:   Lcd_Cmd(0x03);
   739  003F  3003               	movlw	3
   740  0040  120A  118A  20B8  120A  118A  	fcall	_Lcd_Cmd
   741                           
   742                           ;./lcd.h: 72:   Lcd_Cmd(0x02);
   743  0045  3002               	movlw	2
   744  0046  120A  118A  20B8  120A  118A  	fcall	_Lcd_Cmd
   745                           
   746                           ;./lcd.h: 73:   Lcd_Cmd(0x02);
   747  004B  3002               	movlw	2
   748  004C  120A  118A  20B8  120A  118A  	fcall	_Lcd_Cmd
   749                           
   750                           ;./lcd.h: 74:   Lcd_Cmd(0x08);
   751  0051  3008               	movlw	8
   752  0052  120A  118A  20B8  120A  118A  	fcall	_Lcd_Cmd
   753                           
   754                           ;./lcd.h: 75:   Lcd_Cmd(0x00);
   755  0057  3000               	movlw	0
   756  0058  120A  118A  20B8  120A  118A  	fcall	_Lcd_Cmd
   757                           
   758                           ;./lcd.h: 76:   Lcd_Cmd(0x0C);
   759  005D  300C               	movlw	12
   760  005E  120A  118A  20B8  120A  118A  	fcall	_Lcd_Cmd
   761                           
   762                           ;./lcd.h: 77:   Lcd_Cmd(0x00);
   763  0063  3000               	movlw	0
   764  0064  120A  118A  20B8  120A  118A  	fcall	_Lcd_Cmd
   765                           
   766                           ;./lcd.h: 78:   Lcd_Cmd(0x06);
   767  0069  3006               	movlw	6
   768  006A  120A  118A  20B8  120A  118A  	fcall	_Lcd_Cmd
   769  006F                     l32:
   770  006F  0008               	return
   771  0070                     __end_of_Lcd_Init:
   772                           
   773                           	psect	text8
   774  00B8                     __ptext8:	
   775 ;; *************** function _Lcd_Cmd *****************
   776 ;; Defined at:
   777 ;;		line 26 in file "./lcd.h"
   778 ;; Parameters:    Size  Location     Type
   779 ;;  a               1    wreg     unsigned char 
   780 ;; Auto vars:     Size  Location     Type
   781 ;;  a               1    5[COMMON] unsigned char 
   782 ;; Return value:  Size  Location     Type
   783 ;;                  1    wreg      void 
   784 ;; Registers used:
   785 ;;		wreg, status,2, status,0, pclath, cstack
   786 ;; Tracked objects:
   787 ;;		On entry : 0/0
   788 ;;		On exit  : 0/0
   789 ;;		Unchanged: 0/0
   790 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   791 ;;      Params:         0       0       0       0       0
   792 ;;      Locals:         1       0       0       0       0
   793 ;;      Temps:          2       0       0       0       0
   794 ;;      Totals:         3       0       0       0       0
   795 ;;Total ram usage:        3 bytes
   796 ;; Hardware stack levels used: 1
   797 ;; Hardware stack levels required when called: 3
   798 ;; This function calls:
   799 ;;		_Lcd_Port
   800 ;; This function is called by:
   801 ;;		_Lcd_Init
   802 ;;		_Lcd_Clear
   803 ;;		_Lcd_Set_Cursor
   804 ;;		_Lcd_Shift_Right
   805 ;;		_Lcd_Shift_Left
   806 ;; This function uses a non-reentrant model
   807 ;;
   808                           
   809  00B8                     _Lcd_Cmd:	
   810                           ;psect for function _Lcd_Cmd
   811                           
   812                           
   813                           ;incstack = 0
   814                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
   815                           ;Lcd_Cmd@a stored from wreg
   816  00B8  00F5               	movwf	Lcd_Cmd@a
   817  00B9                     l690:
   818                           
   819                           ;./lcd.h: 26: void Lcd_Cmd(char a);./lcd.h: 27: {;./lcd.h: 28:  PORTDbits.RD1 = 0;
   820  00B9  1283               	bcf	3,5	;RP0=0, select bank0
   821  00BA  1303               	bcf	3,6	;RP1=0, select bank0
   822  00BB  1088               	bcf	8,1	;volatile
   823  00BC                     l692:
   824                           
   825                           ;./lcd.h: 29:  Lcd_Port(a);
   826  00BC  0875               	movf	Lcd_Cmd@a,w
   827  00BD  120A  118A  2096  120A  118A  	fcall	_Lcd_Port
   828  00C2                     l694:
   829                           
   830                           ;./lcd.h: 30:  PORTDbits.RD3 = 1;
   831  00C2  1283               	bcf	3,5	;RP0=0, select bank0
   832  00C3  1303               	bcf	3,6	;RP1=0, select bank0
   833  00C4  1588               	bsf	8,3	;volatile
   834  00C5                     l696:
   835                           
   836                           ;./lcd.h: 31:         _delay((unsigned long)((4)*(4000000/4000.0)));
   837  00C5  3006               	movlw	6
   838  00C6  00F4               	movwf	??_Lcd_Cmd+1
   839  00C7  3030               	movlw	48
   840  00C8  00F3               	movwf	??_Lcd_Cmd
   841  00C9                     u157:
   842  00C9  0BF3               	decfsz	??_Lcd_Cmd,f
   843  00CA  28C9               	goto	u157
   844  00CB  0BF4               	decfsz	??_Lcd_Cmd+1,f
   845  00CC  28C9               	goto	u157
   846  00CD  0000               	nop
   847  00CE                     l698:
   848                           
   849                           ;./lcd.h: 32:         PORTDbits.RD3 = 0;
   850  00CE  1283               	bcf	3,5	;RP0=0, select bank0
   851  00CF  1303               	bcf	3,6	;RP1=0, select bank0
   852  00D0  1188               	bcf	8,3	;volatile
   853  00D1                     l20:
   854  00D1  0008               	return
   855  00D2                     __end_of_Lcd_Cmd:
   856                           
   857                           	psect	text9
   858  0096                     __ptext9:	
   859 ;; *************** function _Lcd_Port *****************
   860 ;; Defined at:
   861 ;;		line 4 in file "./lcd.h"
   862 ;; Parameters:    Size  Location     Type
   863 ;;  a               1    wreg     unsigned char 
   864 ;; Auto vars:     Size  Location     Type
   865 ;;  a               1    2[COMMON] unsigned char 
   866 ;; Return value:  Size  Location     Type
   867 ;;                  1    wreg      void 
   868 ;; Registers used:
   869 ;;		wreg
   870 ;; Tracked objects:
   871 ;;		On entry : 0/0
   872 ;;		On exit  : 0/0
   873 ;;		Unchanged: 0/0
   874 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   875 ;;      Params:         0       0       0       0       0
   876 ;;      Locals:         1       0       0       0       0
   877 ;;      Temps:          0       0       0       0       0
   878 ;;      Totals:         1       0       0       0       0
   879 ;;Total ram usage:        1 bytes
   880 ;; Hardware stack levels used: 1
   881 ;; Hardware stack levels required when called: 2
   882 ;; This function calls:
   883 ;;		Nothing
   884 ;; This function is called by:
   885 ;;		_Lcd_Cmd
   886 ;;		_Lcd_Init
   887 ;;		_Lcd_Write_Char
   888 ;; This function uses a non-reentrant model
   889 ;;
   890                           
   891  0096                     _Lcd_Port:	
   892                           ;psect for function _Lcd_Port
   893                           
   894                           
   895                           ;incstack = 0
   896                           ; Regs used in _Lcd_Port: [wreg]
   897                           ;Lcd_Port@a stored from wreg
   898  0096  00F2               	movwf	Lcd_Port@a
   899  0097                     l680:
   900                           
   901                           ;./lcd.h: 4: void Lcd_Port(char a);./lcd.h: 5: {;./lcd.h: 6:  if(a & 1)
   902  0097  1C72               	btfss	Lcd_Port@a,0
   903  0098  289A               	goto	u11
   904  0099  289B               	goto	u10
   905  009A                     u11:
   906  009A  289F               	goto	l9
   907  009B                     u10:
   908  009B                     l682:
   909                           
   910                           ;./lcd.h: 7:   PORTDbits.RD4 = 1;
   911  009B  1283               	bcf	3,5	;RP0=0, select bank0
   912  009C  1303               	bcf	3,6	;RP1=0, select bank0
   913  009D  1608               	bsf	8,4	;volatile
   914  009E  28A2               	goto	l10
   915  009F                     l9:	
   916                           ;./lcd.h: 8:  else
   917                           
   918                           
   919                           ;./lcd.h: 9:   PORTDbits.RD4 = 0;
   920  009F  1283               	bcf	3,5	;RP0=0, select bank0
   921  00A0  1303               	bcf	3,6	;RP1=0, select bank0
   922  00A1  1208               	bcf	8,4	;volatile
   923  00A2                     l10:
   924                           
   925                           ;./lcd.h: 11:  if(a & 2)
   926  00A2  1CF2               	btfss	Lcd_Port@a,1
   927  00A3  28A5               	goto	u21
   928  00A4  28A6               	goto	u20
   929  00A5                     u21:
   930  00A5  28A8               	goto	l11
   931  00A6                     u20:
   932  00A6                     l684:
   933                           
   934                           ;./lcd.h: 12:   PORTDbits.RD5 = 1;
   935  00A6  1688               	bsf	8,5	;volatile
   936  00A7  28A9               	goto	l12
   937  00A8                     l11:	
   938                           ;./lcd.h: 13:  else
   939                           
   940                           
   941                           ;./lcd.h: 14:   PORTDbits.RD5 = 0;
   942  00A8  1288               	bcf	8,5	;volatile
   943  00A9                     l12:
   944                           
   945                           ;./lcd.h: 16:  if(a & 4)
   946  00A9  1D72               	btfss	Lcd_Port@a,2
   947  00AA  28AC               	goto	u31
   948  00AB  28AD               	goto	u30
   949  00AC                     u31:
   950  00AC  28AF               	goto	l13
   951  00AD                     u30:
   952  00AD                     l686:
   953                           
   954                           ;./lcd.h: 17:   PORTDbits.RD6 = 1;
   955  00AD  1708               	bsf	8,6	;volatile
   956  00AE  28B0               	goto	l14
   957  00AF                     l13:	
   958                           ;./lcd.h: 18:  else
   959                           
   960                           
   961                           ;./lcd.h: 19:   PORTDbits.RD6 = 0;
   962  00AF  1308               	bcf	8,6	;volatile
   963  00B0                     l14:
   964                           
   965                           ;./lcd.h: 21:  if(a & 8)
   966  00B0  1DF2               	btfss	Lcd_Port@a,3
   967  00B1  28B3               	goto	u41
   968  00B2  28B4               	goto	u40
   969  00B3                     u41:
   970  00B3  28B6               	goto	l15
   971  00B4                     u40:
   972  00B4                     l688:
   973                           
   974                           ;./lcd.h: 22:   PORTDbits.RD7 = 1;
   975  00B4  1788               	bsf	8,7	;volatile
   976  00B5  28B7               	goto	l17
   977  00B6                     l15:	
   978                           ;./lcd.h: 23:  else
   979                           
   980                           
   981                           ;./lcd.h: 24:   PORTDbits.RD7 = 0;
   982  00B6  1388               	bcf	8,7	;volatile
   983  00B7                     l17:
   984  00B7  0008               	return
   985  00B8                     __end_of_Lcd_Port:
   986                           
   987                           	psect	text10
   988  00D2                     __ptext10:	
   989 ;; *************** function _interrupcao *****************
   990 ;; Defined at:
   991 ;;		line 73 in file "main.c"
   992 ;; Parameters:    Size  Location     Type
   993 ;;		None
   994 ;; Auto vars:     Size  Location     Type
   995 ;;		None
   996 ;; Return value:  Size  Location     Type
   997 ;;                  1    wreg      void 
   998 ;; Registers used:
   999 ;;		status,2, status,0, pclath, cstack
  1000 ;; Tracked objects:
  1001 ;;		On entry : 0/0
  1002 ;;		On exit  : 0/0
  1003 ;;		Unchanged: 0/0
  1004 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1005 ;;      Params:         0       0       0       0       0
  1006 ;;      Locals:         0       0       0       0       0
  1007 ;;      Temps:          2       0       0       0       0
  1008 ;;      Totals:         2       0       0       0       0
  1009 ;;Total ram usage:        2 bytes
  1010 ;; Hardware stack levels used: 1
  1011 ;; Hardware stack levels required when called: 1
  1012 ;; This function calls:
  1013 ;;		_handleExternalInterruption
  1014 ;;		_handleTimerInterruption
  1015 ;; This function is called by:
  1016 ;;		Interrupt level 1
  1017 ;; This function uses a non-reentrant model
  1018 ;;
  1019                           
  1020  00D2                     _interrupcao:	
  1021                           ;psect for function _interrupcao
  1022                           
  1023  00D2                     i1l788:
  1024                           
  1025                           ;main.c: 75:     handleTimerInterruption();
  1026  00D2  120A  118A  20F4  120A  118A  	fcall	_handleTimerInterruption
  1027                           
  1028                           ;main.c: 76:     handleExternalInterruption();
  1029  00D7  120A  118A  20F5  120A  118A  	fcall	_handleExternalInterruption
  1030  00DC                     i1l64:
  1031  00DC  0871               	movf	??_interrupcao+1,w
  1032  00DD  008A               	movwf	10
  1033  00DE  0E70               	swapf	??_interrupcao,w
  1034  00DF  0083               	movwf	3
  1035  00E0  0EFE               	swapf	btemp,f
  1036  00E1  0E7E               	swapf	btemp,w
  1037  00E2  0009               	retfie
  1038  00E3                     __end_of_interrupcao:
  1039                           
  1040                           	psect	intentry
  1041  0004                     __pintentry:	
  1042                           ;incstack = 0
  1043                           ; Regs used in _interrupcao: [status,2+status,0+pclath+cstack]
  1044                           
  1045  0004                     interrupt_function:
  1046  007E                     saved_w	set	btemp
  1047  0004  00FE               	movwf	btemp
  1048  0005  0E03               	swapf	3,w
  1049  0006  00F0               	movwf	??_interrupcao
  1050  0007  080A               	movf	10,w
  1051  0008  00F1               	movwf	??_interrupcao+1
  1052  0009  120A  118A  28D2   	ljmp	_interrupcao
  1053                           
  1054                           	psect	text11
  1055  00F4                     __ptext11:	
  1056 ;; *************** function _handleTimerInterruption *****************
  1057 ;; Defined at:
  1058 ;;		line 62 in file "main.c"
  1059 ;; Parameters:    Size  Location     Type
  1060 ;;		None
  1061 ;; Auto vars:     Size  Location     Type
  1062 ;;		None
  1063 ;; Return value:  Size  Location     Type
  1064 ;;                  1    wreg      void 
  1065 ;; Registers used:
  1066 ;;		None
  1067 ;; Tracked objects:
  1068 ;;		On entry : 0/0
  1069 ;;		On exit  : 0/0
  1070 ;;		Unchanged: 0/0
  1071 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1072 ;;      Params:         0       0       0       0       0
  1073 ;;      Locals:         0       0       0       0       0
  1074 ;;      Temps:          0       0       0       0       0
  1075 ;;      Totals:         0       0       0       0       0
  1076 ;;Total ram usage:        0 bytes
  1077 ;; Hardware stack levels used: 1
  1078 ;; This function calls:
  1079 ;;		Nothing
  1080 ;; This function is called by:
  1081 ;;		_interrupcao
  1082 ;; This function uses a non-reentrant model
  1083 ;;
  1084                           
  1085  00F4                     _handleTimerInterruption:	
  1086                           ;psect for function _handleTimerInterruption
  1087                           
  1088  00F4                     i1l734:	
  1089                           ;incstack = 0
  1090                           ; Regs used in _handleTimerInterruption: []
  1091                           
  1092  00F4                     i1l56:	
  1093                           ;main.c: 64:     return;
  1094                           
  1095  00F4  0008               	return
  1096  00F5                     __end_of_handleTimerInterruption:
  1097                           
  1098                           	psect	text12
  1099  00F5                     __ptext12:	
  1100 ;; *************** function _handleExternalInterruption *****************
  1101 ;; Defined at:
  1102 ;;		line 67 in file "main.c"
  1103 ;; Parameters:    Size  Location     Type
  1104 ;;		None
  1105 ;; Auto vars:     Size  Location     Type
  1106 ;;		None
  1107 ;; Return value:  Size  Location     Type
  1108 ;;                  1    wreg      void 
  1109 ;; Registers used:
  1110 ;;		None
  1111 ;; Tracked objects:
  1112 ;;		On entry : 0/0
  1113 ;;		On exit  : 0/0
  1114 ;;		Unchanged: 0/0
  1115 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1116 ;;      Params:         0       0       0       0       0
  1117 ;;      Locals:         0       0       0       0       0
  1118 ;;      Temps:          0       0       0       0       0
  1119 ;;      Totals:         0       0       0       0       0
  1120 ;;Total ram usage:        0 bytes
  1121 ;; Hardware stack levels used: 1
  1122 ;; This function calls:
  1123 ;;		Nothing
  1124 ;; This function is called by:
  1125 ;;		_interrupcao
  1126 ;; This function uses a non-reentrant model
  1127 ;;
  1128                           
  1129  00F5                     _handleExternalInterruption:	
  1130                           ;psect for function _handleExternalInterruption
  1131                           
  1132  00F5                     i1l736:	
  1133                           ;incstack = 0
  1134                           ; Regs used in _handleExternalInterruption: []
  1135                           
  1136  00F5                     i1l59:	
  1137                           ;main.c: 70:     return;
  1138                           
  1139  00F5  0008               	return
  1140  00F6                     __end_of_handleExternalInterruption:
  1141  007E                     btemp	set	126	;btemp
  1142  007E                     wtemp0	set	126

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8       8
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_Lcd_Init
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _interrupcao in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _interrupcao in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _interrupcao in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _interrupcao in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _interrupcao in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     287
                           _Lcd_Init
          _setupExternalInterruption
                         _setupTimer
                 _setupWatchdogTimer
                         _verifyMenu
                       _verifySensor
 ---------------------------------------------------------------------------------
 (1) _verifySensor                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _verifyMenu                                           0     0      0       0
                         _handleMenu
 ---------------------------------------------------------------------------------
 (2) _handleMenu                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setupWatchdogTimer                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setupTimer                                           2     0      2     152
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _setupExternalInterruption                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     135
                                              6 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0      75
                                              3 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Port                                             1     1      0      60
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _interrupcao                                          2     2      0       0
                                              0 COMMON     2     2      0
         _handleExternalInterruption
            _handleTimerInterruption
 ---------------------------------------------------------------------------------
 (5) _handleTimerInterruption                              0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _handleExternalInterruption                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _setupExternalInterruption
   _setupTimer
   _setupWatchdogTimer
   _verifyMenu
     _handleMenu
   _verifySensor

 _interrupcao (ROOT)
   _handleExternalInterruption
   _handleTimerInterruption

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       8       1       57.1%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Fri Mar 04 15:05:35 2022

                                 l9 009F                                  l10 00A2  
                                l11 00A8                                  l12 00A9  
                                l20 00D1                                  l13 00AF  
                                l14 00B0                                  l15 00B6  
                                l32 006F                                  l17 00B7  
                                l50 00F2                                  l70 00F0  
                                l80 00F1                                  l74 00EE  
                                l67 00F3                                  l77 00EF  
                                l85 0088                                  u10 009B  
                                u11 009A                                  u20 00A6  
                                u21 00A5                                  u30 00AD  
                                u31 00AC                                  u40 00B4  
                                u41 00B3                                  u60 00E9  
                                u61 00E8                                 l700 00F0  
                               l710 0036                                 l702 0013  
                               l704 0019                                 l706 0022  
                               l708 0030                                 l740 00E3  
                               l804 0070                                 l742 00E9  
                               l806 007A                                 l680 0097  
                               l808 0083                                 l682 009B  
                               l690 00B9                                 l738 00F3  
                               l746 00EF                                 l684 00A6  
                               l692 00BC                                 l748 00F1  
                               l686 00AD                                 l694 00C2  
                               l688 00B4                                 l696 00C5  
                               l698 00CE                                 l798 00F2  
                               u127 001D                                 u137 002C  
                               u147 003A                                 u157 00C9  
      ??_handleExternalInterruption 0070                                i1l56 00F4  
                              i1l64 00DC                                i1l59 00F5  
                              _main 0070                                btemp 007E  
                              start 000C                     __end_of_Lcd_Cmd 00D2  
       ?_handleExternalInterruption 0070                               ?_main 0070  
                             i1l734 00F4                               i1l736 00F5  
                             i1l788 00D2                               pclath 000A  
                             status 0003                               wtemp0 007E  
                  __end_of_Lcd_Init 0070                    __end_of_Lcd_Port 00B8  
                   __initialization 000F                        ?_interrupcao 0070  
                      __end_of_main 0096                              ??_main 0078  
          ?_handleTimerInterruption 0070                           ??_Lcd_Cmd 0073  
 __end_of_setupExternalInterruption 00F4                              saved_w 007E  
           __end_of__initialization 000F                      __pcstackCOMMON 0070  
                         ?_Lcd_Init 0070                           ?_Lcd_Port 0070  
                        __pmaintext 0070                          __pintentry 0004  
                        _handleMenu 00F0                          ??_Lcd_Init 0076  
                        ??_Lcd_Port 0072                             _Lcd_Cmd 00B8  
                           __ptext1 00EF                             __ptext2 00E3  
                           __ptext3 00F0                             __ptext4 00F1  
                           __ptext5 00F2                             __ptext6 00F3  
                           __ptext7 0013                             __ptext8 00B8  
                           __ptext9 0096                end_of_initialization 000F  
                         Lcd_Port@a 0072                         ?_handleMenu 0070  
                         _PORTBbits 0006                           _PORTDbits 0008  
                        _setupTimer 00F2                          _verifyMenu 00E3  
        __end_of_setupWatchdogTimer 00F2                       ?_verifySensor 0070  
        ?_setupExternalInterruption 0070                    setupTimer@mili_s 0072  
               start_initialization 000F                      ??_verifySensor 0072  
                       ?_setupTimer 0072                         ?_verifyMenu 0070  
                         ___latbits 0002                            ?_Lcd_Cmd 0070  
           _handleTimerInterruption 00F4                       ??_interrupcao 0070  
                 interrupt_function 0004                            Lcd_Cmd@a 0075  
                      ??_handleMenu 0072                 __end_of_interrupcao 00E3  
              __end_of_verifySensor 00F0                            _Lcd_Init 0013  
                          _Lcd_Port 0096           ??_handleTimerInterruption 0070  
                __end_of_handleMenu 00F1         ??_setupExternalInterruption 0072  
                _setupWatchdogTimer 00F1  __end_of_handleExternalInterruption 00F6  
        _handleExternalInterruption 00F5                 ?_setupWatchdogTimer 0070  
                          __ptext10 00D2                            __ptext11 00F4  
                          __ptext12 00F5                ??_setupWatchdogTimer 0072  
                       _interrupcao 00D2     __end_of_handleTimerInterruption 00F5  
                      ??_setupTimer 0074                        ??_verifyMenu 0072  
         _setupExternalInterruption 00F3                            intlevel1 0000  
                __end_of_setupTimer 00F3                  __end_of_verifyMenu 00EF  
                      _verifySensor 00EF  
