

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Sat Mar 05 15:56:12 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	inittext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2,group=1
    30                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    31                           	psect	text18,local,class=CODE,merge=1,delta=2
    32                           	psect	text19,local,class=CODE,merge=1,delta=2
    33                           	psect	text20,local,class=CODE,merge=1,delta=2
    34                           	psect	text21,local,class=CODE,merge=1,delta=2
    35                           	psect	text22,local,class=CODE,merge=1,delta=2
    36                           	psect	text23,local,class=CODE,merge=1,delta=2
    37                           	psect	intentry,global,class=CODE,delta=2
    38                           	psect	text24,local,class=CODE,merge=1,delta=2
    39                           	psect	text25,local,class=CODE,merge=1,delta=2
    40                           	psect	text26,local,class=CODE,merge=1,delta=2
    41                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    42                           	dabs	1,0x7E,2
    43  0000                     
    44                           ; Version 2.20
    45                           ; Generated 12/02/2020 GMT
    46                           ; 
    47                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    48                           ; All rights reserved.
    49                           ; 
    50                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    51                           ; 
    52                           ; Redistribution and use in source and binary forms, with or without modification, are
    53                           ; permitted provided that the following conditions are met:
    54                           ; 
    55                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    56                           ;        conditions and the following disclaimer.
    57                           ; 
    58                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    59                           ;        of conditions and the following disclaimer in the documentation and/or other
    60                           ;        materials provided with the distribution.
    61                           ; 
    62                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    63                           ;        software without specific prior written permission.
    64                           ; 
    65                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    66                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    67                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    68                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    69                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    70                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    71                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    72                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    73                           ; 
    74                           ; 
    75                           ; Code-generator required, PIC16F877A Definitions
    76                           ; 
    77                           ; SFR Addresses
    78  0000                     	;# 
    79  0001                     	;# 
    80  0002                     	;# 
    81  0003                     	;# 
    82  0004                     	;# 
    83  0005                     	;# 
    84  0006                     	;# 
    85  0007                     	;# 
    86  0008                     	;# 
    87  0009                     	;# 
    88  000A                     	;# 
    89  000B                     	;# 
    90  000C                     	;# 
    91  000D                     	;# 
    92  000E                     	;# 
    93  000E                     	;# 
    94  000F                     	;# 
    95  0010                     	;# 
    96  0011                     	;# 
    97  0012                     	;# 
    98  0013                     	;# 
    99  0014                     	;# 
   100  0015                     	;# 
   101  0015                     	;# 
   102  0016                     	;# 
   103  0017                     	;# 
   104  0018                     	;# 
   105  0019                     	;# 
   106  001A                     	;# 
   107  001B                     	;# 
   108  001B                     	;# 
   109  001C                     	;# 
   110  001D                     	;# 
   111  001E                     	;# 
   112  001F                     	;# 
   113  0081                     	;# 
   114  0085                     	;# 
   115  0086                     	;# 
   116  0087                     	;# 
   117  0088                     	;# 
   118  0089                     	;# 
   119  008C                     	;# 
   120  008D                     	;# 
   121  008E                     	;# 
   122  0091                     	;# 
   123  0092                     	;# 
   124  0093                     	;# 
   125  0094                     	;# 
   126  0098                     	;# 
   127  0099                     	;# 
   128  009C                     	;# 
   129  009D                     	;# 
   130  009E                     	;# 
   131  009F                     	;# 
   132  010C                     	;# 
   133  010D                     	;# 
   134  010E                     	;# 
   135  010F                     	;# 
   136  018C                     	;# 
   137  018D                     	;# 
   138  0000                     	;# 
   139  0001                     	;# 
   140  0002                     	;# 
   141  0003                     	;# 
   142  0004                     	;# 
   143  0005                     	;# 
   144  0006                     	;# 
   145  0007                     	;# 
   146  0008                     	;# 
   147  0009                     	;# 
   148  000A                     	;# 
   149  000B                     	;# 
   150  000C                     	;# 
   151  000D                     	;# 
   152  000E                     	;# 
   153  000E                     	;# 
   154  000F                     	;# 
   155  0010                     	;# 
   156  0011                     	;# 
   157  0012                     	;# 
   158  0013                     	;# 
   159  0014                     	;# 
   160  0015                     	;# 
   161  0015                     	;# 
   162  0016                     	;# 
   163  0017                     	;# 
   164  0018                     	;# 
   165  0019                     	;# 
   166  001A                     	;# 
   167  001B                     	;# 
   168  001B                     	;# 
   169  001C                     	;# 
   170  001D                     	;# 
   171  001E                     	;# 
   172  001F                     	;# 
   173  0081                     	;# 
   174  0085                     	;# 
   175  0086                     	;# 
   176  0087                     	;# 
   177  0088                     	;# 
   178  0089                     	;# 
   179  008C                     	;# 
   180  008D                     	;# 
   181  008E                     	;# 
   182  0091                     	;# 
   183  0092                     	;# 
   184  0093                     	;# 
   185  0094                     	;# 
   186  0098                     	;# 
   187  0099                     	;# 
   188  009C                     	;# 
   189  009D                     	;# 
   190  009E                     	;# 
   191  009F                     	;# 
   192  010C                     	;# 
   193  010D                     	;# 
   194  010E                     	;# 
   195  010F                     	;# 
   196  018C                     	;# 
   197  018D                     	;# 
   198                           
   199                           	psect	idataBANK0
   200  0611                     __pidataBANK0:
   201                           
   202                           ;initializer for _MLxMS
   203  0611  3419               	retlw	25
   204  0612  3400               	retlw	0
   205                           
   206                           ;initializer for _water_volume
   207  0613  34C8               	retlw	200
   208  0614  3400               	retlw	0
   209                           
   210                           ;initializer for _umidade_minima
   211  0615  340A               	retlw	10
   212  0616  3400               	retlw	0
   213                           
   214                           ;initializer for _timer_counter_max
   215  0617  340A               	retlw	10
   216  0618  3400               	retlw	0
   217  0006                     _PORTB	set	6
   218  0007                     _PORTC	set	7
   219  001F                     _ADCON0bits	set	31
   220  000C                     _PIR1bits	set	12
   221  0006                     _PORTBbits	set	6
   222  000E                     _TMR1L	set	14
   223  000F                     _TMR1H	set	15
   224  0010                     _T1CONbits	set	16
   225  000B                     _INTCONbits	set	11
   226  001E                     _ADRESH	set	30
   227  0059                     _INTF	set	89
   228  0060                     _TMR1IF	set	96
   229  0043                     _RD3	set	67
   230  0042                     _RD2	set	66
   231  0047                     _RD7	set	71
   232  0046                     _RD6	set	70
   233  0045                     _RD5	set	69
   234  0044                     _RD4	set	68
   235  0088                     _TRISD	set	136
   236  0087                     _TRISC	set	135
   237  0086                     _TRISB	set	134
   238  0085                     _TRISA	set	133
   239  009E                     _ADRESL	set	158
   240  009F                     _ADCON1bits	set	159
   241  0081                     _OPTION_REGbits	set	129
   242  008C                     _PIE1bits	set	140
   243                           
   244                           	psect	strings
   245  0500                     __pstrings:
   246  0500                     stringtab:
   247  0500                     __stringtab:
   248  0500                     stringcode:	
   249                           ;	String table - string pointers are 1 byte each
   250                           
   251  0500                     stringdir:
   252  0500  3005               	movlw	high stringdir
   253  0501  008A               	movwf	10
   254  0502  0804               	movf	4,w
   255  0503  0A84               	incf	4,f
   256  0504  0782               	addwf	2,f
   257  0505                     __stringbase:
   258  0505  3400               	retlw	0
   259  0506                     __end_of__stringtab:
   260  0506                     STR_1:
   261  0506  344E               	retlw	78	;'N'
   262  0507  3445               	retlw	69	;'E'
   263  0508  3457               	retlw	87	;'W'
   264  0509  3420               	retlw	32	;' '
   265  050A  3454               	retlw	84	;'T'
   266  050B  3448               	retlw	72	;'H'
   267  050C  3452               	retlw	82	;'R'
   268  050D  3445               	retlw	69	;'E'
   269  050E  3453               	retlw	83	;'S'
   270  050F  3448               	retlw	72	;'H'
   271  0510  344F               	retlw	79	;'O'
   272  0511  344C               	retlw	76	;'L'
   273  0512  3444               	retlw	68	;'D'
   274  0513  343A               	retlw	58	;':'
   275  0514  3400               	retlw	0
   276  0515                     STR_2:
   277  0515  344E               	retlw	78	;'N'
   278  0516  3445               	retlw	69	;'E'
   279  0517  3457               	retlw	87	;'W'
   280  0518  3420               	retlw	32	;' '
   281  0519  3456               	retlw	86	;'V'
   282  051A  344F               	retlw	79	;'O'
   283  051B  344C               	retlw	76	;'L'
   284  051C  3455               	retlw	85	;'U'
   285  051D  344D               	retlw	77	;'M'
   286  051E  3445               	retlw	69	;'E'
   287  051F  343A               	retlw	58	;':'
   288  0520  3400               	retlw	0
   289                           
   290                           	psect	cinit
   291  000F                     start_initialization:	
   292                           ; #config settings
   293                           
   294  000F                     __initialization:
   295                           
   296                           ; Initialize objects allocated to BANK0
   297  000F  1383               	bcf	3,7	;select IRP bank0
   298  0010  3043               	movlw	low (__pdataBANK0+8)
   299  0011  00FD               	movwf	btemp+-1
   300  0012  3006               	movlw	high __pidataBANK0
   301  0013  00FE               	movwf	btemp
   302  0014  3011               	movlw	low __pidataBANK0
   303  0015  00FF               	movwf	btemp+1
   304  0016  303B               	movlw	low __pdataBANK0
   305  0017  0084               	movwf	4
   306  0018  120A  118A  25BF  120A  118A  	fcall	init_ram0
   307                           
   308                           ; Clear objects allocated to BANK0
   309  001D  01C3               	clrf	__pbssBANK0& (0+127)
   310  001E  01C4               	clrf	(__pbssBANK0+1)& (0+127)
   311  001F  01C5               	clrf	(__pbssBANK0+2)& (0+127)
   312  0020  01C6               	clrf	(__pbssBANK0+3)& (0+127)
   313                           
   314                           ; Clear objects allocated to COMMON
   315  0021  01F9               	clrf	__pbssCOMMON& (0+127)
   316  0022  01FA               	clrf	(__pbssCOMMON+1)& (0+127)
   317  0023                     end_of_initialization:	
   318                           ;End of C runtime variable initialization code
   319                           
   320  0023                     __end_of__initialization:
   321  0023  0183               	clrf	3
   322  0024  120A  118A  2B7F   	ljmp	_main	;jump to C main() function
   323                           
   324                           	psect	bssCOMMON
   325  0079                     __pbssCOMMON:
   326  0079                     _irrigacao_ativa:
   327  0079                     	ds	2
   328                           
   329                           	psect	bssBANK0
   330  0043                     __pbssBANK0:
   331  0043                     _setup_menu:
   332  0043                     	ds	2
   333  0045                     _timer_counter:
   334  0045                     	ds	2
   335                           
   336                           	psect	dataBANK0
   337  003B                     __pdataBANK0:
   338  003B                     _MLxMS:
   339  003B                     	ds	2
   340  003D                     _water_volume:
   341  003D                     	ds	2
   342  003F                     _umidade_minima:
   343  003F                     	ds	2
   344  0041                     _timer_counter_max:
   345  0041                     	ds	2
   346                           
   347                           	psect	inittext
   348  05BB                     init_fetch0:	
   349                           ;	Called with low address in FSR and high address in W
   350                           
   351  05BB  087E               	movf	btemp,w
   352  05BC  008A               	movwf	10
   353  05BD  087F               	movf	btemp+1,w
   354  05BE  0082               	movwf	2
   355  05BF                     init_ram0:	
   356                           ;Called with:
   357                           ;	high address of idata address in btemp 
   358                           ;	low address of idata address in btemp+1 
   359                           ;	low address of data in FSR
   360                           ;	high address + 1 of data in btemp-1
   361                           
   362  05BF  120A  118A  25BB  120A  118A  	fcall	init_fetch0
   363  05C4  0080               	movwf	0
   364  05C5  0A84               	incf	4,f
   365  05C6  0804               	movf	4,w
   366  05C7  067D               	xorwf	btemp+-1,w
   367  05C8  1903               	btfsc	3,2
   368  05C9  3400               	retlw	0
   369  05CA  0AFF               	incf	btemp+1,f
   370  05CB  1903               	btfsc	3,2
   371  05CC  0AFE               	incf	btemp,f
   372  05CD  2DBF               	goto	init_ram0
   373                           
   374                           	psect	cstackCOMMON
   375  0070                     __pcstackCOMMON:
   376  0070                     ?_Lcd_Port:
   377  0070                     ?_Lcd_Cmd:	
   378                           ; 1 bytes @ 0x0
   379                           
   380  0070                     ?_Lcd_Clear:	
   381                           ; 1 bytes @ 0x0
   382                           
   383  0070                     ?_Lcd_Init:	
   384                           ; 1 bytes @ 0x0
   385                           
   386  0070                     ?_Lcd_Write_Char:	
   387                           ; 1 bytes @ 0x0
   388                           
   389  0070                     ?_Lcd_Write_String:	
   390                           ; 1 bytes @ 0x0
   391                           
   392  0070                     ?_setupNewVolumeFlow:	
   393                           ; 1 bytes @ 0x0
   394                           
   395  0070                     ?_setupTimer:	
   396                           ; 1 bytes @ 0x0
   397                           
   398  0070                     ?_handleTimerInterruption:	
   399                           ; 1 bytes @ 0x0
   400                           
   401  0070                     ??_handleTimerInterruption:	
   402                           ; 1 bytes @ 0x0
   403                           
   404  0070                     ?_irrigar:	
   405                           ; 1 bytes @ 0x0
   406                           
   407  0070                     ?_handleExternalInterruption:	
   408                           ; 1 bytes @ 0x0
   409                           
   410  0070                     ??_handleExternalInterruption:	
   411                           ; 1 bytes @ 0x0
   412                           
   413  0070                     ?_interrupcao:	
   414                           ; 1 bytes @ 0x0
   415                           
   416  0070                     ?_setupExternalInterruption:	
   417                           ; 1 bytes @ 0x0
   418                           
   419  0070                     ?_handleMenu:	
   420                           ; 1 bytes @ 0x0
   421                           
   422  0070                     ?_verifyMenu:	
   423                           ; 1 bytes @ 0x0
   424                           
   425  0070                     ?_verifySensor:	
   426                           ; 1 bytes @ 0x0
   427                           
   428  0070                     ?_setupWatchdogTimer:	
   429                           ; 1 bytes @ 0x0
   430                           
   431  0070                     ?_setupADC:	
   432                           ; 1 bytes @ 0x0
   433                           
   434  0070                     ?_main:	
   435                           ; 1 bytes @ 0x0
   436                           
   437  0070                     ?i1_irrigar:	
   438                           ; 1 bytes @ 0x0
   439                           
   440  0070                     ??i1_irrigar:	
   441                           ; 1 bytes @ 0x0
   442                           
   443                           
   444                           ; 1 bytes @ 0x0
   445  0070                     	ds	1
   446  0071                     ??_interrupcao:
   447                           
   448                           ; 1 bytes @ 0x1
   449  0071                     	ds	2
   450  0073                     ??_Lcd_Port:
   451  0073                     ??_irrigar:	
   452                           ; 1 bytes @ 0x3
   453                           
   454  0073                     ??_setupExternalInterruption:	
   455                           ; 1 bytes @ 0x3
   456                           
   457  0073                     ??_setupWatchdogTimer:	
   458                           ; 1 bytes @ 0x3
   459                           
   460  0073                     ??_setupADC:	
   461                           ; 1 bytes @ 0x3
   462                           
   463  0073                     ?___wmul:	
   464                           ; 1 bytes @ 0x3
   465                           
   466  0073                     ?___awmod:	
   467                           ; 2 bytes @ 0x3
   468                           
   469  0073                     Lcd_Port@a:	
   470                           ; 2 bytes @ 0x3
   471                           
   472  0073                     ___wmul@multiplier:	
   473                           ; 1 bytes @ 0x3
   474                           
   475  0073                     ___awmod@divisor:	
   476                           ; 2 bytes @ 0x3
   477                           
   478                           
   479                           ; 2 bytes @ 0x3
   480  0073                     	ds	1
   481  0074                     ??_Lcd_Cmd:
   482  0074                     ??_Lcd_Write_Char:	
   483                           ; 1 bytes @ 0x4
   484                           
   485                           
   486                           ; 1 bytes @ 0x4
   487  0074                     	ds	1
   488  0075                     Lcd_Write_Char@temp:
   489  0075                     ___wmul@multiplicand:	
   490                           ; 1 bytes @ 0x5
   491                           
   492  0075                     ___awmod@dividend:	
   493                           ; 2 bytes @ 0x5
   494                           
   495                           
   496                           ; 2 bytes @ 0x5
   497  0075                     	ds	1
   498  0076                     Lcd_Cmd@a:
   499  0076                     Lcd_Write_Char@y:	
   500                           ; 1 bytes @ 0x6
   501                           
   502                           
   503                           ; 1 bytes @ 0x6
   504  0076                     	ds	1
   505  0077                     ??_Lcd_Clear:
   506  0077                     ?_Lcd_Set_Cursor:	
   507                           ; 1 bytes @ 0x7
   508                           
   509  0077                     ??_Lcd_Init:	
   510                           ; 1 bytes @ 0x7
   511                           
   512  0077                     ??___wmul:	
   513                           ; 1 bytes @ 0x7
   514                           
   515  0077                     ??___awmod:	
   516                           ; 1 bytes @ 0x7
   517                           
   518  0077                     Lcd_Set_Cursor@b:	
   519                           ; 1 bytes @ 0x7
   520                           
   521  0077                     Lcd_Write_Char@a:	
   522                           ; 1 bytes @ 0x7
   523                           
   524  0077                     ___wmul@product:	
   525                           ; 1 bytes @ 0x7
   526                           
   527                           
   528                           ; 2 bytes @ 0x7
   529  0077                     	ds	1
   530  0078                     ??_Lcd_Write_String:
   531                           
   532                           ; 1 bytes @ 0x8
   533  0078                     	ds	1
   534  0079                     ??_changeTimerMaxConter:
   535  0079                     ??_setupNewVolumeFlow:	
   536                           ; 1 bytes @ 0x9
   537                           
   538  0079                     ??_setupTimer:	
   539                           ; 1 bytes @ 0x9
   540                           
   541  0079                     ??_main:	
   542                           ; 1 bytes @ 0x9
   543                           
   544                           
   545                           	psect	cstackBANK0
   546  0020                     __pcstackBANK0:	
   547                           ; 1 bytes @ 0x9
   548                           
   549  0020                     ??_Lcd_Set_Cursor:
   550  0020                     ___awmod@counter:	
   551                           ; 1 bytes @ 0x0
   552                           
   553  0020                     Lcd_Write_String@i:	
   554                           ; 1 bytes @ 0x0
   555                           
   556                           
   557                           ; 2 bytes @ 0x0
   558  0020                     	ds	1
   559  0021                     ___awmod@sign:
   560                           
   561                           ; 1 bytes @ 0x1
   562  0021                     	ds	1
   563  0022                     ?___awdiv:
   564  0022                     Lcd_Set_Cursor@a:	
   565                           ; 2 bytes @ 0x2
   566                           
   567  0022                     Lcd_Write_String@a:	
   568                           ; 1 bytes @ 0x2
   569                           
   570  0022                     ___awdiv@divisor:	
   571                           ; 1 bytes @ 0x2
   572                           
   573                           
   574                           ; 2 bytes @ 0x2
   575  0022                     	ds	1
   576  0023                     Lcd_Set_Cursor@z:
   577                           
   578                           ; 1 bytes @ 0x3
   579  0023                     	ds	1
   580  0024                     Lcd_Set_Cursor@y:
   581  0024                     ___awdiv@dividend:	
   582                           ; 1 bytes @ 0x4
   583                           
   584                           
   585                           ; 2 bytes @ 0x4
   586  0024                     	ds	1
   587  0025                     Lcd_Set_Cursor@temp:
   588                           
   589                           ; 1 bytes @ 0x5
   590  0025                     	ds	1
   591  0026                     ??___awdiv:
   592                           
   593                           ; 1 bytes @ 0x6
   594  0026                     	ds	1
   595  0027                     ___awdiv@counter:
   596                           
   597                           ; 1 bytes @ 0x7
   598  0027                     	ds	1
   599  0028                     ___awdiv@sign:
   600                           
   601                           ; 1 bytes @ 0x8
   602  0028                     	ds	1
   603  0029                     ___awdiv@quotient:
   604                           
   605                           ; 2 bytes @ 0x9
   606  0029                     	ds	2
   607  002B                     ?_changeTimerMaxConter:
   608  002B                     ?_writeValor:	
   609                           ; 1 bytes @ 0xB
   610                           
   611  002B                     ?_getADConverterValue:	
   612                           ; 1 bytes @ 0xB
   613                           
   614  002B                     changeTimerMaxConter@mili_s:	
   615                           ; 2 bytes @ 0xB
   616                           
   617  002B                     writeValor@valor:	
   618                           ; 2 bytes @ 0xB
   619                           
   620                           
   621                           ; 2 bytes @ 0xB
   622  002B                     	ds	2
   623  002D                     ??_writeValor:
   624  002D                     ??_getADConverterValue:	
   625                           ; 1 bytes @ 0xD
   626                           
   627  002D                     setupNewVolumeFlow@new_ms:	
   628                           ; 1 bytes @ 0xD
   629                           
   630                           
   631                           ; 2 bytes @ 0xD
   632  002D                     	ds	1
   633  002E                     writeValor@centena:
   634                           
   635                           ; 1 bytes @ 0xE
   636  002E                     	ds	1
   637  002F                     writeValor@dezena:
   638  002F                     getADConverterValue@leitura:	
   639                           ; 1 bytes @ 0xF
   640                           
   641                           
   642                           ; 2 bytes @ 0xF
   643  002F                     	ds	1
   644  0030                     writeValor@unidade:
   645                           
   646                           ; 1 bytes @ 0x10
   647  0030                     	ds	1
   648  0031                     ??_handleMenu:
   649  0031                     ??_verifySensor:	
   650                           ; 1 bytes @ 0x11
   651                           
   652                           
   653                           ; 1 bytes @ 0x11
   654  0031                     	ds	3
   655  0034                     handleMenu@volume:
   656                           
   657                           ; 2 bytes @ 0x14
   658  0034                     	ds	2
   659  0036                     handleMenu@umidade:
   660                           
   661                           ; 2 bytes @ 0x16
   662  0036                     	ds	2
   663  0038                     ??_verifyMenu:
   664                           
   665                           ; 1 bytes @ 0x18
   666  0038                     	ds	3
   667                           
   668                           	psect	maintext
   669  037F                     __pmaintext:	
   670 ;;
   671 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   672 ;;
   673 ;; *************** function _main *****************
   674 ;; Defined at:
   675 ;;		line 349 in file "main.c"
   676 ;; Parameters:    Size  Location     Type
   677 ;;		None
   678 ;; Auto vars:     Size  Location     Type
   679 ;;		None
   680 ;; Return value:  Size  Location     Type
   681 ;;                  1    wreg      void 
   682 ;; Registers used:
   683 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   684 ;; Tracked objects:
   685 ;;		On entry : B00/0
   686 ;;		On exit  : 0/0
   687 ;;		Unchanged: 0/0
   688 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   689 ;;      Params:         0       0       0       0       0
   690 ;;      Locals:         0       0       0       0       0
   691 ;;      Temps:          0       0       0       0       0
   692 ;;      Totals:         0       0       0       0       0
   693 ;;Total ram usage:        0 bytes
   694 ;; Hardware stack levels required when called: 9
   695 ;; This function calls:
   696 ;;		_Lcd_Init
   697 ;;		_setupADC
   698 ;;		_setupExternalInterruption
   699 ;;		_setupTimer
   700 ;;		_setupWatchdogTimer
   701 ;;		_verifyMenu
   702 ;;		_verifySensor
   703 ;; This function is called by:
   704 ;;		Startup code after reset
   705 ;; This function uses a non-reentrant model
   706 ;;
   707                           
   708  037F                     _main:	
   709                           ;psect for function _main
   710                           
   711  037F                     l1914:	
   712                           ;incstack = 0
   713 ;; hardware stack exceeded
   714                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   715                           
   716                           
   717                           ;main.c: 352:     TRISA = 0b00000001;
   718  037F  3001               	movlw	1
   719  0380  1683               	bsf	3,5	;RP0=1, select bank1
   720  0381  1303               	bcf	3,6	;RP1=0, select bank1
   721  0382  0085               	movwf	5	;volatile
   722                           
   723                           ;main.c: 353:     TRISB = 0b00011101;
   724  0383  301D               	movlw	29
   725  0384  0086               	movwf	6	;volatile
   726  0385                     l1916:
   727                           
   728                           ;main.c: 354:     TRISC = 0;
   729  0385  0187               	clrf	7	;volatile
   730  0386                     l1918:
   731                           
   732                           ;main.c: 355:     PORTC = 0;
   733  0386  1283               	bcf	3,5	;RP0=0, select bank0
   734  0387  1303               	bcf	3,6	;RP1=0, select bank0
   735  0388  0187               	clrf	7	;volatile
   736  0389                     l1920:
   737                           
   738                           ;main.c: 356:     TRISD = 0b00000000;
   739  0389  1683               	bsf	3,5	;RP0=1, select bank1
   740  038A  1303               	bcf	3,6	;RP1=0, select bank1
   741  038B  0188               	clrf	8	;volatile
   742  038C                     l1922:
   743                           
   744                           ;main.c: 357:     OPTION_REGbits.nRBPU = 0;
   745  038C  1381               	bcf	1,7	;volatile
   746  038D                     l1924:
   747                           
   748                           ;main.c: 358:     PORTB = 0;
   749  038D  1283               	bcf	3,5	;RP0=0, select bank0
   750  038E  1303               	bcf	3,6	;RP1=0, select bank0
   751  038F  0186               	clrf	6	;volatile
   752  0390                     l1926:
   753                           
   754                           ;main.c: 360:     setupExternalInterruption();
   755  0390  120A  118A  2621  120A  118A  	fcall	_setupExternalInterruption
   756  0395                     l1928:
   757                           
   758                           ;main.c: 361:     setupWatchdogTimer();
   759  0395  120A  118A  2619  120A  118A  	fcall	_setupWatchdogTimer
   760  039A                     l1930:
   761                           
   762                           ;main.c: 362:     setupTimer();
   763  039A  120A  118A  25A6  120A  118A  	fcall	_setupTimer
   764                           
   765                           ;main.c: 363:     setupADC();
   766  039F  120A  118A  2579  120A  118A  	fcall	_setupADC
   767  03A4                     l1932:
   768                           
   769                           ;main.c: 364:     Lcd_Init();
   770  03A4  120A  118A  226F  120A  118A  	fcall	_Lcd_Init
   771  03A9                     l1934:
   772                           
   773                           ;main.c: 367:     {;main.c: 368:         verifySensor();
   774  03A9  120A  118A  24A8  120A  118A  	fcall	_verifySensor
   775  03AE                     l1936:
   776                           
   777                           ;main.c: 369:         verifyMenu();
   778  03AE  120A  118A  2521  120A  118A  	fcall	_verifyMenu
   779  03B3  0064               	clrwdt	;# 
   780  03B4  2BA9               	goto	l1934
   781  03B5  120A  118A  280C   	ljmp	start
   782  03B8                     __end_of_main:
   783                           
   784                           	psect	text1
   785  04A8                     __ptext1:	
   786 ;; *************** function _verifySensor *****************
   787 ;; Defined at:
   788 ;;		line 290 in file "main.c"
   789 ;; Parameters:    Size  Location     Type
   790 ;;		None
   791 ;; Auto vars:     Size  Location     Type
   792 ;;		None
   793 ;; Return value:  Size  Location     Type
   794 ;;                  1    wreg      void 
   795 ;; Registers used:
   796 ;;		wreg, status,2, status,0, pclath, cstack
   797 ;; Tracked objects:
   798 ;;		On entry : 0/0
   799 ;;		On exit  : 0/0
   800 ;;		Unchanged: 0/0
   801 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   802 ;;      Params:         0       0       0       0       0
   803 ;;      Locals:         0       0       0       0       0
   804 ;;      Temps:          0       1       0       0       0
   805 ;;      Totals:         0       1       0       0       0
   806 ;;Total ram usage:        1 bytes
   807 ;; Hardware stack levels used: 1
   808 ;; Hardware stack levels required when called: 5
   809 ;; This function calls:
   810 ;;		_getADConverterValue
   811 ;;		_irrigar
   812 ;; This function is called by:
   813 ;;		_main
   814 ;; This function uses a non-reentrant model
   815 ;;
   816                           
   817  04A8                     _verifySensor:	
   818                           ;psect for function _verifySensor
   819                           
   820  04A8                     l1904:	
   821                           ;incstack = 0
   822                           ; Regs used in _verifySensor: [wreg+status,2+status,0+pclath+cstack]
   823                           
   824                           
   825                           ;main.c: 292:     if(getADConverterValue()<umidade_minima){
   826  04A8  120A  118A  23EF  120A  118A  	fcall	_getADConverterValue
   827  04AD  1283               	bcf	3,5	;RP0=0, select bank0
   828  04AE  1303               	bcf	3,6	;RP1=0, select bank0
   829  04AF  082C               	movf	?_getADConverterValue+1,w
   830  04B0  3A80               	xorlw	128
   831  04B1  00B1               	movwf	??_verifySensor
   832  04B2  0840               	movf	_umidade_minima+1,w
   833  04B3  3A80               	xorlw	128
   834  04B4  0231               	subwf	??_verifySensor,w
   835  04B5  1D03               	skipz
   836  04B6  2CB9               	goto	u1505
   837  04B7  083F               	movf	_umidade_minima,w
   838  04B8  022B               	subwf	?_getADConverterValue,w
   839  04B9                     u1505:
   840  04B9  1803               	skipnc
   841  04BA  2CBC               	goto	u1501
   842  04BB  2CBD               	goto	u1500
   843  04BC                     u1501:
   844  04BC  2CC6               	goto	l176
   845  04BD                     u1500:
   846  04BD                     l1906:
   847                           
   848                           ;main.c: 293:         PORTBbits.RB7 = 1;
   849  04BD  1283               	bcf	3,5	;RP0=0, select bank0
   850  04BE  1303               	bcf	3,6	;RP1=0, select bank0
   851  04BF  1786               	bsf	6,7	;volatile
   852  04C0                     l1908:
   853                           
   854                           ;main.c: 294:         irrigar();
   855  04C0  120A  118A  25FD  120A  118A  	fcall	_irrigar
   856                           
   857                           ;main.c: 295:     }
   858  04C5  2CC9               	goto	l178
   859  04C6                     l176:	
   860                           ;main.c: 296:     else{
   861                           
   862                           
   863                           ;main.c: 297:         PORTBbits.RB7 = 0;
   864  04C6  1283               	bcf	3,5	;RP0=0, select bank0
   865  04C7  1303               	bcf	3,6	;RP1=0, select bank0
   866  04C8  1386               	bcf	6,7	;volatile
   867  04C9                     l178:
   868  04C9  0008               	return
   869  04CA                     __end_of_verifySensor:
   870                           
   871                           	psect	text2
   872  05FD                     __ptext2:	
   873 ;; *************** function _irrigar *****************
   874 ;; Defined at:
   875 ;;		line 155 in file "main.c"
   876 ;; Parameters:    Size  Location     Type
   877 ;;		None
   878 ;; Auto vars:     Size  Location     Type
   879 ;;		None
   880 ;; Return value:  Size  Location     Type
   881 ;;                  1    wreg      void 
   882 ;; Registers used:
   883 ;;		wreg, status,2
   884 ;; Tracked objects:
   885 ;;		On entry : 0/0
   886 ;;		On exit  : 0/0
   887 ;;		Unchanged: 0/0
   888 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   889 ;;      Params:         0       0       0       0       0
   890 ;;      Locals:         0       0       0       0       0
   891 ;;      Temps:          0       0       0       0       0
   892 ;;      Totals:         0       0       0       0       0
   893 ;;Total ram usage:        0 bytes
   894 ;; Hardware stack levels used: 1
   895 ;; Hardware stack levels required when called: 3
   896 ;; This function calls:
   897 ;;		Nothing
   898 ;; This function is called by:
   899 ;;		_verifySensor
   900 ;; This function uses a non-reentrant model
   901 ;;
   902                           
   903  05FD                     _irrigar:	
   904                           ;psect for function _irrigar
   905                           
   906  05FD                     l1382:	
   907                           ;incstack = 0
   908                           ; Regs used in _irrigar: [wreg+status,2]
   909                           
   910                           
   911                           ;main.c: 157:     irrigacao_ativa = 1;
   912  05FD  3001               	movlw	1
   913  05FE  00F9               	movwf	_irrigacao_ativa
   914  05FF  3000               	movlw	0
   915  0600  00FA               	movwf	_irrigacao_ativa+1
   916  0601                     l1384:
   917                           
   918                           ;main.c: 158:     timer_counter = 0;
   919  0601  1283               	bcf	3,5	;RP0=0, select bank0
   920  0602  1303               	bcf	3,6	;RP1=0, select bank0
   921  0603  01C5               	clrf	_timer_counter
   922  0604  01C6               	clrf	_timer_counter+1
   923  0605                     l1386:
   924                           
   925                           ;main.c: 160:     T1CONbits.TMR1ON = 1;
   926  0605  1410               	bsf	16,0	;volatile
   927  0606                     l128:
   928  0606  0008               	return
   929  0607                     __end_of_irrigar:
   930                           
   931                           	psect	text3
   932  03EF                     __ptext3:	
   933 ;; *************** function _getADConverterValue *****************
   934 ;; Defined at:
   935 ;;		line 284 in file "main.c"
   936 ;; Parameters:    Size  Location     Type
   937 ;;		None
   938 ;; Auto vars:     Size  Location     Type
   939 ;;  leitura         2   15[BANK0 ] int 
   940 ;; Return value:  Size  Location     Type
   941 ;;                  2   11[BANK0 ] int 
   942 ;; Registers used:
   943 ;;		wreg, status,2, status,0, pclath, cstack
   944 ;; Tracked objects:
   945 ;;		On entry : 0/0
   946 ;;		On exit  : 0/0
   947 ;;		Unchanged: 0/0
   948 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   949 ;;      Params:         0       2       0       0       0
   950 ;;      Locals:         0       2       0       0       0
   951 ;;      Temps:          0       2       0       0       0
   952 ;;      Totals:         0       6       0       0       0
   953 ;;Total ram usage:        6 bytes
   954 ;; Hardware stack levels used: 1
   955 ;; Hardware stack levels required when called: 4
   956 ;; This function calls:
   957 ;;		___awdiv
   958 ;;		___wmul
   959 ;; This function is called by:
   960 ;;		_verifySensor
   961 ;; This function uses a non-reentrant model
   962 ;;
   963                           
   964  03EF                     _getADConverterValue:	
   965                           ;psect for function _getADConverterValue
   966                           
   967  03EF                     l1864:	
   968                           ;incstack = 0
   969                           ; Regs used in _getADConverterValue: [wreg+status,2+status,0+pclath+cstack]
   970                           
   971                           
   972                           ;main.c: 285:     ADCON0bits.GO = 1;
   973  03EF  1283               	bcf	3,5	;RP0=0, select bank0
   974  03F0  1303               	bcf	3,6	;RP1=0, select bank0
   975  03F1  151F               	bsf	31,2	;volatile
   976  03F2                     l1866:
   977                           
   978                           ;main.c: 286:     _delay((unsigned long)((100)*(4000000/4000000.0)));
   979  03F2  3020               	movlw	32
   980  03F3  1283               	bcf	3,5	;RP0=0, select bank0
   981  03F4  1303               	bcf	3,6	;RP1=0, select bank0
   982  03F5  00AD               	movwf	??_getADConverterValue
   983  03F6                     u1517:
   984  03F6  0BAD               	decfsz	??_getADConverterValue,f
   985  03F7  2BF6               	goto	u1517
   986  03F8  0000               	nop
   987  03F9                     l1868:
   988                           
   989                           ;main.c: 287:     int leitura = 100*ADRESH/256;
   990  03F9  3000               	movlw	0
   991  03FA  1283               	bcf	3,5	;RP0=0, select bank0
   992  03FB  1303               	bcf	3,6	;RP1=0, select bank0
   993  03FC  00A2               	movwf	___awdiv@divisor
   994  03FD  3001               	movlw	1
   995  03FE  00A3               	movwf	___awdiv@divisor+1
   996  03FF  081E               	movf	30,w	;volatile
   997  0400  00AD               	movwf	??_getADConverterValue
   998  0401  01AE               	clrf	??_getADConverterValue+1
   999  0402  082D               	movf	??_getADConverterValue,w
  1000  0403  00F3               	movwf	___wmul@multiplier
  1001  0404  082E               	movf	??_getADConverterValue+1,w
  1002  0405  00F4               	movwf	___wmul@multiplier+1
  1003  0406  3064               	movlw	100
  1004  0407  00F5               	movwf	___wmul@multiplicand
  1005  0408  3000               	movlw	0
  1006  0409  00F6               	movwf	___wmul@multiplicand+1
  1007  040A  120A  118A  2483  120A  118A  	fcall	___wmul
  1008  040F  0874               	movf	?___wmul+1,w
  1009  0410  1283               	bcf	3,5	;RP0=0, select bank0
  1010  0411  1303               	bcf	3,6	;RP1=0, select bank0
  1011  0412  00A5               	movwf	___awdiv@dividend+1
  1012  0413  0873               	movf	?___wmul,w
  1013  0414  00A4               	movwf	___awdiv@dividend
  1014  0415  120A  118A  2206  120A  118A  	fcall	___awdiv
  1015  041A  1283               	bcf	3,5	;RP0=0, select bank0
  1016  041B  1303               	bcf	3,6	;RP1=0, select bank0
  1017  041C  0823               	movf	?___awdiv+1,w
  1018  041D  00B0               	movwf	getADConverterValue@leitura+1
  1019  041E  0822               	movf	?___awdiv,w
  1020  041F  00AF               	movwf	getADConverterValue@leitura
  1021  0420                     l1870:
  1022                           
  1023                           ;main.c: 288:     return leitura;
  1024  0420  0830               	movf	getADConverterValue@leitura+1,w
  1025  0421  00AC               	movwf	?_getADConverterValue+1
  1026  0422  082F               	movf	getADConverterValue@leitura,w
  1027  0423  00AB               	movwf	?_getADConverterValue
  1028  0424                     l173:
  1029  0424  0008               	return
  1030  0425                     __end_of_getADConverterValue:
  1031                           
  1032                           	psect	text4
  1033  0521                     __ptext4:	
  1034 ;; *************** function _verifyMenu *****************
  1035 ;; Defined at:
  1036 ;;		line 272 in file "main.c"
  1037 ;; Parameters:    Size  Location     Type
  1038 ;;		None
  1039 ;; Auto vars:     Size  Location     Type
  1040 ;;		None
  1041 ;; Return value:  Size  Location     Type
  1042 ;;                  1    wreg      void 
  1043 ;; Registers used:
  1044 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1045 ;; Tracked objects:
  1046 ;;		On entry : 0/0
  1047 ;;		On exit  : 0/0
  1048 ;;		Unchanged: 0/0
  1049 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1050 ;;      Params:         0       0       0       0       0
  1051 ;;      Locals:         0       0       0       0       0
  1052 ;;      Temps:          0       3       0       0       0
  1053 ;;      Totals:         0       3       0       0       0
  1054 ;;Total ram usage:        3 bytes
  1055 ;; Hardware stack levels used: 1
  1056 ;; Hardware stack levels required when called: 8
  1057 ;; This function calls:
  1058 ;;		_handleMenu
  1059 ;; This function is called by:
  1060 ;;		_main
  1061 ;; This function uses a non-reentrant model
  1062 ;;
  1063                           
  1064  0521                     _verifyMenu:	
  1065                           ;psect for function _verifyMenu
  1066                           
  1067  0521                     l1894:	
  1068                           ;incstack = 0
  1069 ;; hardware stack exceeded
  1070                           ; Regs used in _verifyMenu: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1071                           
  1072                           
  1073                           ;main.c: 274:     if (!PORTBbits.RB2)
  1074  0521  1283               	bcf	3,5	;RP0=0, select bank0
  1075  0522  1303               	bcf	3,6	;RP1=0, select bank0
  1076  0523  1906               	btfsc	6,2	;volatile
  1077  0524  2D26               	goto	u1491
  1078  0525  2D27               	goto	u1490
  1079  0526                     u1491:
  1080  0526  2D3F               	goto	l170
  1081  0527                     u1490:
  1082  0527                     l1896:
  1083                           
  1084                           ;main.c: 275:     {;main.c: 276:         setup_menu = 1;
  1085  0527  3001               	movlw	1
  1086  0528  00C3               	movwf	_setup_menu
  1087  0529  3000               	movlw	0
  1088  052A  00C4               	movwf	_setup_menu+1
  1089  052B                     l1898:
  1090                           
  1091                           ;main.c: 277:         PORTBbits.RB5 = 1;
  1092  052B  1686               	bsf	6,5	;volatile
  1093                           
  1094                           ;main.c: 278:         _delay((unsigned long)((500)*(4000000/4000.0)));
  1095  052C  3003               	movlw	3
  1096  052D  1283               	bcf	3,5	;RP0=0, select bank0
  1097  052E  1303               	bcf	3,6	;RP1=0, select bank0
  1098  052F  00BA               	movwf	??_verifyMenu+2
  1099  0530  308A               	movlw	138
  1100  0531  00B9               	movwf	??_verifyMenu+1
  1101  0532  3055               	movlw	85
  1102  0533  00B8               	movwf	??_verifyMenu
  1103  0534                     u1527:
  1104  0534  0BB8               	decfsz	??_verifyMenu,f
  1105  0535  2D34               	goto	u1527
  1106  0536  0BB9               	decfsz	??_verifyMenu+1,f
  1107  0537  2D34               	goto	u1527
  1108  0538  0BBA               	decfsz	??_verifyMenu+2,f
  1109  0539  2D34               	goto	u1527
  1110  053A                     l1900:
  1111                           
  1112                           ;main.c: 279:         handleMenu();
  1113  053A  120A  118A  2027  120A  118A  	fcall	_handleMenu
  1114  053F                     l170:
  1115  053F  0008               	return
  1116  0540                     __end_of_verifyMenu:
  1117                           
  1118                           	psect	text5
  1119  0027                     __ptext5:	
  1120 ;; *************** function _handleMenu *****************
  1121 ;; Defined at:
  1122 ;;		line 208 in file "main.c"
  1123 ;; Parameters:    Size  Location     Type
  1124 ;;		None
  1125 ;; Auto vars:     Size  Location     Type
  1126 ;;  umidade         2   22[BANK0 ] int 
  1127 ;;  volume          2   20[BANK0 ] int 
  1128 ;; Return value:  Size  Location     Type
  1129 ;;                  1    wreg      void 
  1130 ;; Registers used:
  1131 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1132 ;; Tracked objects:
  1133 ;;		On entry : 0/0
  1134 ;;		On exit  : 0/0
  1135 ;;		Unchanged: 0/0
  1136 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1137 ;;      Params:         0       0       0       0       0
  1138 ;;      Locals:         0       4       0       0       0
  1139 ;;      Temps:          0       3       0       0       0
  1140 ;;      Totals:         0       7       0       0       0
  1141 ;;Total ram usage:        7 bytes
  1142 ;; Hardware stack levels used: 1
  1143 ;; Hardware stack levels required when called: 7
  1144 ;; This function calls:
  1145 ;;		_Lcd_Clear
  1146 ;;		_Lcd_Set_Cursor
  1147 ;;		_Lcd_Write_String
  1148 ;;		_setupNewVolumeFlow
  1149 ;;		_writeValor
  1150 ;; This function is called by:
  1151 ;;		_verifyMenu
  1152 ;; This function uses a non-reentrant model
  1153 ;;
  1154                           
  1155  0027                     _handleMenu:	
  1156                           ;psect for function _handleMenu
  1157                           
  1158  0027                     l1770:	
  1159                           ;incstack = 0
  1160 ;; hardware stack exceeded
  1161                           ; Regs used in _handleMenu: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1162                           
  1163                           
  1164                           ;main.c: 210:     int volume = water_volume;
  1165  0027  1283               	bcf	3,5	;RP0=0, select bank0
  1166  0028  1303               	bcf	3,6	;RP1=0, select bank0
  1167  0029  083E               	movf	_water_volume+1,w
  1168  002A  00B5               	movwf	handleMenu@volume+1
  1169  002B  083D               	movf	_water_volume,w
  1170  002C  00B4               	movwf	handleMenu@volume
  1171                           
  1172                           ;main.c: 211:     int umidade = umidade_minima;
  1173  002D  0840               	movf	_umidade_minima+1,w
  1174  002E  00B7               	movwf	handleMenu@umidade+1
  1175  002F  083F               	movf	_umidade_minima,w
  1176  0030  00B6               	movwf	handleMenu@umidade
  1177                           
  1178                           ;main.c: 213:     while(setup_menu == 1){
  1179  0031  28C9               	goto	l1808
  1180  0032                     l148:
  1181  0032  0064               	clrwdt	;# 
  1182  0033                     l1772:
  1183                           
  1184                           ;main.c: 215:         _delay((unsigned long)((100)*(4000000/4000.0)));
  1185  0033  3082               	movlw	130
  1186  0034  1283               	bcf	3,5	;RP0=0, select bank0
  1187  0035  1303               	bcf	3,6	;RP1=0, select bank0
  1188  0036  00B2               	movwf	??_handleMenu+1
  1189  0037  30DD               	movlw	221
  1190  0038  00B1               	movwf	??_handleMenu
  1191  0039                     u1537:
  1192  0039  0BB1               	decfsz	??_handleMenu,f
  1193  003A  2839               	goto	u1537
  1194  003B  0BB2               	decfsz	??_handleMenu+1,f
  1195  003C  2839               	goto	u1537
  1196  003D                     l1774:
  1197                           
  1198                           ;main.c: 216:         Lcd_Set_Cursor(1,1);
  1199  003D  01F7               	clrf	Lcd_Set_Cursor@b
  1200  003E  0AF7               	incf	Lcd_Set_Cursor@b,f
  1201  003F  3001               	movlw	1
  1202  0040  120A  118A  2327  120A  118A  	fcall	_Lcd_Set_Cursor
  1203  0045                     l1776:
  1204                           
  1205                           ;main.c: 217:         Lcd_Write_String("NEW THRESHOLD:");
  1206  0045  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1207  0046  120A  118A  245A  120A  118A  	fcall	_Lcd_Write_String
  1208  004B                     l1778:
  1209                           
  1210                           ;main.c: 218:         writeValor(umidade);
  1211  004B  1283               	bcf	3,5	;RP0=0, select bank0
  1212  004C  1303               	bcf	3,6	;RP1=0, select bank0
  1213  004D  0837               	movf	handleMenu@umidade+1,w
  1214  004E  00AC               	movwf	writeValor@valor+1
  1215  004F  0836               	movf	handleMenu@umidade,w
  1216  0050  00AB               	movwf	writeValor@valor
  1217  0051  120A  118A  2198  120A  118A  	fcall	_writeValor
  1218  0056                     l1780:
  1219                           
  1220                           ;main.c: 219:         if(!PORTBbits.RB2){
  1221  0056  1283               	bcf	3,5	;RP0=0, select bank0
  1222  0057  1303               	bcf	3,6	;RP1=0, select bank0
  1223  0058  1906               	btfsc	6,2	;volatile
  1224  0059  285B               	goto	u1361
  1225  005A  285C               	goto	u1360
  1226  005B                     u1361:
  1227  005B  2872               	goto	l1784
  1228  005C                     u1360:
  1229  005C                     l1782:
  1230                           
  1231                           ;main.c: 220:             umidade_minima = umidade;
  1232  005C  0837               	movf	handleMenu@umidade+1,w
  1233  005D  00C0               	movwf	_umidade_minima+1
  1234  005E  0836               	movf	handleMenu@umidade,w
  1235  005F  00BF               	movwf	_umidade_minima
  1236                           
  1237                           ;main.c: 221:             setup_menu = 2;
  1238  0060  3002               	movlw	2
  1239  0061  00C3               	movwf	_setup_menu
  1240  0062  3000               	movlw	0
  1241  0063  00C4               	movwf	_setup_menu+1
  1242                           
  1243                           ;main.c: 222:             _delay((unsigned long)((500)*(4000000/4000.0)));
  1244  0064  3003               	movlw	3
  1245  0065  1283               	bcf	3,5	;RP0=0, select bank0
  1246  0066  1303               	bcf	3,6	;RP1=0, select bank0
  1247  0067  00B3               	movwf	??_handleMenu+2
  1248  0068  308A               	movlw	138
  1249  0069  00B2               	movwf	??_handleMenu+1
  1250  006A  3055               	movlw	85
  1251  006B  00B1               	movwf	??_handleMenu
  1252  006C                     u1547:
  1253  006C  0BB1               	decfsz	??_handleMenu,f
  1254  006D  286C               	goto	u1547
  1255  006E  0BB2               	decfsz	??_handleMenu+1,f
  1256  006F  286C               	goto	u1547
  1257  0070  0BB3               	decfsz	??_handleMenu+2,f
  1258  0071  286C               	goto	u1547
  1259  0072                     l1784:
  1260                           
  1261                           ;main.c: 224:         if(!PORTBbits.RB3){
  1262  0072  1283               	bcf	3,5	;RP0=0, select bank0
  1263  0073  1303               	bcf	3,6	;RP1=0, select bank0
  1264  0074  1986               	btfsc	6,3	;volatile
  1265  0075  2877               	goto	u1371
  1266  0076  2878               	goto	u1370
  1267  0077                     u1371:
  1268  0077  28A4               	goto	l1796
  1269  0078                     u1370:
  1270  0078                     l1786:
  1271                           
  1272                           ;main.c: 225:             umidade++;
  1273  0078  3001               	movlw	1
  1274  0079  07B6               	addwf	handleMenu@umidade,f
  1275  007A  1803               	skipnc
  1276  007B  0AB7               	incf	handleMenu@umidade+1,f
  1277  007C  3000               	movlw	0
  1278  007D  07B7               	addwf	handleMenu@umidade+1,f
  1279  007E                     l1788:
  1280                           
  1281                           ;main.c: 226:             if(umidade > 999) umidade = 0;
  1282  007E  0837               	movf	handleMenu@umidade+1,w
  1283  007F  3A80               	xorlw	128
  1284  0080  00FF               	movwf	btemp+1
  1285  0081  3083               	movlw	131
  1286  0082  027F               	subwf	btemp+1,w
  1287  0083  1D03               	skipz
  1288  0084  2887               	goto	u1385
  1289  0085  30E8               	movlw	232
  1290  0086  0236               	subwf	handleMenu@umidade,w
  1291  0087                     u1385:
  1292  0087  1C03               	skipc
  1293  0088  288A               	goto	u1381
  1294  0089  288B               	goto	u1380
  1295  008A                     u1381:
  1296  008A  288F               	goto	l1792
  1297  008B                     u1380:
  1298  008B                     l1790:
  1299  008B  1283               	bcf	3,5	;RP0=0, select bank0
  1300  008C  1303               	bcf	3,6	;RP1=0, select bank0
  1301  008D  01B6               	clrf	handleMenu@umidade
  1302  008E  01B7               	clrf	handleMenu@umidade+1
  1303  008F                     l1792:
  1304                           
  1305                           ;main.c: 227:             writeValor(umidade);
  1306  008F  1283               	bcf	3,5	;RP0=0, select bank0
  1307  0090  1303               	bcf	3,6	;RP1=0, select bank0
  1308  0091  0837               	movf	handleMenu@umidade+1,w
  1309  0092  00AC               	movwf	writeValor@valor+1
  1310  0093  0836               	movf	handleMenu@umidade,w
  1311  0094  00AB               	movwf	writeValor@valor
  1312  0095  120A  118A  2198  120A  118A  	fcall	_writeValor
  1313  009A                     l1794:
  1314                           
  1315                           ;main.c: 228:             _delay((unsigned long)((100)*(4000000/4000.0)));
  1316  009A  3082               	movlw	130
  1317  009B  1283               	bcf	3,5	;RP0=0, select bank0
  1318  009C  1303               	bcf	3,6	;RP1=0, select bank0
  1319  009D  00B2               	movwf	??_handleMenu+1
  1320  009E  30DD               	movlw	221
  1321  009F  00B1               	movwf	??_handleMenu
  1322  00A0                     u1557:
  1323  00A0  0BB1               	decfsz	??_handleMenu,f
  1324  00A1  28A0               	goto	u1557
  1325  00A2  0BB2               	decfsz	??_handleMenu+1,f
  1326  00A3  28A0               	goto	u1557
  1327  00A4                     l1796:
  1328                           
  1329                           ;main.c: 230:         if(!PORTBbits.RB4){
  1330  00A4  1283               	bcf	3,5	;RP0=0, select bank0
  1331  00A5  1303               	bcf	3,6	;RP1=0, select bank0
  1332  00A6  1A06               	btfsc	6,4	;volatile
  1333  00A7  28A9               	goto	u1391
  1334  00A8  28AA               	goto	u1390
  1335  00A9                     u1391:
  1336  00A9  28C9               	goto	l1808
  1337  00AA                     u1390:
  1338  00AA                     l1798:
  1339                           
  1340                           ;main.c: 231:             umidade--;
  1341  00AA  30FF               	movlw	255
  1342  00AB  07B6               	addwf	handleMenu@umidade,f
  1343  00AC  1803               	skipnc
  1344  00AD  0AB7               	incf	handleMenu@umidade+1,f
  1345  00AE  30FF               	movlw	255
  1346  00AF  07B7               	addwf	handleMenu@umidade+1,f
  1347  00B0                     l1800:
  1348                           
  1349                           ;main.c: 232:             if(umidade < 0) umidade = 0;
  1350  00B0  1FB7               	btfss	handleMenu@umidade+1,7
  1351  00B1  28B3               	goto	u1401
  1352  00B2  28B4               	goto	u1400
  1353  00B3                     u1401:
  1354  00B3  28B6               	goto	l1804
  1355  00B4                     u1400:
  1356  00B4                     l1802:
  1357  00B4  01B6               	clrf	handleMenu@umidade
  1358  00B5  01B7               	clrf	handleMenu@umidade+1
  1359  00B6                     l1804:
  1360                           
  1361                           ;main.c: 233:             writeValor(umidade);
  1362  00B6  0837               	movf	handleMenu@umidade+1,w
  1363  00B7  00AC               	movwf	writeValor@valor+1
  1364  00B8  0836               	movf	handleMenu@umidade,w
  1365  00B9  00AB               	movwf	writeValor@valor
  1366  00BA  120A  118A  2198  120A  118A  	fcall	_writeValor
  1367  00BF                     l1806:
  1368                           
  1369                           ;main.c: 234:             _delay((unsigned long)((100)*(4000000/4000.0)));
  1370  00BF  3082               	movlw	130
  1371  00C0  1283               	bcf	3,5	;RP0=0, select bank0
  1372  00C1  1303               	bcf	3,6	;RP1=0, select bank0
  1373  00C2  00B2               	movwf	??_handleMenu+1
  1374  00C3  30DD               	movlw	221
  1375  00C4  00B1               	movwf	??_handleMenu
  1376  00C5                     u1567:
  1377  00C5  0BB1               	decfsz	??_handleMenu,f
  1378  00C6  28C5               	goto	u1567
  1379  00C7  0BB2               	decfsz	??_handleMenu+1,f
  1380  00C8  28C5               	goto	u1567
  1381  00C9                     l1808:
  1382                           
  1383                           ;main.c: 213:     while(setup_menu == 1){
  1384  00C9  1283               	bcf	3,5	;RP0=0, select bank0
  1385  00CA  1303               	bcf	3,6	;RP1=0, select bank0
  1386  00CB  0343               	decf	_setup_menu,w
  1387  00CC  0444               	iorwf	_setup_menu+1,w
  1388  00CD  1903               	btfsc	3,2
  1389  00CE  28D0               	goto	u1411
  1390  00CF  28D1               	goto	u1410
  1391  00D0                     u1411:
  1392  00D0  2832               	goto	l148
  1393  00D1                     u1410:
  1394  00D1                     l1810:
  1395                           
  1396                           ;main.c: 237:     Lcd_Clear();
  1397  00D1  120A  118A  25F0  120A  118A  	fcall	_Lcd_Clear
  1398                           
  1399                           ;main.c: 238:     while(setup_menu == 2){
  1400  00D6  2975               	goto	l1854
  1401  00D7                     l156:
  1402  00D7  0064               	clrwdt	;# 
  1403  00D8                     l1812:
  1404                           
  1405                           ;main.c: 240:         _delay((unsigned long)((100)*(4000000/4000.0)));
  1406  00D8  3082               	movlw	130
  1407  00D9  1283               	bcf	3,5	;RP0=0, select bank0
  1408  00DA  1303               	bcf	3,6	;RP1=0, select bank0
  1409  00DB  00B2               	movwf	??_handleMenu+1
  1410  00DC  30DD               	movlw	221
  1411  00DD  00B1               	movwf	??_handleMenu
  1412  00DE                     u1577:
  1413  00DE  0BB1               	decfsz	??_handleMenu,f
  1414  00DF  28DE               	goto	u1577
  1415  00E0  0BB2               	decfsz	??_handleMenu+1,f
  1416  00E1  28DE               	goto	u1577
  1417  00E2                     l1814:
  1418                           
  1419                           ;main.c: 241:         Lcd_Set_Cursor(1,1);
  1420  00E2  01F7               	clrf	Lcd_Set_Cursor@b
  1421  00E3  0AF7               	incf	Lcd_Set_Cursor@b,f
  1422  00E4  3001               	movlw	1
  1423  00E5  120A  118A  2327  120A  118A  	fcall	_Lcd_Set_Cursor
  1424  00EA                     l1816:
  1425                           
  1426                           ;main.c: 242:         Lcd_Write_String("NEW VOLUME:");
  1427  00EA  3010               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1428  00EB  120A  118A  245A  120A  118A  	fcall	_Lcd_Write_String
  1429  00F0                     l1818:
  1430                           
  1431                           ;main.c: 243:         writeValor(volume);
  1432  00F0  1283               	bcf	3,5	;RP0=0, select bank0
  1433  00F1  1303               	bcf	3,6	;RP1=0, select bank0
  1434  00F2  0835               	movf	handleMenu@volume+1,w
  1435  00F3  00AC               	movwf	writeValor@valor+1
  1436  00F4  0834               	movf	handleMenu@volume,w
  1437  00F5  00AB               	movwf	writeValor@valor
  1438  00F6  120A  118A  2198  120A  118A  	fcall	_writeValor
  1439  00FB                     l1820:
  1440                           
  1441                           ;main.c: 244:         if(!PORTBbits.RB2){
  1442  00FB  1283               	bcf	3,5	;RP0=0, select bank0
  1443  00FC  1303               	bcf	3,6	;RP1=0, select bank0
  1444  00FD  1906               	btfsc	6,2	;volatile
  1445  00FE  2900               	goto	u1421
  1446  00FF  2901               	goto	u1420
  1447  0100                     u1421:
  1448  0100  291E               	goto	l1830
  1449  0101                     u1420:
  1450  0101                     l1822:
  1451                           
  1452                           ;main.c: 245:             water_volume = volume;
  1453  0101  0835               	movf	handleMenu@volume+1,w
  1454  0102  00BE               	movwf	_water_volume+1
  1455  0103  0834               	movf	handleMenu@volume,w
  1456  0104  00BD               	movwf	_water_volume
  1457  0105                     l1824:
  1458                           
  1459                           ;main.c: 246:             setupNewVolumeFlow();
  1460  0105  120A  118A  2540  120A  118A  	fcall	_setupNewVolumeFlow
  1461  010A                     l1826:
  1462                           
  1463                           ;main.c: 247:             setup_menu = 3;
  1464  010A  3003               	movlw	3
  1465  010B  1283               	bcf	3,5	;RP0=0, select bank0
  1466  010C  1303               	bcf	3,6	;RP1=0, select bank0
  1467  010D  00C3               	movwf	_setup_menu
  1468  010E  3000               	movlw	0
  1469  010F  00C4               	movwf	_setup_menu+1
  1470  0110                     l1828:
  1471                           
  1472                           ;main.c: 248:             _delay((unsigned long)((500)*(4000000/4000.0)));
  1473  0110  3003               	movlw	3
  1474  0111  1283               	bcf	3,5	;RP0=0, select bank0
  1475  0112  1303               	bcf	3,6	;RP1=0, select bank0
  1476  0113  00B3               	movwf	??_handleMenu+2
  1477  0114  308A               	movlw	138
  1478  0115  00B2               	movwf	??_handleMenu+1
  1479  0116  3055               	movlw	85
  1480  0117  00B1               	movwf	??_handleMenu
  1481  0118                     u1587:
  1482  0118  0BB1               	decfsz	??_handleMenu,f
  1483  0119  2918               	goto	u1587
  1484  011A  0BB2               	decfsz	??_handleMenu+1,f
  1485  011B  2918               	goto	u1587
  1486  011C  0BB3               	decfsz	??_handleMenu+2,f
  1487  011D  2918               	goto	u1587
  1488  011E                     l1830:
  1489                           
  1490                           ;main.c: 250:         if(!PORTBbits.RB3){
  1491  011E  1283               	bcf	3,5	;RP0=0, select bank0
  1492  011F  1303               	bcf	3,6	;RP1=0, select bank0
  1493  0120  1986               	btfsc	6,3	;volatile
  1494  0121  2923               	goto	u1431
  1495  0122  2924               	goto	u1430
  1496  0123                     u1431:
  1497  0123  2950               	goto	l1842
  1498  0124                     u1430:
  1499  0124                     l1832:
  1500                           
  1501                           ;main.c: 251:             volume++;
  1502  0124  3001               	movlw	1
  1503  0125  07B4               	addwf	handleMenu@volume,f
  1504  0126  1803               	skipnc
  1505  0127  0AB5               	incf	handleMenu@volume+1,f
  1506  0128  3000               	movlw	0
  1507  0129  07B5               	addwf	handleMenu@volume+1,f
  1508  012A                     l1834:
  1509                           
  1510                           ;main.c: 252:             if(volume > 999) volume = 0;
  1511  012A  0835               	movf	handleMenu@volume+1,w
  1512  012B  3A80               	xorlw	128
  1513  012C  00FF               	movwf	btemp+1
  1514  012D  3083               	movlw	131
  1515  012E  027F               	subwf	btemp+1,w
  1516  012F  1D03               	skipz
  1517  0130  2933               	goto	u1445
  1518  0131  30E8               	movlw	232
  1519  0132  0234               	subwf	handleMenu@volume,w
  1520  0133                     u1445:
  1521  0133  1C03               	skipc
  1522  0134  2936               	goto	u1441
  1523  0135  2937               	goto	u1440
  1524  0136                     u1441:
  1525  0136  293B               	goto	l1838
  1526  0137                     u1440:
  1527  0137                     l1836:
  1528  0137  1283               	bcf	3,5	;RP0=0, select bank0
  1529  0138  1303               	bcf	3,6	;RP1=0, select bank0
  1530  0139  01B4               	clrf	handleMenu@volume
  1531  013A  01B5               	clrf	handleMenu@volume+1
  1532  013B                     l1838:
  1533                           
  1534                           ;main.c: 253:             writeValor(volume);
  1535  013B  1283               	bcf	3,5	;RP0=0, select bank0
  1536  013C  1303               	bcf	3,6	;RP1=0, select bank0
  1537  013D  0835               	movf	handleMenu@volume+1,w
  1538  013E  00AC               	movwf	writeValor@valor+1
  1539  013F  0834               	movf	handleMenu@volume,w
  1540  0140  00AB               	movwf	writeValor@valor
  1541  0141  120A  118A  2198  120A  118A  	fcall	_writeValor
  1542  0146                     l1840:
  1543                           
  1544                           ;main.c: 254:             _delay((unsigned long)((100)*(4000000/4000.0)));
  1545  0146  3082               	movlw	130
  1546  0147  1283               	bcf	3,5	;RP0=0, select bank0
  1547  0148  1303               	bcf	3,6	;RP1=0, select bank0
  1548  0149  00B2               	movwf	??_handleMenu+1
  1549  014A  30DD               	movlw	221
  1550  014B  00B1               	movwf	??_handleMenu
  1551  014C                     u1597:
  1552  014C  0BB1               	decfsz	??_handleMenu,f
  1553  014D  294C               	goto	u1597
  1554  014E  0BB2               	decfsz	??_handleMenu+1,f
  1555  014F  294C               	goto	u1597
  1556  0150                     l1842:
  1557                           
  1558                           ;main.c: 256:         if(!PORTBbits.RB4){
  1559  0150  1283               	bcf	3,5	;RP0=0, select bank0
  1560  0151  1303               	bcf	3,6	;RP1=0, select bank0
  1561  0152  1A06               	btfsc	6,4	;volatile
  1562  0153  2955               	goto	u1451
  1563  0154  2956               	goto	u1450
  1564  0155                     u1451:
  1565  0155  2975               	goto	l1854
  1566  0156                     u1450:
  1567  0156                     l1844:
  1568                           
  1569                           ;main.c: 257:             volume--;
  1570  0156  30FF               	movlw	255
  1571  0157  07B4               	addwf	handleMenu@volume,f
  1572  0158  1803               	skipnc
  1573  0159  0AB5               	incf	handleMenu@volume+1,f
  1574  015A  30FF               	movlw	255
  1575  015B  07B5               	addwf	handleMenu@volume+1,f
  1576  015C                     l1846:
  1577                           
  1578                           ;main.c: 258:             if(volume < 0) volume = 0;
  1579  015C  1FB5               	btfss	handleMenu@volume+1,7
  1580  015D  295F               	goto	u1461
  1581  015E  2960               	goto	u1460
  1582  015F                     u1461:
  1583  015F  2962               	goto	l1850
  1584  0160                     u1460:
  1585  0160                     l1848:
  1586  0160  01B4               	clrf	handleMenu@volume
  1587  0161  01B5               	clrf	handleMenu@volume+1
  1588  0162                     l1850:
  1589                           
  1590                           ;main.c: 259:             writeValor(volume);
  1591  0162  0835               	movf	handleMenu@volume+1,w
  1592  0163  00AC               	movwf	writeValor@valor+1
  1593  0164  0834               	movf	handleMenu@volume,w
  1594  0165  00AB               	movwf	writeValor@valor
  1595  0166  120A  118A  2198  120A  118A  	fcall	_writeValor
  1596  016B                     l1852:
  1597                           
  1598                           ;main.c: 260:             _delay((unsigned long)((100)*(4000000/4000.0)));
  1599  016B  3082               	movlw	130
  1600  016C  1283               	bcf	3,5	;RP0=0, select bank0
  1601  016D  1303               	bcf	3,6	;RP1=0, select bank0
  1602  016E  00B2               	movwf	??_handleMenu+1
  1603  016F  30DD               	movlw	221
  1604  0170  00B1               	movwf	??_handleMenu
  1605  0171                     u1607:
  1606  0171  0BB1               	decfsz	??_handleMenu,f
  1607  0172  2971               	goto	u1607
  1608  0173  0BB2               	decfsz	??_handleMenu+1,f
  1609  0174  2971               	goto	u1607
  1610  0175                     l1854:
  1611                           
  1612                           ;main.c: 238:     while(setup_menu == 2){
  1613  0175  3002               	movlw	2
  1614  0176  1283               	bcf	3,5	;RP0=0, select bank0
  1615  0177  1303               	bcf	3,6	;RP1=0, select bank0
  1616  0178  0643               	xorwf	_setup_menu,w
  1617  0179  0444               	iorwf	_setup_menu+1,w
  1618  017A  1903               	btfsc	3,2
  1619  017B  297D               	goto	u1471
  1620  017C  297E               	goto	u1470
  1621  017D                     u1471:
  1622  017D  28D7               	goto	l156
  1623  017E                     u1470:
  1624  017E                     l1856:
  1625                           
  1626                           ;main.c: 263:     Lcd_Clear();
  1627  017E  120A  118A  25F0  120A  118A  	fcall	_Lcd_Clear
  1628                           
  1629                           ;main.c: 264:     while(setup_menu == 3){
  1630  0183  2989               	goto	l1858
  1631  0184                     l164:
  1632  0184  0064               	clrwdt	;# 
  1633                           
  1634                           ;main.c: 266:         PORTBbits.RB5 = 0;
  1635  0185  1283               	bcf	3,5	;RP0=0, select bank0
  1636  0186  1303               	bcf	3,6	;RP1=0, select bank0
  1637  0187  1286               	bcf	6,5	;volatile
  1638                           
  1639                           ;main.c: 267:         break;
  1640  0188  2992               	goto	l1860
  1641  0189                     l1858:
  1642                           
  1643                           ;main.c: 264:     while(setup_menu == 3){
  1644  0189  3003               	movlw	3
  1645  018A  1283               	bcf	3,5	;RP0=0, select bank0
  1646  018B  1303               	bcf	3,6	;RP1=0, select bank0
  1647  018C  0643               	xorwf	_setup_menu,w
  1648  018D  0444               	iorwf	_setup_menu+1,w
  1649  018E  1903               	btfsc	3,2
  1650  018F  2991               	goto	u1481
  1651  0190  2992               	goto	u1480
  1652  0191                     u1481:
  1653  0191  2984               	goto	l164
  1654  0192                     u1480:
  1655  0192                     l1860:
  1656                           
  1657                           ;main.c: 269:     Lcd_Clear();
  1658  0192  120A  118A  25F0  120A  118A  	fcall	_Lcd_Clear
  1659  0197                     l166:
  1660  0197  0008               	return
  1661  0198                     __end_of_handleMenu:
  1662                           
  1663                           	psect	text6
  1664  0198                     __ptext6:	
  1665 ;; *************** function _writeValor *****************
  1666 ;; Defined at:
  1667 ;;		line 196 in file "main.c"
  1668 ;; Parameters:    Size  Location     Type
  1669 ;;  valor           2   11[BANK0 ] int 
  1670 ;; Auto vars:     Size  Location     Type
  1671 ;;  unidade         1   16[BANK0 ] unsigned char 
  1672 ;;  dezena          1   15[BANK0 ] unsigned char 
  1673 ;;  centena         1   14[BANK0 ] unsigned char 
  1674 ;; Return value:  Size  Location     Type
  1675 ;;                  1    wreg      void 
  1676 ;; Registers used:
  1677 ;;		wreg, status,2, status,0, pclath, cstack
  1678 ;; Tracked objects:
  1679 ;;		On entry : 0/0
  1680 ;;		On exit  : 0/0
  1681 ;;		Unchanged: 0/0
  1682 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1683 ;;      Params:         0       2       0       0       0
  1684 ;;      Locals:         0       3       0       0       0
  1685 ;;      Temps:          0       1       0       0       0
  1686 ;;      Totals:         0       6       0       0       0
  1687 ;;Total ram usage:        6 bytes
  1688 ;; Hardware stack levels used: 1
  1689 ;; Hardware stack levels required when called: 6
  1690 ;; This function calls:
  1691 ;;		_Lcd_Set_Cursor
  1692 ;;		_Lcd_Write_Char
  1693 ;;		___awdiv
  1694 ;;		___awmod
  1695 ;; This function is called by:
  1696 ;;		_handleMenu
  1697 ;; This function uses a non-reentrant model
  1698 ;;
  1699                           
  1700  0198                     _writeValor:	
  1701                           ;psect for function _writeValor
  1702                           
  1703  0198                     l1766:	
  1704                           ;incstack = 0
  1705 ;; hardware stack exceeded
  1706                           ; Regs used in _writeValor: [wreg+status,2+status,0+pclath+cstack]
  1707                           
  1708                           
  1709                           ;main.c: 196: void writeValor(int valor);main.c: 197: {;main.c: 198:     char centena = 
      +                          valor/100 + 48;
  1710  0198  3064               	movlw	100
  1711  0199  1283               	bcf	3,5	;RP0=0, select bank0
  1712  019A  1303               	bcf	3,6	;RP1=0, select bank0
  1713  019B  00A2               	movwf	___awdiv@divisor
  1714  019C  3000               	movlw	0
  1715  019D  00A3               	movwf	___awdiv@divisor+1
  1716  019E  082C               	movf	writeValor@valor+1,w
  1717  019F  00A5               	movwf	___awdiv@dividend+1
  1718  01A0  082B               	movf	writeValor@valor,w
  1719  01A1  00A4               	movwf	___awdiv@dividend
  1720  01A2  120A  118A  2206  120A  118A  	fcall	___awdiv
  1721  01A7  1283               	bcf	3,5	;RP0=0, select bank0
  1722  01A8  1303               	bcf	3,6	;RP1=0, select bank0
  1723  01A9  0822               	movf	?___awdiv,w
  1724  01AA  3E30               	addlw	48
  1725  01AB  00AD               	movwf	??_writeValor
  1726  01AC  082D               	movf	??_writeValor,w
  1727  01AD  00AE               	movwf	writeValor@centena
  1728                           
  1729                           ;main.c: 199:     char dezena = (valor%100)/10 + 48;
  1730  01AE  300A               	movlw	10
  1731  01AF  00A2               	movwf	___awdiv@divisor
  1732  01B0  3000               	movlw	0
  1733  01B1  00A3               	movwf	___awdiv@divisor+1
  1734  01B2  082C               	movf	writeValor@valor+1,w
  1735  01B3  00F6               	movwf	___awmod@dividend+1
  1736  01B4  082B               	movf	writeValor@valor,w
  1737  01B5  00F5               	movwf	___awmod@dividend
  1738  01B6  3064               	movlw	100
  1739  01B7  00F3               	movwf	___awmod@divisor
  1740  01B8  3000               	movlw	0
  1741  01B9  00F4               	movwf	___awmod@divisor+1
  1742  01BA  120A  118A  22CC  120A  118A  	fcall	___awmod
  1743  01BF  0874               	movf	?___awmod+1,w
  1744  01C0  1283               	bcf	3,5	;RP0=0, select bank0
  1745  01C1  1303               	bcf	3,6	;RP1=0, select bank0
  1746  01C2  00A5               	movwf	___awdiv@dividend+1
  1747  01C3  0873               	movf	?___awmod,w
  1748  01C4  00A4               	movwf	___awdiv@dividend
  1749  01C5  120A  118A  2206  120A  118A  	fcall	___awdiv
  1750  01CA  1283               	bcf	3,5	;RP0=0, select bank0
  1751  01CB  1303               	bcf	3,6	;RP1=0, select bank0
  1752  01CC  0822               	movf	?___awdiv,w
  1753  01CD  3E30               	addlw	48
  1754  01CE  00AD               	movwf	??_writeValor
  1755  01CF  082D               	movf	??_writeValor,w
  1756  01D0  00AF               	movwf	writeValor@dezena
  1757                           
  1758                           ;main.c: 200:     char unidade = valor%10 + 48;
  1759  01D1  300A               	movlw	10
  1760  01D2  00F3               	movwf	___awmod@divisor
  1761  01D3  3000               	movlw	0
  1762  01D4  00F4               	movwf	___awmod@divisor+1
  1763  01D5  082C               	movf	writeValor@valor+1,w
  1764  01D6  00F6               	movwf	___awmod@dividend+1
  1765  01D7  082B               	movf	writeValor@valor,w
  1766  01D8  00F5               	movwf	___awmod@dividend
  1767  01D9  120A  118A  22CC  120A  118A  	fcall	___awmod
  1768  01DE  0873               	movf	?___awmod,w
  1769  01DF  3E30               	addlw	48
  1770  01E0  1283               	bcf	3,5	;RP0=0, select bank0
  1771  01E1  1303               	bcf	3,6	;RP1=0, select bank0
  1772  01E2  00AD               	movwf	??_writeValor
  1773  01E3  082D               	movf	??_writeValor,w
  1774  01E4  00B0               	movwf	writeValor@unidade
  1775                           
  1776                           ;main.c: 201:     Lcd_Set_Cursor(2,1);
  1777  01E5  01F7               	clrf	Lcd_Set_Cursor@b
  1778  01E6  0AF7               	incf	Lcd_Set_Cursor@b,f
  1779  01E7  3002               	movlw	2
  1780  01E8  120A  118A  2327  120A  118A  	fcall	_Lcd_Set_Cursor
  1781                           
  1782                           ;main.c: 202:     Lcd_Write_Char(centena);
  1783  01ED  1283               	bcf	3,5	;RP0=0, select bank0
  1784  01EE  1303               	bcf	3,6	;RP1=0, select bank0
  1785  01EF  082E               	movf	writeValor@centena,w
  1786  01F0  120A  118A  23B8  120A  118A  	fcall	_Lcd_Write_Char
  1787                           
  1788                           ;main.c: 203:     Lcd_Write_Char(dezena);
  1789  01F5  1283               	bcf	3,5	;RP0=0, select bank0
  1790  01F6  1303               	bcf	3,6	;RP1=0, select bank0
  1791  01F7  082F               	movf	writeValor@dezena,w
  1792  01F8  120A  118A  23B8  120A  118A  	fcall	_Lcd_Write_Char
  1793                           
  1794                           ;main.c: 204:     Lcd_Write_Char(unidade);
  1795  01FD  1283               	bcf	3,5	;RP0=0, select bank0
  1796  01FE  1303               	bcf	3,6	;RP1=0, select bank0
  1797  01FF  0830               	movf	writeValor@unidade,w
  1798  0200  120A  118A  23B8  120A  118A  	fcall	_Lcd_Write_Char
  1799  0205                     l144:
  1800  0205  0008               	return
  1801  0206                     __end_of_writeValor:
  1802                           
  1803                           	psect	text7
  1804  02CC                     __ptext7:	
  1805 ;; *************** function ___awmod *****************
  1806 ;; Defined at:
  1807 ;;		line 5 in file "D:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\awmod.c"
  1808 ;; Parameters:    Size  Location     Type
  1809 ;;  divisor         2    3[COMMON] int 
  1810 ;;  dividend        2    5[COMMON] int 
  1811 ;; Auto vars:     Size  Location     Type
  1812 ;;  sign            1    1[BANK0 ] unsigned char 
  1813 ;;  counter         1    0[BANK0 ] unsigned char 
  1814 ;; Return value:  Size  Location     Type
  1815 ;;                  2    3[COMMON] int 
  1816 ;; Registers used:
  1817 ;;		wreg, status,2, status,0
  1818 ;; Tracked objects:
  1819 ;;		On entry : 0/0
  1820 ;;		On exit  : 0/0
  1821 ;;		Unchanged: 0/0
  1822 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1823 ;;      Params:         4       0       0       0       0
  1824 ;;      Locals:         0       2       0       0       0
  1825 ;;      Temps:          1       0       0       0       0
  1826 ;;      Totals:         5       2       0       0       0
  1827 ;;Total ram usage:        7 bytes
  1828 ;; Hardware stack levels used: 1
  1829 ;; Hardware stack levels required when called: 3
  1830 ;; This function calls:
  1831 ;;		Nothing
  1832 ;; This function is called by:
  1833 ;;		_writeValor
  1834 ;; This function uses a non-reentrant model
  1835 ;;
  1836                           
  1837  02CC                     ___awmod:	
  1838                           ;psect for function ___awmod
  1839                           
  1840  02CC                     l1714:	
  1841                           ;incstack = 0
  1842                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  1843                           
  1844  02CC  1283               	bcf	3,5	;RP0=0, select bank0
  1845  02CD  1303               	bcf	3,6	;RP1=0, select bank0
  1846  02CE  01A1               	clrf	___awmod@sign
  1847  02CF                     l1716:
  1848  02CF  1FF6               	btfss	___awmod@dividend+1,7
  1849  02D0  2AD2               	goto	u1261
  1850  02D1  2AD3               	goto	u1260
  1851  02D2                     u1261:
  1852  02D2  2ADA               	goto	l1722
  1853  02D3                     u1260:
  1854  02D3                     l1718:
  1855  02D3  09F5               	comf	___awmod@dividend,f
  1856  02D4  09F6               	comf	___awmod@dividend+1,f
  1857  02D5  0AF5               	incf	___awmod@dividend,f
  1858  02D6  1903               	skipnz
  1859  02D7  0AF6               	incf	___awmod@dividend+1,f
  1860  02D8                     l1720:
  1861  02D8  01A1               	clrf	___awmod@sign
  1862  02D9  0AA1               	incf	___awmod@sign,f
  1863  02DA                     l1722:
  1864  02DA  1FF4               	btfss	___awmod@divisor+1,7
  1865  02DB  2ADD               	goto	u1271
  1866  02DC  2ADE               	goto	u1270
  1867  02DD                     u1271:
  1868  02DD  2AE3               	goto	l1726
  1869  02DE                     u1270:
  1870  02DE                     l1724:
  1871  02DE  09F3               	comf	___awmod@divisor,f
  1872  02DF  09F4               	comf	___awmod@divisor+1,f
  1873  02E0  0AF3               	incf	___awmod@divisor,f
  1874  02E1  1903               	skipnz
  1875  02E2  0AF4               	incf	___awmod@divisor+1,f
  1876  02E3                     l1726:
  1877  02E3  0873               	movf	___awmod@divisor,w
  1878  02E4  0474               	iorwf	___awmod@divisor+1,w
  1879  02E5  1903               	btfsc	3,2
  1880  02E6  2AE8               	goto	u1281
  1881  02E7  2AE9               	goto	u1280
  1882  02E8                     u1281:
  1883  02E8  2B18               	goto	l1744
  1884  02E9                     u1280:
  1885  02E9                     l1728:
  1886  02E9  01A0               	clrf	___awmod@counter
  1887  02EA  0AA0               	incf	___awmod@counter,f
  1888  02EB  2AF7               	goto	l1734
  1889  02EC                     l1730:
  1890  02EC  3001               	movlw	1
  1891  02ED                     u1295:
  1892  02ED  1003               	clrc
  1893  02EE  0DF3               	rlf	___awmod@divisor,f
  1894  02EF  0DF4               	rlf	___awmod@divisor+1,f
  1895  02F0  3EFF               	addlw	-1
  1896  02F1  1D03               	skipz
  1897  02F2  2AED               	goto	u1295
  1898  02F3                     l1732:
  1899  02F3  3001               	movlw	1
  1900  02F4  00F7               	movwf	??___awmod
  1901  02F5  0877               	movf	??___awmod,w
  1902  02F6  07A0               	addwf	___awmod@counter,f
  1903  02F7                     l1734:
  1904  02F7  1FF4               	btfss	___awmod@divisor+1,7
  1905  02F8  2AFA               	goto	u1301
  1906  02F9  2AFB               	goto	u1300
  1907  02FA                     u1301:
  1908  02FA  2AEC               	goto	l1730
  1909  02FB                     u1300:
  1910  02FB                     l1736:
  1911  02FB  0874               	movf	___awmod@divisor+1,w
  1912  02FC  0276               	subwf	___awmod@dividend+1,w
  1913  02FD  1D03               	skipz
  1914  02FE  2B01               	goto	u1315
  1915  02FF  0873               	movf	___awmod@divisor,w
  1916  0300  0275               	subwf	___awmod@dividend,w
  1917  0301                     u1315:
  1918  0301  1C03               	skipc
  1919  0302  2B04               	goto	u1311
  1920  0303  2B05               	goto	u1310
  1921  0304                     u1311:
  1922  0304  2B0B               	goto	l1740
  1923  0305                     u1310:
  1924  0305                     l1738:
  1925  0305  0873               	movf	___awmod@divisor,w
  1926  0306  02F5               	subwf	___awmod@dividend,f
  1927  0307  0874               	movf	___awmod@divisor+1,w
  1928  0308  1C03               	skipc
  1929  0309  03F6               	decf	___awmod@dividend+1,f
  1930  030A  02F6               	subwf	___awmod@dividend+1,f
  1931  030B                     l1740:
  1932  030B  3001               	movlw	1
  1933  030C                     u1325:
  1934  030C  1003               	clrc
  1935  030D  0CF4               	rrf	___awmod@divisor+1,f
  1936  030E  0CF3               	rrf	___awmod@divisor,f
  1937  030F  3EFF               	addlw	-1
  1938  0310  1D03               	skipz
  1939  0311  2B0C               	goto	u1325
  1940  0312                     l1742:
  1941  0312  3001               	movlw	1
  1942  0313  02A0               	subwf	___awmod@counter,f
  1943  0314  1D03               	btfss	3,2
  1944  0315  2B17               	goto	u1331
  1945  0316  2B18               	goto	u1330
  1946  0317                     u1331:
  1947  0317  2AFB               	goto	l1736
  1948  0318                     u1330:
  1949  0318                     l1744:
  1950  0318  0821               	movf	___awmod@sign,w
  1951  0319  1903               	btfsc	3,2
  1952  031A  2B1C               	goto	u1341
  1953  031B  2B1D               	goto	u1340
  1954  031C                     u1341:
  1955  031C  2B22               	goto	l1748
  1956  031D                     u1340:
  1957  031D                     l1746:
  1958  031D  09F5               	comf	___awmod@dividend,f
  1959  031E  09F6               	comf	___awmod@dividend+1,f
  1960  031F  0AF5               	incf	___awmod@dividend,f
  1961  0320  1903               	skipnz
  1962  0321  0AF6               	incf	___awmod@dividend+1,f
  1963  0322                     l1748:
  1964  0322  0876               	movf	___awmod@dividend+1,w
  1965  0323  00F4               	movwf	?___awmod+1
  1966  0324  0875               	movf	___awmod@dividend,w
  1967  0325  00F3               	movwf	?___awmod
  1968  0326                     l444:
  1969  0326  0008               	return
  1970  0327                     __end_of___awmod:
  1971                           
  1972                           	psect	text8
  1973  0327                     __ptext8:	
  1974 ;; *************** function _Lcd_Set_Cursor *****************
  1975 ;; Defined at:
  1976 ;;		line 41 in file "./lcd.h"
  1977 ;; Parameters:    Size  Location     Type
  1978 ;;  a               1    wreg     unsigned char 
  1979 ;;  b               1    7[COMMON] unsigned char 
  1980 ;; Auto vars:     Size  Location     Type
  1981 ;;  a               1    2[BANK0 ] unsigned char 
  1982 ;;  temp            1    5[BANK0 ] unsigned char 
  1983 ;;  y               1    4[BANK0 ] unsigned char 
  1984 ;;  z               1    3[BANK0 ] unsigned char 
  1985 ;; Return value:  Size  Location     Type
  1986 ;;                  1    wreg      void 
  1987 ;; Registers used:
  1988 ;;		wreg, status,2, status,0, pclath, cstack
  1989 ;; Tracked objects:
  1990 ;;		On entry : 0/0
  1991 ;;		On exit  : 0/0
  1992 ;;		Unchanged: 0/0
  1993 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1994 ;;      Params:         1       0       0       0       0
  1995 ;;      Locals:         0       4       0       0       0
  1996 ;;      Temps:          0       2       0       0       0
  1997 ;;      Totals:         1       6       0       0       0
  1998 ;;Total ram usage:        7 bytes
  1999 ;; Hardware stack levels used: 1
  2000 ;; Hardware stack levels required when called: 5
  2001 ;; This function calls:
  2002 ;;		_Lcd_Cmd
  2003 ;; This function is called by:
  2004 ;;		_writeValor
  2005 ;;		_handleMenu
  2006 ;; This function uses a non-reentrant model
  2007 ;;
  2008                           
  2009  0327                     _Lcd_Set_Cursor:	
  2010                           ;psect for function _Lcd_Set_Cursor
  2011                           
  2012                           
  2013                           ;incstack = 0
  2014 ;; hardware stack exceeded
  2015                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  2016                           ;Lcd_Set_Cursor@a stored from wreg
  2017  0327  1283               	bcf	3,5	;RP0=0, select bank0
  2018  0328  1303               	bcf	3,6	;RP1=0, select bank0
  2019  0329  00A2               	movwf	Lcd_Set_Cursor@a
  2020  032A                     l1670:
  2021                           
  2022                           ;./lcd.h: 41: void Lcd_Set_Cursor(char a, char b);./lcd.h: 42: {;./lcd.h: 43:  char temp
      +                          ,z,y;;./lcd.h: 44:  if(a == 1)
  2023  032A  0322               	decf	Lcd_Set_Cursor@a,w
  2024  032B  1D03               	btfss	3,2
  2025  032C  2B2E               	goto	u1211
  2026  032D  2B2F               	goto	u1210
  2027  032E                     u1211:
  2028  032E  2B54               	goto	l1680
  2029  032F                     u1210:
  2030  032F                     l1672:
  2031                           
  2032                           ;./lcd.h: 45:  {;./lcd.h: 46:    temp = 0x80 + b - 1;
  2033  032F  0877               	movf	Lcd_Set_Cursor@b,w
  2034  0330  3E7F               	addlw	127
  2035  0331  00A0               	movwf	??_Lcd_Set_Cursor
  2036  0332  0820               	movf	??_Lcd_Set_Cursor,w
  2037  0333  00A5               	movwf	Lcd_Set_Cursor@temp
  2038                           
  2039                           ;./lcd.h: 47:   z = temp>>4;
  2040  0334  0825               	movf	Lcd_Set_Cursor@temp,w
  2041  0335  00A0               	movwf	??_Lcd_Set_Cursor
  2042  0336  3004               	movlw	4
  2043  0337                     u1225:
  2044  0337  1003               	clrc
  2045  0338  0CA0               	rrf	??_Lcd_Set_Cursor,f
  2046  0339  3EFF               	addlw	-1
  2047  033A  1D03               	skipz
  2048  033B  2B37               	goto	u1225
  2049  033C  0820               	movf	??_Lcd_Set_Cursor,w
  2050  033D  00A1               	movwf	??_Lcd_Set_Cursor+1
  2051  033E  0821               	movf	??_Lcd_Set_Cursor+1,w
  2052  033F  00A3               	movwf	Lcd_Set_Cursor@z
  2053  0340                     l1674:
  2054                           
  2055                           ;./lcd.h: 48:   y = temp & 0x0F;
  2056  0340  0825               	movf	Lcd_Set_Cursor@temp,w
  2057  0341  390F               	andlw	15
  2058  0342  00A0               	movwf	??_Lcd_Set_Cursor
  2059  0343  0820               	movf	??_Lcd_Set_Cursor,w
  2060  0344  00A4               	movwf	Lcd_Set_Cursor@y
  2061  0345                     l1676:
  2062                           
  2063                           ;./lcd.h: 49:   Lcd_Cmd(z);
  2064  0345  0823               	movf	Lcd_Set_Cursor@z,w
  2065  0346  120A  118A  255F  120A  118A  	fcall	_Lcd_Cmd
  2066  034B                     l1678:
  2067                           
  2068                           ;./lcd.h: 50:   Lcd_Cmd(y);
  2069  034B  1283               	bcf	3,5	;RP0=0, select bank0
  2070  034C  1303               	bcf	3,6	;RP1=0, select bank0
  2071  034D  0824               	movf	Lcd_Set_Cursor@y,w
  2072  034E  120A  118A  255F  120A  118A  	fcall	_Lcd_Cmd
  2073                           
  2074                           ;./lcd.h: 51:  }
  2075  0353  2B7E               	goto	l77
  2076  0354                     l1680:
  2077  0354  3002               	movlw	2
  2078  0355  0622               	xorwf	Lcd_Set_Cursor@a,w
  2079  0356  1D03               	btfss	3,2
  2080  0357  2B59               	goto	u1231
  2081  0358  2B5A               	goto	u1230
  2082  0359                     u1231:
  2083  0359  2B7E               	goto	l77
  2084  035A                     u1230:
  2085  035A                     l1682:
  2086                           
  2087                           ;./lcd.h: 53:  {;./lcd.h: 54:   temp = 0xC0 + b - 1;
  2088  035A  0877               	movf	Lcd_Set_Cursor@b,w
  2089  035B  3EBF               	addlw	191
  2090  035C  00A0               	movwf	??_Lcd_Set_Cursor
  2091  035D  0820               	movf	??_Lcd_Set_Cursor,w
  2092  035E  00A5               	movwf	Lcd_Set_Cursor@temp
  2093                           
  2094                           ;./lcd.h: 55:   z = temp>>4;
  2095  035F  0825               	movf	Lcd_Set_Cursor@temp,w
  2096  0360  00A0               	movwf	??_Lcd_Set_Cursor
  2097  0361  3004               	movlw	4
  2098  0362                     u1245:
  2099  0362  1003               	clrc
  2100  0363  0CA0               	rrf	??_Lcd_Set_Cursor,f
  2101  0364  3EFF               	addlw	-1
  2102  0365  1D03               	skipz
  2103  0366  2B62               	goto	u1245
  2104  0367  0820               	movf	??_Lcd_Set_Cursor,w
  2105  0368  00A1               	movwf	??_Lcd_Set_Cursor+1
  2106  0369  0821               	movf	??_Lcd_Set_Cursor+1,w
  2107  036A  00A3               	movwf	Lcd_Set_Cursor@z
  2108  036B                     l1684:
  2109                           
  2110                           ;./lcd.h: 56:   y = temp & 0x0F;
  2111  036B  0825               	movf	Lcd_Set_Cursor@temp,w
  2112  036C  390F               	andlw	15
  2113  036D  00A0               	movwf	??_Lcd_Set_Cursor
  2114  036E  0820               	movf	??_Lcd_Set_Cursor,w
  2115  036F  00A4               	movwf	Lcd_Set_Cursor@y
  2116  0370                     l1686:
  2117                           
  2118                           ;./lcd.h: 57:   Lcd_Cmd(z);
  2119  0370  0823               	movf	Lcd_Set_Cursor@z,w
  2120  0371  120A  118A  255F  120A  118A  	fcall	_Lcd_Cmd
  2121  0376                     l1688:
  2122                           
  2123                           ;./lcd.h: 58:   Lcd_Cmd(y);
  2124  0376  1283               	bcf	3,5	;RP0=0, select bank0
  2125  0377  1303               	bcf	3,6	;RP1=0, select bank0
  2126  0378  0824               	movf	Lcd_Set_Cursor@y,w
  2127  0379  120A  118A  255F  120A  118A  	fcall	_Lcd_Cmd
  2128  037E                     l77:
  2129  037E  0008               	return
  2130  037F                     __end_of_Lcd_Set_Cursor:
  2131                           
  2132                           	psect	text9
  2133  045A                     __ptext9:	
  2134 ;; *************** function _Lcd_Write_String *****************
  2135 ;; Defined at:
  2136 ;;		line 97 in file "./lcd.h"
  2137 ;; Parameters:    Size  Location     Type
  2138 ;;  a               1    wreg     PTR unsigned char 
  2139 ;;		 -> STR_2(12), STR_1(15), 
  2140 ;; Auto vars:     Size  Location     Type
  2141 ;;  a               1    2[BANK0 ] PTR unsigned char 
  2142 ;;		 -> STR_2(12), STR_1(15), 
  2143 ;;  i               2    0[BANK0 ] int 
  2144 ;; Return value:  Size  Location     Type
  2145 ;;                  1    wreg      void 
  2146 ;; Registers used:
  2147 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2148 ;; Tracked objects:
  2149 ;;		On entry : 0/0
  2150 ;;		On exit  : 0/0
  2151 ;;		Unchanged: 0/0
  2152 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2153 ;;      Params:         0       0       0       0       0
  2154 ;;      Locals:         0       3       0       0       0
  2155 ;;      Temps:          0       0       0       0       0
  2156 ;;      Totals:         0       3       0       0       0
  2157 ;;Total ram usage:        3 bytes
  2158 ;; Hardware stack levels used: 1
  2159 ;; Hardware stack levels required when called: 5
  2160 ;; This function calls:
  2161 ;;		_Lcd_Write_Char
  2162 ;; This function is called by:
  2163 ;;		_handleMenu
  2164 ;; This function uses a non-reentrant model
  2165 ;;
  2166                           
  2167  045A                     _Lcd_Write_String:	
  2168                           ;psect for function _Lcd_Write_String
  2169                           
  2170                           
  2171                           ;incstack = 0
  2172 ;; using string table level
  2173                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2174                           ;Lcd_Write_String@a stored from wreg
  2175  045A  1283               	bcf	3,5	;RP0=0, select bank0
  2176  045B  1303               	bcf	3,6	;RP1=0, select bank0
  2177  045C  00A2               	movwf	Lcd_Write_String@a
  2178  045D                     l1754:
  2179                           
  2180                           ;./lcd.h: 97: void Lcd_Write_String(char *a);./lcd.h: 98: {;./lcd.h: 99:  int i;;./lcd.h
      +                          : 100:  for(i=0;a[i]!='\0';i++)
  2181  045D  01A0               	clrf	Lcd_Write_String@i
  2182  045E  01A1               	clrf	Lcd_Write_String@i+1
  2183  045F  2C75               	goto	l1760
  2184  0460                     l1756:
  2185                           
  2186                           ;./lcd.h: 101:     Lcd_Write_Char(a[i]);
  2187  0460  0820               	movf	Lcd_Write_String@i,w
  2188  0461  0722               	addwf	Lcd_Write_String@a,w
  2189  0462  0084               	movwf	4
  2190  0463  120A  118A  2500  120A  118A  	fcall	stringdir
  2191  0468  120A  118A  23B8  120A  118A  	fcall	_Lcd_Write_Char
  2192  046D                     l1758:
  2193  046D  3001               	movlw	1
  2194  046E  1283               	bcf	3,5	;RP0=0, select bank0
  2195  046F  1303               	bcf	3,6	;RP1=0, select bank0
  2196  0470  07A0               	addwf	Lcd_Write_String@i,f
  2197  0471  1803               	skipnc
  2198  0472  0AA1               	incf	Lcd_Write_String@i+1,f
  2199  0473  3000               	movlw	0
  2200  0474  07A1               	addwf	Lcd_Write_String@i+1,f
  2201  0475                     l1760:
  2202  0475  0820               	movf	Lcd_Write_String@i,w
  2203  0476  0722               	addwf	Lcd_Write_String@a,w
  2204  0477  0084               	movwf	4
  2205  0478  120A  118A  2500  120A  118A  	fcall	stringdir
  2206  047D  3A00               	xorlw	0
  2207  047E  1D03               	skipz
  2208  047F  2C81               	goto	u1351
  2209  0480  2C82               	goto	u1350
  2210  0481                     u1351:
  2211  0481  2C60               	goto	l1756
  2212  0482                     u1350:
  2213  0482                     l89:
  2214  0482  0008               	return
  2215  0483                     __end_of_Lcd_Write_String:
  2216                           
  2217                           	psect	text10
  2218  03B8                     __ptext10:	
  2219 ;; *************** function _Lcd_Write_Char *****************
  2220 ;; Defined at:
  2221 ;;		line 81 in file "./lcd.h"
  2222 ;; Parameters:    Size  Location     Type
  2223 ;;  a               1    wreg     unsigned char 
  2224 ;; Auto vars:     Size  Location     Type
  2225 ;;  a               1    7[COMMON] unsigned char 
  2226 ;;  y               1    6[COMMON] unsigned char 
  2227 ;;  temp            1    5[COMMON] unsigned char 
  2228 ;; Return value:  Size  Location     Type
  2229 ;;                  1    wreg      void 
  2230 ;; Registers used:
  2231 ;;		wreg, status,2, status,0, pclath, cstack
  2232 ;; Tracked objects:
  2233 ;;		On entry : 0/0
  2234 ;;		On exit  : 0/0
  2235 ;;		Unchanged: 0/0
  2236 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2237 ;;      Params:         0       0       0       0       0
  2238 ;;      Locals:         3       0       0       0       0
  2239 ;;      Temps:          1       0       0       0       0
  2240 ;;      Totals:         4       0       0       0       0
  2241 ;;Total ram usage:        4 bytes
  2242 ;; Hardware stack levels used: 1
  2243 ;; Hardware stack levels required when called: 4
  2244 ;; This function calls:
  2245 ;;		_Lcd_Port
  2246 ;; This function is called by:
  2247 ;;		_Lcd_Write_String
  2248 ;;		_writeValor
  2249 ;; This function uses a non-reentrant model
  2250 ;;
  2251                           
  2252  03B8                     _Lcd_Write_Char:	
  2253                           ;psect for function _Lcd_Write_Char
  2254                           
  2255                           
  2256                           ;incstack = 0
  2257                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  2258                           ;Lcd_Write_Char@a stored from wreg
  2259  03B8  00F7               	movwf	Lcd_Write_Char@a
  2260  03B9                     l1690:
  2261                           
  2262                           ;./lcd.h: 81: void Lcd_Write_Char(char a);./lcd.h: 82: {;./lcd.h: 83:    char temp,y;;./
      +                          lcd.h: 84:    temp = a&0x0F;
  2263  03B9  0877               	movf	Lcd_Write_Char@a,w
  2264  03BA  390F               	andlw	15
  2265  03BB  00F4               	movwf	??_Lcd_Write_Char
  2266  03BC  0874               	movf	??_Lcd_Write_Char,w
  2267  03BD  00F5               	movwf	Lcd_Write_Char@temp
  2268                           
  2269                           ;./lcd.h: 85:    y = a&0xF0;
  2270  03BE  0877               	movf	Lcd_Write_Char@a,w
  2271  03BF  39F0               	andlw	240
  2272  03C0  00F4               	movwf	??_Lcd_Write_Char
  2273  03C1  0874               	movf	??_Lcd_Write_Char,w
  2274  03C2  00F6               	movwf	Lcd_Write_Char@y
  2275  03C3                     l1692:
  2276                           
  2277                           ;./lcd.h: 86:    RD2 = 1;
  2278  03C3  1283               	bcf	3,5	;RP0=0, select bank0
  2279  03C4  1303               	bcf	3,6	;RP1=0, select bank0
  2280  03C5  1508               	bsf	8,2	;volatile
  2281  03C6                     l1694:
  2282                           
  2283                           ;./lcd.h: 87:    Lcd_Port(y>>4);
  2284  03C6  0876               	movf	Lcd_Write_Char@y,w
  2285  03C7  00F4               	movwf	??_Lcd_Write_Char
  2286  03C8  3004               	movlw	4
  2287  03C9                     u1255:
  2288  03C9  1003               	clrc
  2289  03CA  0CF4               	rrf	??_Lcd_Write_Char,f
  2290  03CB  3EFF               	addlw	-1
  2291  03CC  1D03               	skipz
  2292  03CD  2BC9               	goto	u1255
  2293  03CE  0874               	movf	??_Lcd_Write_Char,w
  2294  03CF  120A  118A  24CA  120A  118A  	fcall	_Lcd_Port
  2295  03D4                     l1696:
  2296                           
  2297                           ;./lcd.h: 88:    RD3 = 1;
  2298  03D4  1283               	bcf	3,5	;RP0=0, select bank0
  2299  03D5  1303               	bcf	3,6	;RP1=0, select bank0
  2300  03D6  1588               	bsf	8,3	;volatile
  2301  03D7                     l1698:
  2302                           
  2303                           ;./lcd.h: 89:    _delay((unsigned long)((40)*(4000000/4000000.0)));
  2304  03D7  300D               	movlw	13
  2305  03D8  00F4               	movwf	??_Lcd_Write_Char
  2306  03D9                     u1617:
  2307  03D9  0BF4               	decfsz	??_Lcd_Write_Char,f
  2308  03DA  2BD9               	goto	u1617
  2309  03DB                     l1700:
  2310                           
  2311                           ;./lcd.h: 90:    RD3 = 0;
  2312  03DB  1283               	bcf	3,5	;RP0=0, select bank0
  2313  03DC  1303               	bcf	3,6	;RP1=0, select bank0
  2314  03DD  1188               	bcf	8,3	;volatile
  2315  03DE                     l1702:
  2316                           
  2317                           ;./lcd.h: 91:    Lcd_Port(temp);
  2318  03DE  0875               	movf	Lcd_Write_Char@temp,w
  2319  03DF  120A  118A  24CA  120A  118A  	fcall	_Lcd_Port
  2320  03E4                     l1704:
  2321                           
  2322                           ;./lcd.h: 92:    RD3 = 1;
  2323  03E4  1283               	bcf	3,5	;RP0=0, select bank0
  2324  03E5  1303               	bcf	3,6	;RP1=0, select bank0
  2325  03E6  1588               	bsf	8,3	;volatile
  2326  03E7                     l1706:
  2327                           
  2328                           ;./lcd.h: 93:    _delay((unsigned long)((40)*(4000000/4000000.0)));
  2329  03E7  300D               	movlw	13
  2330  03E8  00F4               	movwf	??_Lcd_Write_Char
  2331  03E9                     u1627:
  2332  03E9  0BF4               	decfsz	??_Lcd_Write_Char,f
  2333  03EA  2BE9               	goto	u1627
  2334  03EB                     l1708:
  2335                           
  2336                           ;./lcd.h: 94:    RD3 = 0;
  2337  03EB  1283               	bcf	3,5	;RP0=0, select bank0
  2338  03EC  1303               	bcf	3,6	;RP1=0, select bank0
  2339  03ED  1188               	bcf	8,3	;volatile
  2340  03EE                     l83:
  2341  03EE  0008               	return
  2342  03EF                     __end_of_Lcd_Write_Char:
  2343                           
  2344                           	psect	text11
  2345  05F0                     __ptext11:	
  2346 ;; *************** function _Lcd_Clear *****************
  2347 ;; Defined at:
  2348 ;;		line 35 in file "./lcd.h"
  2349 ;; Parameters:    Size  Location     Type
  2350 ;;		None
  2351 ;; Auto vars:     Size  Location     Type
  2352 ;;		None
  2353 ;; Return value:  Size  Location     Type
  2354 ;;                  1    wreg      void 
  2355 ;; Registers used:
  2356 ;;		wreg, status,2, status,0, pclath, cstack
  2357 ;; Tracked objects:
  2358 ;;		On entry : 0/0
  2359 ;;		On exit  : 0/0
  2360 ;;		Unchanged: 0/0
  2361 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2362 ;;      Params:         0       0       0       0       0
  2363 ;;      Locals:         0       0       0       0       0
  2364 ;;      Temps:          0       0       0       0       0
  2365 ;;      Totals:         0       0       0       0       0
  2366 ;;Total ram usage:        0 bytes
  2367 ;; Hardware stack levels used: 1
  2368 ;; Hardware stack levels required when called: 5
  2369 ;; This function calls:
  2370 ;;		_Lcd_Cmd
  2371 ;; This function is called by:
  2372 ;;		_handleMenu
  2373 ;; This function uses a non-reentrant model
  2374 ;;
  2375                           
  2376  05F0                     _Lcd_Clear:	
  2377                           ;psect for function _Lcd_Clear
  2378                           
  2379  05F0                     l1752:	
  2380                           ;incstack = 0
  2381                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  2382                           
  2383                           
  2384                           ;./lcd.h: 37:  Lcd_Cmd(0);
  2385  05F0  3000               	movlw	0
  2386  05F1  120A  118A  255F  120A  118A  	fcall	_Lcd_Cmd
  2387                           
  2388                           ;./lcd.h: 38:  Lcd_Cmd(1);
  2389  05F6  3001               	movlw	1
  2390  05F7  120A  118A  255F  120A  118A  	fcall	_Lcd_Cmd
  2391  05FC                     l71:
  2392  05FC  0008               	return
  2393  05FD                     __end_of_Lcd_Clear:
  2394                           
  2395                           	psect	text12
  2396  0619                     __ptext12:	
  2397 ;; *************** function _setupWatchdogTimer *****************
  2398 ;; Defined at:
  2399 ;;		line 302 in file "main.c"
  2400 ;; Parameters:    Size  Location     Type
  2401 ;;		None
  2402 ;; Auto vars:     Size  Location     Type
  2403 ;;		None
  2404 ;; Return value:  Size  Location     Type
  2405 ;;                  1    wreg      void 
  2406 ;; Registers used:
  2407 ;;		None
  2408 ;; Tracked objects:
  2409 ;;		On entry : 0/0
  2410 ;;		On exit  : 0/0
  2411 ;;		Unchanged: 0/0
  2412 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2413 ;;      Params:         0       0       0       0       0
  2414 ;;      Locals:         0       0       0       0       0
  2415 ;;      Temps:          0       0       0       0       0
  2416 ;;      Totals:         0       0       0       0       0
  2417 ;;Total ram usage:        0 bytes
  2418 ;; Hardware stack levels used: 1
  2419 ;; Hardware stack levels required when called: 3
  2420 ;; This function calls:
  2421 ;;		Nothing
  2422 ;; This function is called by:
  2423 ;;		_main
  2424 ;; This function uses a non-reentrant model
  2425 ;;
  2426                           
  2427  0619                     _setupWatchdogTimer:	
  2428                           ;psect for function _setupWatchdogTimer
  2429                           
  2430  0619                     l1156:	
  2431                           ;incstack = 0
  2432                           ; Regs used in _setupWatchdogTimer: []
  2433                           
  2434                           
  2435                           ;main.c: 304:     OPTION_REGbits.PSA = 1;
  2436  0619  1683               	bsf	3,5	;RP0=1, select bank1
  2437  061A  1303               	bcf	3,6	;RP1=0, select bank1
  2438  061B  1581               	bsf	1,3	;volatile
  2439                           
  2440                           ;main.c: 305:     OPTION_REGbits.PS0 = 0;
  2441  061C  1001               	bcf	1,0	;volatile
  2442                           
  2443                           ;main.c: 306:     OPTION_REGbits.PS1 = 1;
  2444  061D  1481               	bsf	1,1	;volatile
  2445                           
  2446                           ;main.c: 307:     OPTION_REGbits.PS2 = 1;
  2447  061E  1501               	bsf	1,2	;volatile
  2448  061F  0064               	clrwdt	;# 
  2449  0620                     l181:	
  2450                           ;main.c: 309:     return;
  2451                           
  2452  0620  0008               	return
  2453  0621                     __end_of_setupWatchdogTimer:
  2454                           
  2455                           	psect	text13
  2456  05A6                     __ptext13:	
  2457 ;; *************** function _setupTimer *****************
  2458 ;; Defined at:
  2459 ;;		line 93 in file "main.c"
  2460 ;; Parameters:    Size  Location     Type
  2461 ;;		None
  2462 ;; Auto vars:     Size  Location     Type
  2463 ;;		None
  2464 ;; Return value:  Size  Location     Type
  2465 ;;                  1    wreg      void 
  2466 ;; Registers used:
  2467 ;;		wreg, status,2, status,0, pclath, cstack
  2468 ;; Tracked objects:
  2469 ;;		On entry : 0/0
  2470 ;;		On exit  : 0/0
  2471 ;;		Unchanged: 0/0
  2472 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2473 ;;      Params:         0       0       0       0       0
  2474 ;;      Locals:         0       0       0       0       0
  2475 ;;      Temps:          0       0       0       0       0
  2476 ;;      Totals:         0       0       0       0       0
  2477 ;;Total ram usage:        0 bytes
  2478 ;; Hardware stack levels used: 1
  2479 ;; Hardware stack levels required when called: 6
  2480 ;; This function calls:
  2481 ;;		_setupNewVolumeFlow
  2482 ;; This function is called by:
  2483 ;;		_main
  2484 ;; This function uses a non-reentrant model
  2485 ;;
  2486                           
  2487  05A6                     _setupTimer:	
  2488                           ;psect for function _setupTimer
  2489                           
  2490  05A6                     l1884:	
  2491                           ;incstack = 0
  2492                           ; Regs used in _setupTimer: [wreg+status,2+status,0+pclath+cstack]
  2493                           
  2494                           
  2495                           ;main.c: 96:     INTCONbits.GIE = 1;
  2496  05A6  178B               	bsf	11,7	;volatile
  2497                           
  2498                           ;main.c: 97:     INTCONbits.PEIE = 1;
  2499  05A7  170B               	bsf	11,6	;volatile
  2500                           
  2501                           ;main.c: 98:     PIE1bits.TMR1IE = 1;
  2502  05A8  1683               	bsf	3,5	;RP0=1, select bank1
  2503  05A9  1303               	bcf	3,6	;RP1=0, select bank1
  2504  05AA  140C               	bsf	12,0	;volatile
  2505                           
  2506                           ;main.c: 101:     T1CONbits.TMR1CS = 0;
  2507  05AB  1283               	bcf	3,5	;RP0=0, select bank0
  2508  05AC  1303               	bcf	3,6	;RP1=0, select bank0
  2509  05AD  1090               	bcf	16,1	;volatile
  2510                           
  2511                           ;main.c: 104:     T1CONbits.T1CKPS0 = 1;
  2512  05AE  1610               	bsf	16,4	;volatile
  2513                           
  2514                           ;main.c: 105:     T1CONbits.T1CKPS1 = 1;
  2515  05AF  1690               	bsf	16,5	;volatile
  2516  05B0                     l1886:
  2517                           
  2518                           ;main.c: 113:     TMR1H = 0xF3;
  2519  05B0  30F3               	movlw	243
  2520  05B1  008F               	movwf	15	;volatile
  2521                           
  2522                           ;main.c: 114:     TMR1L = 0xCB;
  2523  05B2  30CB               	movlw	203
  2524  05B3  008E               	movwf	14	;volatile
  2525  05B4                     l1888:
  2526                           
  2527                           ;main.c: 116:     T1CONbits.TMR1ON = 0;
  2528  05B4  1010               	bcf	16,0	;volatile
  2529  05B5                     l1890:
  2530                           
  2531                           ;main.c: 120:     setupNewVolumeFlow();
  2532  05B5  120A  118A  2540  120A  118A  	fcall	_setupNewVolumeFlow
  2533  05BA                     l118:
  2534  05BA  0008               	return
  2535  05BB                     __end_of_setupTimer:
  2536                           
  2537                           	psect	text14
  2538  0540                     __ptext14:	
  2539 ;; *************** function _setupNewVolumeFlow *****************
  2540 ;; Defined at:
  2541 ;;		line 84 in file "main.c"
  2542 ;; Parameters:    Size  Location     Type
  2543 ;;		None
  2544 ;; Auto vars:     Size  Location     Type
  2545 ;;  new_ms          2   13[BANK0 ] int 
  2546 ;; Return value:  Size  Location     Type
  2547 ;;                  1    wreg      void 
  2548 ;; Registers used:
  2549 ;;		wreg, status,2, status,0, pclath, cstack
  2550 ;; Tracked objects:
  2551 ;;		On entry : 0/0
  2552 ;;		On exit  : 0/0
  2553 ;;		Unchanged: 0/0
  2554 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2555 ;;      Params:         0       0       0       0       0
  2556 ;;      Locals:         0       2       0       0       0
  2557 ;;      Temps:          0       0       0       0       0
  2558 ;;      Totals:         0       2       0       0       0
  2559 ;;Total ram usage:        2 bytes
  2560 ;; Hardware stack levels used: 1
  2561 ;; Hardware stack levels required when called: 5
  2562 ;; This function calls:
  2563 ;;		___wmul
  2564 ;;		_changeTimerMaxConter
  2565 ;; This function is called by:
  2566 ;;		_setupTimer
  2567 ;;		_handleMenu
  2568 ;; This function uses a non-reentrant model
  2569 ;;
  2570                           
  2571  0540                     _setupNewVolumeFlow:	
  2572                           ;psect for function _setupNewVolumeFlow
  2573                           
  2574  0540                     l1762:	
  2575                           ;incstack = 0
  2576                           ; Regs used in _setupNewVolumeFlow: [wreg+status,2+status,0+pclath+cstack]
  2577                           
  2578                           
  2579                           ;main.c: 87:     int new_ms = water_volume*MLxMS;
  2580  0540  1283               	bcf	3,5	;RP0=0, select bank0
  2581  0541  1303               	bcf	3,6	;RP1=0, select bank0
  2582  0542  083E               	movf	_water_volume+1,w
  2583  0543  00F4               	movwf	___wmul@multiplier+1
  2584  0544  083D               	movf	_water_volume,w
  2585  0545  00F3               	movwf	___wmul@multiplier
  2586  0546  3019               	movlw	25
  2587  0547  00F5               	movwf	___wmul@multiplicand
  2588  0548  3000               	movlw	0
  2589  0549  00F6               	movwf	___wmul@multiplicand+1
  2590  054A  120A  118A  2483  120A  118A  	fcall	___wmul
  2591  054F  0874               	movf	?___wmul+1,w
  2592  0550  1283               	bcf	3,5	;RP0=0, select bank0
  2593  0551  1303               	bcf	3,6	;RP1=0, select bank0
  2594  0552  00AE               	movwf	setupNewVolumeFlow@new_ms+1
  2595  0553  0873               	movf	?___wmul,w
  2596  0554  00AD               	movwf	setupNewVolumeFlow@new_ms
  2597                           
  2598                           ;main.c: 89:     changeTimerMaxConter(new_ms);
  2599  0555  082E               	movf	setupNewVolumeFlow@new_ms+1,w
  2600  0556  00AC               	movwf	changeTimerMaxConter@mili_s+1
  2601  0557  082D               	movf	setupNewVolumeFlow@new_ms,w
  2602  0558  00AB               	movwf	changeTimerMaxConter@mili_s
  2603  0559  120A  118A  2590  120A  118A  	fcall	_changeTimerMaxConter
  2604  055E                     l115:
  2605  055E  0008               	return
  2606  055F                     __end_of_setupNewVolumeFlow:
  2607                           
  2608                           	psect	text15
  2609  0590                     __ptext15:	
  2610 ;; *************** function _changeTimerMaxConter *****************
  2611 ;; Defined at:
  2612 ;;		line 75 in file "main.c"
  2613 ;; Parameters:    Size  Location     Type
  2614 ;;  mili_s          2   11[BANK0 ] int 
  2615 ;; Auto vars:     Size  Location     Type
  2616 ;;		None
  2617 ;; Return value:  Size  Location     Type
  2618 ;;                  1    wreg      void 
  2619 ;; Registers used:
  2620 ;;		wreg, status,2, status,0, pclath, cstack
  2621 ;; Tracked objects:
  2622 ;;		On entry : 0/0
  2623 ;;		On exit  : 0/0
  2624 ;;		Unchanged: 0/0
  2625 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2626 ;;      Params:         0       2       0       0       0
  2627 ;;      Locals:         0       0       0       0       0
  2628 ;;      Temps:          0       0       0       0       0
  2629 ;;      Totals:         0       2       0       0       0
  2630 ;;Total ram usage:        2 bytes
  2631 ;; Hardware stack levels used: 1
  2632 ;; Hardware stack levels required when called: 4
  2633 ;; This function calls:
  2634 ;;		___awdiv
  2635 ;; This function is called by:
  2636 ;;		_setupNewVolumeFlow
  2637 ;; This function uses a non-reentrant model
  2638 ;;
  2639                           
  2640  0590                     _changeTimerMaxConter:	
  2641                           ;psect for function _changeTimerMaxConter
  2642                           
  2643  0590                     l1710:	
  2644                           ;incstack = 0
  2645                           ; Regs used in _changeTimerMaxConter: [wreg+status,2+status,0+pclath+cstack]
  2646                           
  2647                           
  2648                           ;main.c: 77:     timer_counter_max = (mili_s/MLxMS);
  2649  0590  3019               	movlw	25
  2650  0591  1283               	bcf	3,5	;RP0=0, select bank0
  2651  0592  1303               	bcf	3,6	;RP1=0, select bank0
  2652  0593  00A2               	movwf	___awdiv@divisor
  2653  0594  3000               	movlw	0
  2654  0595  00A3               	movwf	___awdiv@divisor+1
  2655  0596  082C               	movf	changeTimerMaxConter@mili_s+1,w
  2656  0597  00A5               	movwf	___awdiv@dividend+1
  2657  0598  082B               	movf	changeTimerMaxConter@mili_s,w
  2658  0599  00A4               	movwf	___awdiv@dividend
  2659  059A  120A  118A  2206  120A  118A  	fcall	___awdiv
  2660  059F  1283               	bcf	3,5	;RP0=0, select bank0
  2661  05A0  1303               	bcf	3,6	;RP1=0, select bank0
  2662  05A1  0823               	movf	?___awdiv+1,w
  2663  05A2  00C2               	movwf	_timer_counter_max+1
  2664  05A3  0822               	movf	?___awdiv,w
  2665  05A4  00C1               	movwf	_timer_counter_max
  2666  05A5                     l112:
  2667  05A5  0008               	return
  2668  05A6                     __end_of_changeTimerMaxConter:
  2669                           
  2670                           	psect	text16
  2671  0206                     __ptext16:	
  2672 ;; *************** function ___awdiv *****************
  2673 ;; Defined at:
  2674 ;;		line 5 in file "D:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\awdiv.c"
  2675 ;; Parameters:    Size  Location     Type
  2676 ;;  divisor         2    2[BANK0 ] int 
  2677 ;;  dividend        2    4[BANK0 ] int 
  2678 ;; Auto vars:     Size  Location     Type
  2679 ;;  quotient        2    9[BANK0 ] int 
  2680 ;;  sign            1    8[BANK0 ] unsigned char 
  2681 ;;  counter         1    7[BANK0 ] unsigned char 
  2682 ;; Return value:  Size  Location     Type
  2683 ;;                  2    2[BANK0 ] int 
  2684 ;; Registers used:
  2685 ;;		wreg, status,2, status,0
  2686 ;; Tracked objects:
  2687 ;;		On entry : 0/0
  2688 ;;		On exit  : 0/0
  2689 ;;		Unchanged: 0/0
  2690 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2691 ;;      Params:         0       4       0       0       0
  2692 ;;      Locals:         0       4       0       0       0
  2693 ;;      Temps:          0       1       0       0       0
  2694 ;;      Totals:         0       9       0       0       0
  2695 ;;Total ram usage:        9 bytes
  2696 ;; Hardware stack levels used: 1
  2697 ;; Hardware stack levels required when called: 3
  2698 ;; This function calls:
  2699 ;;		Nothing
  2700 ;; This function is called by:
  2701 ;;		_changeTimerMaxConter
  2702 ;;		_writeValor
  2703 ;;		_getADConverterValue
  2704 ;; This function uses a non-reentrant model
  2705 ;;
  2706                           
  2707  0206                     ___awdiv:	
  2708                           ;psect for function ___awdiv
  2709                           
  2710  0206                     l1626:	
  2711                           ;incstack = 0
  2712                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2713                           
  2714  0206  1283               	bcf	3,5	;RP0=0, select bank0
  2715  0207  1303               	bcf	3,6	;RP1=0, select bank0
  2716  0208  01A8               	clrf	___awdiv@sign
  2717  0209                     l1628:
  2718  0209  1FA3               	btfss	___awdiv@divisor+1,7
  2719  020A  2A0C               	goto	u1111
  2720  020B  2A0D               	goto	u1110
  2721  020C                     u1111:
  2722  020C  2A14               	goto	l1634
  2723  020D                     u1110:
  2724  020D                     l1630:
  2725  020D  09A2               	comf	___awdiv@divisor,f
  2726  020E  09A3               	comf	___awdiv@divisor+1,f
  2727  020F  0AA2               	incf	___awdiv@divisor,f
  2728  0210  1903               	skipnz
  2729  0211  0AA3               	incf	___awdiv@divisor+1,f
  2730  0212                     l1632:
  2731  0212  01A8               	clrf	___awdiv@sign
  2732  0213  0AA8               	incf	___awdiv@sign,f
  2733  0214                     l1634:
  2734  0214  1FA5               	btfss	___awdiv@dividend+1,7
  2735  0215  2A17               	goto	u1121
  2736  0216  2A18               	goto	u1120
  2737  0217                     u1121:
  2738  0217  2A21               	goto	l1640
  2739  0218                     u1120:
  2740  0218                     l1636:
  2741  0218  09A4               	comf	___awdiv@dividend,f
  2742  0219  09A5               	comf	___awdiv@dividend+1,f
  2743  021A  0AA4               	incf	___awdiv@dividend,f
  2744  021B  1903               	skipnz
  2745  021C  0AA5               	incf	___awdiv@dividend+1,f
  2746  021D                     l1638:
  2747  021D  3001               	movlw	1
  2748  021E  00A6               	movwf	??___awdiv
  2749  021F  0826               	movf	??___awdiv,w
  2750  0220  06A8               	xorwf	___awdiv@sign,f
  2751  0221                     l1640:
  2752  0221  01A9               	clrf	___awdiv@quotient
  2753  0222  01AA               	clrf	___awdiv@quotient+1
  2754  0223                     l1642:
  2755  0223  0822               	movf	___awdiv@divisor,w
  2756  0224  0423               	iorwf	___awdiv@divisor+1,w
  2757  0225  1903               	btfsc	3,2
  2758  0226  2A28               	goto	u1131
  2759  0227  2A29               	goto	u1130
  2760  0228                     u1131:
  2761  0228  2A60               	goto	l1662
  2762  0229                     u1130:
  2763  0229                     l1644:
  2764  0229  01A7               	clrf	___awdiv@counter
  2765  022A  0AA7               	incf	___awdiv@counter,f
  2766  022B  2A37               	goto	l1650
  2767  022C                     l1646:
  2768  022C  3001               	movlw	1
  2769  022D                     u1145:
  2770  022D  1003               	clrc
  2771  022E  0DA2               	rlf	___awdiv@divisor,f
  2772  022F  0DA3               	rlf	___awdiv@divisor+1,f
  2773  0230  3EFF               	addlw	-1
  2774  0231  1D03               	skipz
  2775  0232  2A2D               	goto	u1145
  2776  0233                     l1648:
  2777  0233  3001               	movlw	1
  2778  0234  00A6               	movwf	??___awdiv
  2779  0235  0826               	movf	??___awdiv,w
  2780  0236  07A7               	addwf	___awdiv@counter,f
  2781  0237                     l1650:
  2782  0237  1FA3               	btfss	___awdiv@divisor+1,7
  2783  0238  2A3A               	goto	u1151
  2784  0239  2A3B               	goto	u1150
  2785  023A                     u1151:
  2786  023A  2A2C               	goto	l1646
  2787  023B                     u1150:
  2788  023B                     l1652:
  2789  023B  3001               	movlw	1
  2790  023C                     u1165:
  2791  023C  1003               	clrc
  2792  023D  0DA9               	rlf	___awdiv@quotient,f
  2793  023E  0DAA               	rlf	___awdiv@quotient+1,f
  2794  023F  3EFF               	addlw	-1
  2795  0240  1D03               	skipz
  2796  0241  2A3C               	goto	u1165
  2797  0242  0823               	movf	___awdiv@divisor+1,w
  2798  0243  0225               	subwf	___awdiv@dividend+1,w
  2799  0244  1D03               	skipz
  2800  0245  2A48               	goto	u1175
  2801  0246  0822               	movf	___awdiv@divisor,w
  2802  0247  0224               	subwf	___awdiv@dividend,w
  2803  0248                     u1175:
  2804  0248  1C03               	skipc
  2805  0249  2A4B               	goto	u1171
  2806  024A  2A4C               	goto	u1170
  2807  024B                     u1171:
  2808  024B  2A53               	goto	l1658
  2809  024C                     u1170:
  2810  024C                     l1654:
  2811  024C  0822               	movf	___awdiv@divisor,w
  2812  024D  02A4               	subwf	___awdiv@dividend,f
  2813  024E  0823               	movf	___awdiv@divisor+1,w
  2814  024F  1C03               	skipc
  2815  0250  03A5               	decf	___awdiv@dividend+1,f
  2816  0251  02A5               	subwf	___awdiv@dividend+1,f
  2817  0252                     l1656:
  2818  0252  1429               	bsf	___awdiv@quotient,0
  2819  0253                     l1658:
  2820  0253  3001               	movlw	1
  2821  0254                     u1185:
  2822  0254  1003               	clrc
  2823  0255  0CA3               	rrf	___awdiv@divisor+1,f
  2824  0256  0CA2               	rrf	___awdiv@divisor,f
  2825  0257  3EFF               	addlw	-1
  2826  0258  1D03               	skipz
  2827  0259  2A54               	goto	u1185
  2828  025A                     l1660:
  2829  025A  3001               	movlw	1
  2830  025B  02A7               	subwf	___awdiv@counter,f
  2831  025C  1D03               	btfss	3,2
  2832  025D  2A5F               	goto	u1191
  2833  025E  2A60               	goto	u1190
  2834  025F                     u1191:
  2835  025F  2A3B               	goto	l1652
  2836  0260                     u1190:
  2837  0260                     l1662:
  2838  0260  0828               	movf	___awdiv@sign,w
  2839  0261  1903               	btfsc	3,2
  2840  0262  2A64               	goto	u1201
  2841  0263  2A65               	goto	u1200
  2842  0264                     u1201:
  2843  0264  2A6A               	goto	l1666
  2844  0265                     u1200:
  2845  0265                     l1664:
  2846  0265  09A9               	comf	___awdiv@quotient,f
  2847  0266  09AA               	comf	___awdiv@quotient+1,f
  2848  0267  0AA9               	incf	___awdiv@quotient,f
  2849  0268  1903               	skipnz
  2850  0269  0AAA               	incf	___awdiv@quotient+1,f
  2851  026A                     l1666:
  2852  026A  082A               	movf	___awdiv@quotient+1,w
  2853  026B  00A3               	movwf	?___awdiv+1
  2854  026C  0829               	movf	___awdiv@quotient,w
  2855  026D  00A2               	movwf	?___awdiv
  2856  026E                     l431:
  2857  026E  0008               	return
  2858  026F                     __end_of___awdiv:
  2859                           
  2860                           	psect	text17
  2861  0483                     __ptext17:	
  2862 ;; *************** function ___wmul *****************
  2863 ;; Defined at:
  2864 ;;		line 15 in file "D:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\Umul16.c"
  2865 ;; Parameters:    Size  Location     Type
  2866 ;;  multiplier      2    3[COMMON] unsigned int 
  2867 ;;  multiplicand    2    5[COMMON] unsigned int 
  2868 ;; Auto vars:     Size  Location     Type
  2869 ;;  product         2    7[COMMON] unsigned int 
  2870 ;; Return value:  Size  Location     Type
  2871 ;;                  2    3[COMMON] unsigned int 
  2872 ;; Registers used:
  2873 ;;		wreg, status,2, status,0
  2874 ;; Tracked objects:
  2875 ;;		On entry : 0/0
  2876 ;;		On exit  : 0/0
  2877 ;;		Unchanged: 0/0
  2878 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2879 ;;      Params:         4       0       0       0       0
  2880 ;;      Locals:         2       0       0       0       0
  2881 ;;      Temps:          0       0       0       0       0
  2882 ;;      Totals:         6       0       0       0       0
  2883 ;;Total ram usage:        6 bytes
  2884 ;; Hardware stack levels used: 1
  2885 ;; Hardware stack levels required when called: 3
  2886 ;; This function calls:
  2887 ;;		Nothing
  2888 ;; This function is called by:
  2889 ;;		_setupNewVolumeFlow
  2890 ;;		_getADConverterValue
  2891 ;; This function uses a non-reentrant model
  2892 ;;
  2893                           
  2894  0483                     ___wmul:	
  2895                           ;psect for function ___wmul
  2896                           
  2897  0483                     l1312:	
  2898                           ;incstack = 0
  2899                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2900                           
  2901  0483  01F7               	clrf	___wmul@product
  2902  0484  01F8               	clrf	___wmul@product+1
  2903  0485                     l1314:
  2904  0485  1C73               	btfss	___wmul@multiplier,0
  2905  0486  2C88               	goto	u731
  2906  0487  2C89               	goto	u730
  2907  0488                     u731:
  2908  0488  2C8F               	goto	l278
  2909  0489                     u730:
  2910  0489                     l1316:
  2911  0489  0875               	movf	___wmul@multiplicand,w
  2912  048A  07F7               	addwf	___wmul@product,f
  2913  048B  1803               	skipnc
  2914  048C  0AF8               	incf	___wmul@product+1,f
  2915  048D  0876               	movf	___wmul@multiplicand+1,w
  2916  048E  07F8               	addwf	___wmul@product+1,f
  2917  048F                     l278:
  2918  048F  3001               	movlw	1
  2919  0490                     u745:
  2920  0490  1003               	clrc
  2921  0491  0DF5               	rlf	___wmul@multiplicand,f
  2922  0492  0DF6               	rlf	___wmul@multiplicand+1,f
  2923  0493  3EFF               	addlw	-1
  2924  0494  1D03               	skipz
  2925  0495  2C90               	goto	u745
  2926  0496                     l1318:
  2927  0496  3001               	movlw	1
  2928  0497                     u755:
  2929  0497  1003               	clrc
  2930  0498  0CF4               	rrf	___wmul@multiplier+1,f
  2931  0499  0CF3               	rrf	___wmul@multiplier,f
  2932  049A  3EFF               	addlw	-1
  2933  049B  1D03               	skipz
  2934  049C  2C97               	goto	u755
  2935  049D                     l1320:
  2936  049D  0873               	movf	___wmul@multiplier,w
  2937  049E  0474               	iorwf	___wmul@multiplier+1,w
  2938  049F  1D03               	btfss	3,2
  2939  04A0  2CA2               	goto	u761
  2940  04A1  2CA3               	goto	u760
  2941  04A2                     u761:
  2942  04A2  2C85               	goto	l1314
  2943  04A3                     u760:
  2944  04A3                     l1322:
  2945  04A3  0878               	movf	___wmul@product+1,w
  2946  04A4  00F4               	movwf	?___wmul+1
  2947  04A5  0877               	movf	___wmul@product,w
  2948  04A6  00F3               	movwf	?___wmul
  2949  04A7                     l280:
  2950  04A7  0008               	return
  2951  04A8                     __end_of___wmul:
  2952                           
  2953                           	psect	text18
  2954  0621                     __ptext18:	
  2955 ;; *************** function _setupExternalInterruption *****************
  2956 ;; Defined at:
  2957 ;;		line 187 in file "main.c"
  2958 ;; Parameters:    Size  Location     Type
  2959 ;;		None
  2960 ;; Auto vars:     Size  Location     Type
  2961 ;;		None
  2962 ;; Return value:  Size  Location     Type
  2963 ;;                  1    wreg      void 
  2964 ;; Registers used:
  2965 ;;		None
  2966 ;; Tracked objects:
  2967 ;;		On entry : 0/0
  2968 ;;		On exit  : 0/0
  2969 ;;		Unchanged: 0/0
  2970 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2971 ;;      Params:         0       0       0       0       0
  2972 ;;      Locals:         0       0       0       0       0
  2973 ;;      Temps:          0       0       0       0       0
  2974 ;;      Totals:         0       0       0       0       0
  2975 ;;Total ram usage:        0 bytes
  2976 ;; Hardware stack levels used: 1
  2977 ;; Hardware stack levels required when called: 3
  2978 ;; This function calls:
  2979 ;;		Nothing
  2980 ;; This function is called by:
  2981 ;;		_main
  2982 ;; This function uses a non-reentrant model
  2983 ;;
  2984                           
  2985  0621                     _setupExternalInterruption:	
  2986                           ;psect for function _setupExternalInterruption
  2987                           
  2988  0621                     l1138:	
  2989                           ;incstack = 0
  2990                           ; Regs used in _setupExternalInterruption: []
  2991                           
  2992                           
  2993                           ;main.c: 189:     OPTION_REGbits.INTEDG = 0;
  2994  0621  1683               	bsf	3,5	;RP0=1, select bank1
  2995  0622  1303               	bcf	3,6	;RP1=0, select bank1
  2996  0623  1301               	bcf	1,6	;volatile
  2997                           
  2998                           ;main.c: 190:  INTCONbits.GIE = 1;
  2999  0624  178B               	bsf	11,7	;volatile
  3000                           
  3001                           ;main.c: 191:  INTCONbits.INTE = 1;
  3002  0625  160B               	bsf	11,4	;volatile
  3003                           
  3004                           ;main.c: 192:     INTCONbits.INTF = 0;
  3005  0626  108B               	bcf	11,1	;volatile
  3006  0627                     l141:	
  3007                           ;main.c: 193:     return;
  3008                           
  3009  0627  0008               	return
  3010  0628                     __end_of_setupExternalInterruption:
  3011                           
  3012                           	psect	text19
  3013  0579                     __ptext19:	
  3014 ;; *************** function _setupADC *****************
  3015 ;; Defined at:
  3016 ;;		line 313 in file "main.c"
  3017 ;; Parameters:    Size  Location     Type
  3018 ;;		None
  3019 ;; Auto vars:     Size  Location     Type
  3020 ;;		None
  3021 ;; Return value:  Size  Location     Type
  3022 ;;                  1    wreg      void 
  3023 ;; Registers used:
  3024 ;;		status,2
  3025 ;; Tracked objects:
  3026 ;;		On entry : 0/0
  3027 ;;		On exit  : 0/0
  3028 ;;		Unchanged: 0/0
  3029 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3030 ;;      Params:         0       0       0       0       0
  3031 ;;      Locals:         0       0       0       0       0
  3032 ;;      Temps:          0       0       0       0       0
  3033 ;;      Totals:         0       0       0       0       0
  3034 ;;Total ram usage:        0 bytes
  3035 ;; Hardware stack levels used: 1
  3036 ;; Hardware stack levels required when called: 3
  3037 ;; This function calls:
  3038 ;;		Nothing
  3039 ;; This function is called by:
  3040 ;;		_main
  3041 ;; This function uses a non-reentrant model
  3042 ;;
  3043                           
  3044  0579                     _setupADC:	
  3045                           ;psect for function _setupADC
  3046                           
  3047  0579                     l1158:	
  3048                           ;incstack = 0
  3049                           ; Regs used in _setupADC: [status,2]
  3050                           
  3051                           
  3052                           ;main.c: 318:     ADCON1bits.PCFG0 = 1;
  3053  0579  1683               	bsf	3,5	;RP0=1, select bank1
  3054  057A  1303               	bcf	3,6	;RP1=0, select bank1
  3055  057B  141F               	bsf	31,0	;volatile
  3056                           
  3057                           ;main.c: 319:     ADCON1bits.PCFG1 = 1;
  3058  057C  149F               	bsf	31,1	;volatile
  3059                           
  3060                           ;main.c: 320:     ADCON1bits.PCFG2 = 1;
  3061  057D  151F               	bsf	31,2	;volatile
  3062                           
  3063                           ;main.c: 321:     ADCON1bits.PCFG3 = 1;
  3064  057E  159F               	bsf	31,3	;volatile
  3065                           
  3066                           ;main.c: 324:     ADCON1bits.ADCS2 = 1;
  3067  057F  171F               	bsf	31,6	;volatile
  3068                           
  3069                           ;main.c: 325:     ADCON0bits.ADCS1 = 1;
  3070  0580  1283               	bcf	3,5	;RP0=0, select bank0
  3071  0581  1303               	bcf	3,6	;RP1=0, select bank0
  3072  0582  179F               	bsf	31,7	;volatile
  3073                           
  3074                           ;main.c: 326:     ADCON0bits.ADCS0 = 0;
  3075  0583  131F               	bcf	31,6	;volatile
  3076                           
  3077                           ;main.c: 329:     ADCON1bits.ADFM = 0;
  3078  0584  1683               	bsf	3,5	;RP0=1, select bank1
  3079  0585  1303               	bcf	3,6	;RP1=0, select bank1
  3080  0586  139F               	bcf	31,7	;volatile
  3081  0587                     l1160:
  3082                           
  3083                           ;main.c: 332:     ADRESL = 0;
  3084  0587  019E               	clrf	30	;volatile
  3085                           
  3086                           ;main.c: 333:     ADRESH = 0;
  3087  0588  1283               	bcf	3,5	;RP0=0, select bank0
  3088  0589  1303               	bcf	3,6	;RP1=0, select bank0
  3089  058A  019E               	clrf	30	;volatile
  3090  058B                     l1162:
  3091                           
  3092                           ;main.c: 337:     ADCON0bits.ADON = 1;
  3093  058B  141F               	bsf	31,0	;volatile
  3094  058C                     l1164:
  3095                           
  3096                           ;main.c: 340:     ADCON0bits.CHS0 = 0;
  3097  058C  119F               	bcf	31,3	;volatile
  3098  058D                     l1166:
  3099                           
  3100                           ;main.c: 341:     ADCON0bits.CHS1 = 0;
  3101  058D  121F               	bcf	31,4	;volatile
  3102  058E                     l1168:
  3103                           
  3104                           ;main.c: 342:     ADCON0bits.CHS2 = 0;
  3105  058E  129F               	bcf	31,5	;volatile
  3106  058F                     l184:
  3107  058F  0008               	return
  3108  0590                     __end_of_setupADC:
  3109                           
  3110                           	psect	text20
  3111  026F                     __ptext20:	
  3112 ;; *************** function _Lcd_Init *****************
  3113 ;; Defined at:
  3114 ;;		line 62 in file "./lcd.h"
  3115 ;; Parameters:    Size  Location     Type
  3116 ;;		None
  3117 ;; Auto vars:     Size  Location     Type
  3118 ;;		None
  3119 ;; Return value:  Size  Location     Type
  3120 ;;                  1    wreg      void 
  3121 ;; Registers used:
  3122 ;;		wreg, status,2, status,0, pclath, cstack
  3123 ;; Tracked objects:
  3124 ;;		On entry : 0/0
  3125 ;;		On exit  : 0/0
  3126 ;;		Unchanged: 0/0
  3127 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3128 ;;      Params:         0       0       0       0       0
  3129 ;;      Locals:         0       0       0       0       0
  3130 ;;      Temps:          2       0       0       0       0
  3131 ;;      Totals:         2       0       0       0       0
  3132 ;;Total ram usage:        2 bytes
  3133 ;; Hardware stack levels used: 1
  3134 ;; Hardware stack levels required when called: 5
  3135 ;; This function calls:
  3136 ;;		_Lcd_Cmd
  3137 ;;		_Lcd_Port
  3138 ;; This function is called by:
  3139 ;;		_main
  3140 ;; This function uses a non-reentrant model
  3141 ;;
  3142                           
  3143  026F                     _Lcd_Init:	
  3144                           ;psect for function _Lcd_Init
  3145                           
  3146  026F                     l1874:	
  3147                           ;incstack = 0
  3148                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  3149                           
  3150                           
  3151                           ;./lcd.h: 64:   Lcd_Port(0x00);
  3152  026F  3000               	movlw	0
  3153  0270  120A  118A  24CA  120A  118A  	fcall	_Lcd_Port
  3154  0275                     l1876:
  3155                           
  3156                           ;./lcd.h: 65:    _delay((unsigned long)((20)*(4000000/4000.0)));
  3157  0275  301A               	movlw	26
  3158  0276  00F8               	movwf	??_Lcd_Init+1
  3159  0277  30F8               	movlw	248
  3160  0278  00F7               	movwf	??_Lcd_Init
  3161  0279                     u1637:
  3162  0279  0BF7               	decfsz	??_Lcd_Init,f
  3163  027A  2A79               	goto	u1637
  3164  027B  0BF8               	decfsz	??_Lcd_Init+1,f
  3165  027C  2A79               	goto	u1637
  3166  027D  0000               	nop
  3167  027E                     l1878:
  3168                           
  3169                           ;./lcd.h: 66:   Lcd_Cmd(0x03);
  3170  027E  3003               	movlw	3
  3171  027F  120A  118A  255F  120A  118A  	fcall	_Lcd_Cmd
  3172                           
  3173                           ;./lcd.h: 67:  _delay((unsigned long)((5)*(4000000/4000.0)));
  3174  0284  3007               	movlw	7
  3175  0285  00F8               	movwf	??_Lcd_Init+1
  3176  0286  307D               	movlw	125
  3177  0287  00F7               	movwf	??_Lcd_Init
  3178  0288                     u1647:
  3179  0288  0BF7               	decfsz	??_Lcd_Init,f
  3180  0289  2A88               	goto	u1647
  3181  028A  0BF8               	decfsz	??_Lcd_Init+1,f
  3182  028B  2A88               	goto	u1647
  3183  028C                     l1880:
  3184                           
  3185                           ;./lcd.h: 68:   Lcd_Cmd(0x03);
  3186  028C  3003               	movlw	3
  3187  028D  120A  118A  255F  120A  118A  	fcall	_Lcd_Cmd
  3188  0292                     l1882:
  3189                           
  3190                           ;./lcd.h: 69:  _delay((unsigned long)((11)*(4000000/4000.0)));
  3191  0292  300F               	movlw	15
  3192  0293  00F8               	movwf	??_Lcd_Init+1
  3193  0294  3047               	movlw	71
  3194  0295  00F7               	movwf	??_Lcd_Init
  3195  0296                     u1657:
  3196  0296  0BF7               	decfsz	??_Lcd_Init,f
  3197  0297  2A96               	goto	u1657
  3198  0298  0BF8               	decfsz	??_Lcd_Init+1,f
  3199  0299  2A96               	goto	u1657
  3200  029A  2A9B               	nop2
  3201                           
  3202                           ;./lcd.h: 70:   Lcd_Cmd(0x03);
  3203  029B  3003               	movlw	3
  3204  029C  120A  118A  255F  120A  118A  	fcall	_Lcd_Cmd
  3205                           
  3206                           ;./lcd.h: 72:   Lcd_Cmd(0x02);
  3207  02A1  3002               	movlw	2
  3208  02A2  120A  118A  255F  120A  118A  	fcall	_Lcd_Cmd
  3209                           
  3210                           ;./lcd.h: 73:   Lcd_Cmd(0x02);
  3211  02A7  3002               	movlw	2
  3212  02A8  120A  118A  255F  120A  118A  	fcall	_Lcd_Cmd
  3213                           
  3214                           ;./lcd.h: 74:   Lcd_Cmd(0x08);
  3215  02AD  3008               	movlw	8
  3216  02AE  120A  118A  255F  120A  118A  	fcall	_Lcd_Cmd
  3217                           
  3218                           ;./lcd.h: 75:   Lcd_Cmd(0x00);
  3219  02B3  3000               	movlw	0
  3220  02B4  120A  118A  255F  120A  118A  	fcall	_Lcd_Cmd
  3221                           
  3222                           ;./lcd.h: 76:   Lcd_Cmd(0x0C);
  3223  02B9  300C               	movlw	12
  3224  02BA  120A  118A  255F  120A  118A  	fcall	_Lcd_Cmd
  3225                           
  3226                           ;./lcd.h: 77:   Lcd_Cmd(0x00);
  3227  02BF  3000               	movlw	0
  3228  02C0  120A  118A  255F  120A  118A  	fcall	_Lcd_Cmd
  3229                           
  3230                           ;./lcd.h: 78:   Lcd_Cmd(0x06);
  3231  02C5  3006               	movlw	6
  3232  02C6  120A  118A  255F  120A  118A  	fcall	_Lcd_Cmd
  3233  02CB                     l80:
  3234  02CB  0008               	return
  3235  02CC                     __end_of_Lcd_Init:
  3236                           
  3237                           	psect	text21
  3238  055F                     __ptext21:	
  3239 ;; *************** function _Lcd_Cmd *****************
  3240 ;; Defined at:
  3241 ;;		line 26 in file "./lcd.h"
  3242 ;; Parameters:    Size  Location     Type
  3243 ;;  a               1    wreg     unsigned char 
  3244 ;; Auto vars:     Size  Location     Type
  3245 ;;  a               1    6[COMMON] unsigned char 
  3246 ;; Return value:  Size  Location     Type
  3247 ;;                  1    wreg      void 
  3248 ;; Registers used:
  3249 ;;		wreg, status,2, status,0, pclath, cstack
  3250 ;; Tracked objects:
  3251 ;;		On entry : 0/0
  3252 ;;		On exit  : 0/0
  3253 ;;		Unchanged: 0/0
  3254 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3255 ;;      Params:         0       0       0       0       0
  3256 ;;      Locals:         1       0       0       0       0
  3257 ;;      Temps:          2       0       0       0       0
  3258 ;;      Totals:         3       0       0       0       0
  3259 ;;Total ram usage:        3 bytes
  3260 ;; Hardware stack levels used: 1
  3261 ;; Hardware stack levels required when called: 4
  3262 ;; This function calls:
  3263 ;;		_Lcd_Port
  3264 ;; This function is called by:
  3265 ;;		_Lcd_Clear
  3266 ;;		_Lcd_Set_Cursor
  3267 ;;		_Lcd_Init
  3268 ;;		_Lcd_Shift_Right
  3269 ;;		_Lcd_Shift_Left
  3270 ;; This function uses a non-reentrant model
  3271 ;;
  3272                           
  3273  055F                     _Lcd_Cmd:	
  3274                           ;psect for function _Lcd_Cmd
  3275                           
  3276                           
  3277                           ;incstack = 0
  3278 ;; hardware stack exceeded
  3279                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  3280                           ;Lcd_Cmd@a stored from wreg
  3281  055F  00F6               	movwf	Lcd_Cmd@a
  3282  0560                     l1616:
  3283                           
  3284                           ;./lcd.h: 26: void Lcd_Cmd(char a);./lcd.h: 27: {;./lcd.h: 28:  RD2 = 0;
  3285  0560  1283               	bcf	3,5	;RP0=0, select bank0
  3286  0561  1303               	bcf	3,6	;RP1=0, select bank0
  3287  0562  1108               	bcf	8,2	;volatile
  3288  0563                     l1618:
  3289                           
  3290                           ;./lcd.h: 29:  Lcd_Port(a);
  3291  0563  0876               	movf	Lcd_Cmd@a,w
  3292  0564  120A  118A  24CA  120A  118A  	fcall	_Lcd_Port
  3293  0569                     l1620:
  3294                           
  3295                           ;./lcd.h: 30:  RD3 = 1;
  3296  0569  1283               	bcf	3,5	;RP0=0, select bank0
  3297  056A  1303               	bcf	3,6	;RP1=0, select bank0
  3298  056B  1588               	bsf	8,3	;volatile
  3299  056C                     l1622:
  3300                           
  3301                           ;./lcd.h: 31:         _delay((unsigned long)((4)*(4000000/4000.0)));
  3302  056C  3006               	movlw	6
  3303  056D  00F5               	movwf	??_Lcd_Cmd+1
  3304  056E  3030               	movlw	48
  3305  056F  00F4               	movwf	??_Lcd_Cmd
  3306  0570                     u1667:
  3307  0570  0BF4               	decfsz	??_Lcd_Cmd,f
  3308  0571  2D70               	goto	u1667
  3309  0572  0BF5               	decfsz	??_Lcd_Cmd+1,f
  3310  0573  2D70               	goto	u1667
  3311  0574  0000               	nop
  3312  0575                     l1624:
  3313                           
  3314                           ;./lcd.h: 32:         RD3 = 0;
  3315  0575  1283               	bcf	3,5	;RP0=0, select bank0
  3316  0576  1303               	bcf	3,6	;RP1=0, select bank0
  3317  0577  1188               	bcf	8,3	;volatile
  3318  0578                     l68:
  3319  0578  0008               	return
  3320  0579                     __end_of_Lcd_Cmd:
  3321                           
  3322                           	psect	text22
  3323  04CA                     __ptext22:	
  3324 ;; *************** function _Lcd_Port *****************
  3325 ;; Defined at:
  3326 ;;		line 4 in file "./lcd.h"
  3327 ;; Parameters:    Size  Location     Type
  3328 ;;  a               1    wreg     unsigned char 
  3329 ;; Auto vars:     Size  Location     Type
  3330 ;;  a               1    3[COMMON] unsigned char 
  3331 ;; Return value:  Size  Location     Type
  3332 ;;                  1    wreg      void 
  3333 ;; Registers used:
  3334 ;;		wreg
  3335 ;; Tracked objects:
  3336 ;;		On entry : 0/0
  3337 ;;		On exit  : 0/0
  3338 ;;		Unchanged: 0/0
  3339 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3340 ;;      Params:         0       0       0       0       0
  3341 ;;      Locals:         1       0       0       0       0
  3342 ;;      Temps:          0       0       0       0       0
  3343 ;;      Totals:         1       0       0       0       0
  3344 ;;Total ram usage:        1 bytes
  3345 ;; Hardware stack levels used: 1
  3346 ;; Hardware stack levels required when called: 3
  3347 ;; This function calls:
  3348 ;;		Nothing
  3349 ;; This function is called by:
  3350 ;;		_Lcd_Cmd
  3351 ;;		_Lcd_Init
  3352 ;;		_Lcd_Write_Char
  3353 ;; This function uses a non-reentrant model
  3354 ;;
  3355                           
  3356  04CA                     _Lcd_Port:	
  3357                           ;psect for function _Lcd_Port
  3358                           
  3359                           
  3360                           ;incstack = 0
  3361                           ; Regs used in _Lcd_Port: [wreg]
  3362                           ;Lcd_Port@a stored from wreg
  3363  04CA  00F3               	movwf	Lcd_Port@a
  3364  04CB                     l1606:
  3365                           
  3366                           ;./lcd.h: 4: void Lcd_Port(char a);./lcd.h: 5: {;./lcd.h: 6:  if(a & 1)
  3367  04CB  1C73               	btfss	Lcd_Port@a,0
  3368  04CC  2CCE               	goto	u1071
  3369  04CD  2CCF               	goto	u1070
  3370  04CE                     u1071:
  3371  04CE  2CD3               	goto	l57
  3372  04CF                     u1070:
  3373  04CF                     l1608:
  3374                           
  3375                           ;./lcd.h: 7:   RD4 = 1;
  3376  04CF  1283               	bcf	3,5	;RP0=0, select bank0
  3377  04D0  1303               	bcf	3,6	;RP1=0, select bank0
  3378  04D1  1608               	bsf	8,4	;volatile
  3379  04D2  2CD6               	goto	l58
  3380  04D3                     l57:	
  3381                           ;./lcd.h: 8:  else
  3382                           
  3383                           
  3384                           ;./lcd.h: 9:   RD4 = 0;
  3385  04D3  1283               	bcf	3,5	;RP0=0, select bank0
  3386  04D4  1303               	bcf	3,6	;RP1=0, select bank0
  3387  04D5  1208               	bcf	8,4	;volatile
  3388  04D6                     l58:
  3389                           
  3390                           ;./lcd.h: 11:  if(a & 2)
  3391  04D6  1CF3               	btfss	Lcd_Port@a,1
  3392  04D7  2CD9               	goto	u1081
  3393  04D8  2CDA               	goto	u1080
  3394  04D9                     u1081:
  3395  04D9  2CDC               	goto	l59
  3396  04DA                     u1080:
  3397  04DA                     l1610:
  3398                           
  3399                           ;./lcd.h: 12:   RD5 = 1;
  3400  04DA  1688               	bsf	8,5	;volatile
  3401  04DB  2CDD               	goto	l60
  3402  04DC                     l59:	
  3403                           ;./lcd.h: 13:  else
  3404                           
  3405                           
  3406                           ;./lcd.h: 14:   RD5 = 0;
  3407  04DC  1288               	bcf	8,5	;volatile
  3408  04DD                     l60:
  3409                           
  3410                           ;./lcd.h: 16:  if(a & 4)
  3411  04DD  1D73               	btfss	Lcd_Port@a,2
  3412  04DE  2CE0               	goto	u1091
  3413  04DF  2CE1               	goto	u1090
  3414  04E0                     u1091:
  3415  04E0  2CE3               	goto	l61
  3416  04E1                     u1090:
  3417  04E1                     l1612:
  3418                           
  3419                           ;./lcd.h: 17:   RD6 = 1;
  3420  04E1  1708               	bsf	8,6	;volatile
  3421  04E2  2CE4               	goto	l62
  3422  04E3                     l61:	
  3423                           ;./lcd.h: 18:  else
  3424                           
  3425                           
  3426                           ;./lcd.h: 19:   RD6 = 0;
  3427  04E3  1308               	bcf	8,6	;volatile
  3428  04E4                     l62:
  3429                           
  3430                           ;./lcd.h: 21:  if(a & 8)
  3431  04E4  1DF3               	btfss	Lcd_Port@a,3
  3432  04E5  2CE7               	goto	u1101
  3433  04E6  2CE8               	goto	u1100
  3434  04E7                     u1101:
  3435  04E7  2CEA               	goto	l63
  3436  04E8                     u1100:
  3437  04E8                     l1614:
  3438                           
  3439                           ;./lcd.h: 22:   RD7 = 1;
  3440  04E8  1788               	bsf	8,7	;volatile
  3441  04E9  2CEB               	goto	l65
  3442  04EA                     l63:	
  3443                           ;./lcd.h: 23:  else
  3444                           
  3445                           
  3446                           ;./lcd.h: 24:   RD7 = 0;
  3447  04EA  1388               	bcf	8,7	;volatile
  3448  04EB                     l65:
  3449  04EB  0008               	return
  3450  04EC                     __end_of_Lcd_Port:
  3451                           
  3452                           	psect	text23
  3453  05CE                     __ptext23:	
  3454 ;; *************** function _interrupcao *****************
  3455 ;; Defined at:
  3456 ;;		line 180 in file "main.c"
  3457 ;; Parameters:    Size  Location     Type
  3458 ;;		None
  3459 ;; Auto vars:     Size  Location     Type
  3460 ;;		None
  3461 ;; Return value:  Size  Location     Type
  3462 ;;                  1    wreg      void 
  3463 ;; Registers used:
  3464 ;;		wreg, status,2, status,0, pclath, cstack
  3465 ;; Tracked objects:
  3466 ;;		On entry : 0/0
  3467 ;;		On exit  : 0/0
  3468 ;;		Unchanged: 0/0
  3469 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3470 ;;      Params:         0       0       0       0       0
  3471 ;;      Locals:         0       0       0       0       0
  3472 ;;      Temps:          2       0       0       0       0
  3473 ;;      Totals:         2       0       0       0       0
  3474 ;;Total ram usage:        2 bytes
  3475 ;; Hardware stack levels used: 1
  3476 ;; Hardware stack levels required when called: 2
  3477 ;; This function calls:
  3478 ;;		_handleExternalInterruption
  3479 ;;		_handleTimerInterruption
  3480 ;; This function is called by:
  3481 ;;		Interrupt level 1
  3482 ;; This function uses a non-reentrant model
  3483 ;;
  3484                           
  3485  05CE                     _interrupcao:	
  3486                           ;psect for function _interrupcao
  3487                           
  3488  05CE                     i1l1578:
  3489                           
  3490                           ;main.c: 182:     handleTimerInterruption();
  3491  05CE  120A  118A  2425  120A  118A  	fcall	_handleTimerInterruption
  3492                           
  3493                           ;main.c: 183:     handleExternalInterruption();
  3494  05D3  120A  118A  25DF  120A  118A  	fcall	_handleExternalInterruption
  3495  05D8                     i1l138:
  3496  05D8  0872               	movf	??_interrupcao+1,w
  3497  05D9  008A               	movwf	10
  3498  05DA  0E71               	swapf	??_interrupcao,w
  3499  05DB  0083               	movwf	3
  3500  05DC  0EFE               	swapf	btemp,f
  3501  05DD  0E7E               	swapf	btemp,w
  3502  05DE  0009               	retfie
  3503  05DF                     __end_of_interrupcao:
  3504                           
  3505                           	psect	intentry
  3506  0004                     __pintentry:	
  3507                           ;incstack = 0
  3508 ;; hardware stack exceeded
  3509                           ; Regs used in _interrupcao: [wreg+status,2+status,0+pclath+cstack]
  3510                           
  3511  0004                     interrupt_function:
  3512  007E                     saved_w	set	btemp
  3513  0004  00FE               	movwf	btemp
  3514  0005  0E03               	swapf	3,w
  3515  0006  00F1               	movwf	??_interrupcao
  3516  0007  080A               	movf	10,w
  3517  0008  00F2               	movwf	??_interrupcao+1
  3518  0009  120A  118A  2DCE   	ljmp	_interrupcao
  3519                           
  3520                           	psect	text24
  3521  0425                     __ptext24:	
  3522 ;; *************** function _handleTimerInterruption *****************
  3523 ;; Defined at:
  3524 ;;		line 127 in file "main.c"
  3525 ;; Parameters:    Size  Location     Type
  3526 ;;		None
  3527 ;; Auto vars:     Size  Location     Type
  3528 ;;		None
  3529 ;; Return value:  Size  Location     Type
  3530 ;;                  1    wreg      void 
  3531 ;; Registers used:
  3532 ;;		wreg, status,2, status,0
  3533 ;; Tracked objects:
  3534 ;;		On entry : 0/0
  3535 ;;		On exit  : 0/0
  3536 ;;		Unchanged: 0/0
  3537 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3538 ;;      Params:         0       0       0       0       0
  3539 ;;      Locals:         0       0       0       0       0
  3540 ;;      Temps:          1       0       0       0       0
  3541 ;;      Totals:         1       0       0       0       0
  3542 ;;Total ram usage:        1 bytes
  3543 ;; Hardware stack levels used: 1
  3544 ;; This function calls:
  3545 ;;		Nothing
  3546 ;; This function is called by:
  3547 ;;		_interrupcao
  3548 ;; This function uses a non-reentrant model
  3549 ;;
  3550                           
  3551  0425                     _handleTimerInterruption:	
  3552                           ;psect for function _handleTimerInterruption
  3553                           
  3554  0425                     i1l1518:	
  3555                           ;incstack = 0
  3556                           ; Regs used in _handleTimerInterruption: [wreg+status,2+status,0]
  3557                           
  3558                           
  3559                           ;main.c: 129:     if(TMR1IF){
  3560  0425  1283               	bcf	3,5	;RP0=0, select bank0
  3561  0426  1303               	bcf	3,6	;RP1=0, select bank0
  3562  0427  1C0C               	btfss	12,0	;volatile
  3563  0428  2C2A               	goto	u100_21
  3564  0429  2C2B               	goto	u100_20
  3565  042A                     u100_21:
  3566  042A  2C59               	goto	i1l125
  3567  042B                     u100_20:
  3568  042B                     i1l1520:
  3569                           
  3570                           ;main.c: 130:         if(irrigacao_ativa){
  3571  042B  0879               	movf	_irrigacao_ativa,w
  3572  042C  047A               	iorwf	_irrigacao_ativa+1,w
  3573  042D  1903               	btfsc	3,2
  3574  042E  2C30               	goto	u101_21
  3575  042F  2C31               	goto	u101_20
  3576  0430                     u101_21:
  3577  0430  2C4F               	goto	i1l1536
  3578  0431                     u101_20:
  3579  0431                     i1l1522:
  3580                           
  3581                           ;main.c: 131:             timer_counter++;
  3582  0431  3001               	movlw	1
  3583  0432  07C5               	addwf	_timer_counter,f
  3584  0433  1803               	skipnc
  3585  0434  0AC6               	incf	_timer_counter+1,f
  3586  0435  3000               	movlw	0
  3587  0436  07C6               	addwf	_timer_counter+1,f
  3588  0437                     i1l1524:
  3589                           
  3590                           ;main.c: 132:             PORTBbits.RB1 = 1;
  3591  0437  1486               	bsf	6,1	;volatile
  3592  0438                     i1l1526:
  3593                           
  3594                           ;main.c: 133:             PORTBbits.RB6 = 1;
  3595  0438  1706               	bsf	6,6	;volatile
  3596                           
  3597                           ;main.c: 134:             if(timer_counter_max <= timer_counter){
  3598  0439  0846               	movf	_timer_counter+1,w
  3599  043A  3A80               	xorlw	128
  3600  043B  00F0               	movwf	??_handleTimerInterruption
  3601  043C  0842               	movf	_timer_counter_max+1,w
  3602  043D  3A80               	xorlw	128
  3603  043E  0270               	subwf	??_handleTimerInterruption,w
  3604  043F  1D03               	skipz
  3605  0440  2C43               	goto	u102_25
  3606  0441  0841               	movf	_timer_counter_max,w
  3607  0442  0245               	subwf	_timer_counter,w
  3608  0443                     u102_25:
  3609  0443  1C03               	skipc
  3610  0444  2C46               	goto	u102_21
  3611  0445  2C47               	goto	u102_20
  3612  0446                     u102_21:
  3613  0446  2C52               	goto	i1l1540
  3614  0447                     u102_20:
  3615  0447                     i1l1528:
  3616                           
  3617                           ;main.c: 135:                 PORTBbits.RB1 = 0;
  3618  0447  1283               	bcf	3,5	;RP0=0, select bank0
  3619  0448  1303               	bcf	3,6	;RP1=0, select bank0
  3620  0449  1086               	bcf	6,1	;volatile
  3621  044A                     i1l1530:
  3622                           
  3623                           ;main.c: 136:                 irrigacao_ativa = 0;
  3624  044A  01F9               	clrf	_irrigacao_ativa
  3625  044B  01FA               	clrf	_irrigacao_ativa+1
  3626  044C                     i1l1532:
  3627                           
  3628                           ;main.c: 137:                 PORTBbits.RB6 = 0;
  3629  044C  1306               	bcf	6,6	;volatile
  3630  044D                     i1l1534:
  3631                           
  3632                           ;main.c: 140:                 T1CONbits.TMR1ON = 0;
  3633  044D  1010               	bcf	16,0	;volatile
  3634  044E  2C52               	goto	i1l1540
  3635  044F                     i1l1536:
  3636                           
  3637                           ;main.c: 144:             timer_counter = 0;
  3638  044F  01C5               	clrf	_timer_counter
  3639  0450  01C6               	clrf	_timer_counter+1
  3640  0451                     i1l1538:
  3641                           
  3642                           ;main.c: 145:             PORTBbits.RB1 = 0;
  3643  0451  1086               	bcf	6,1	;volatile
  3644  0452                     i1l1540:
  3645                           
  3646                           ;main.c: 147:         PIR1bits.TMR1IF = 0;
  3647  0452  1283               	bcf	3,5	;RP0=0, select bank0
  3648  0453  1303               	bcf	3,6	;RP1=0, select bank0
  3649  0454  100C               	bcf	12,0	;volatile
  3650  0455                     i1l1542:
  3651                           
  3652                           ;main.c: 148:         TMR1H = 0xF3;
  3653  0455  30F3               	movlw	243
  3654  0456  008F               	movwf	15	;volatile
  3655  0457                     i1l1544:
  3656                           
  3657                           ;main.c: 149:         TMR1L = 0xCB;
  3658  0457  30CB               	movlw	203
  3659  0458  008E               	movwf	14	;volatile
  3660  0459                     i1l125:
  3661  0459  0008               	return
  3662  045A                     __end_of_handleTimerInterruption:
  3663                           
  3664                           	psect	text25
  3665  05DF                     __ptext25:	
  3666 ;; *************** function _handleExternalInterruption *****************
  3667 ;; Defined at:
  3668 ;;		line 169 in file "main.c"
  3669 ;; Parameters:    Size  Location     Type
  3670 ;;		None
  3671 ;; Auto vars:     Size  Location     Type
  3672 ;;		None
  3673 ;; Return value:  Size  Location     Type
  3674 ;;                  1    wreg      void 
  3675 ;; Registers used:
  3676 ;;		wreg, status,2, status,0, pclath, cstack
  3677 ;; Tracked objects:
  3678 ;;		On entry : 0/0
  3679 ;;		On exit  : 0/0
  3680 ;;		Unchanged: 0/0
  3681 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3682 ;;      Params:         0       0       0       0       0
  3683 ;;      Locals:         0       0       0       0       0
  3684 ;;      Temps:          0       0       0       0       0
  3685 ;;      Totals:         0       0       0       0       0
  3686 ;;Total ram usage:        0 bytes
  3687 ;; Hardware stack levels used: 1
  3688 ;; Hardware stack levels required when called: 1
  3689 ;; This function calls:
  3690 ;;		i1_irrigar
  3691 ;; This function is called by:
  3692 ;;		_interrupcao
  3693 ;; This function uses a non-reentrant model
  3694 ;;
  3695                           
  3696  05DF                     _handleExternalInterruption:	
  3697                           ;psect for function _handleExternalInterruption
  3698                           
  3699  05DF                     i1l1548:	
  3700                           ;incstack = 0
  3701 ;; hardware stack exceeded
  3702                           ; Regs used in _handleExternalInterruption: [wreg+status,2+status,0+pclath+cstack]
  3703                           
  3704                           
  3705                           ;main.c: 171:     if(INTF){
  3706  05DF  1C8B               	btfss	11,1	;volatile
  3707  05E0  2DE2               	goto	u103_21
  3708  05E1  2DE3               	goto	u103_20
  3709  05E2                     u103_21:
  3710  05E2  2DEF               	goto	i1l133
  3711  05E3                     u103_20:
  3712  05E3                     i1l1550:
  3713                           
  3714                           ;main.c: 172:         if(!irrigacao_ativa){
  3715  05E3  0879               	movf	_irrigacao_ativa,w
  3716  05E4  047A               	iorwf	_irrigacao_ativa+1,w
  3717  05E5  1D03               	btfss	3,2
  3718  05E6  2DE8               	goto	u104_21
  3719  05E7  2DE9               	goto	u104_20
  3720  05E8                     u104_21:
  3721  05E8  2DEE               	goto	i1l1554
  3722  05E9                     u104_20:
  3723  05E9                     i1l1552:
  3724                           
  3725                           ;main.c: 173:             irrigar();
  3726  05E9  120A  118A  2607  120A  118A  	fcall	i1_irrigar
  3727  05EE                     i1l1554:
  3728                           
  3729                           ;main.c: 175:         INTCONbits.INTF = 0;
  3730  05EE  108B               	bcf	11,1	;volatile
  3731  05EF                     i1l133:
  3732  05EF  0008               	return
  3733  05F0                     __end_of_handleExternalInterruption:
  3734                           
  3735                           	psect	text26
  3736  0607                     __ptext26:	
  3737 ;; *************** function i1_irrigar *****************
  3738 ;; Defined at:
  3739 ;;		line 155 in file "main.c"
  3740 ;; Parameters:    Size  Location     Type
  3741 ;;		None
  3742 ;; Auto vars:     Size  Location     Type
  3743 ;;		None
  3744 ;; Return value:  Size  Location     Type
  3745 ;;                  1    wreg      void 
  3746 ;; Registers used:
  3747 ;;		wreg, status,2
  3748 ;; Tracked objects:
  3749 ;;		On entry : 0/0
  3750 ;;		On exit  : 0/0
  3751 ;;		Unchanged: 0/0
  3752 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3753 ;;      Params:         0       0       0       0       0
  3754 ;;      Locals:         0       0       0       0       0
  3755 ;;      Temps:          0       0       0       0       0
  3756 ;;      Totals:         0       0       0       0       0
  3757 ;;Total ram usage:        0 bytes
  3758 ;; Hardware stack levels used: 1
  3759 ;; This function calls:
  3760 ;;		Nothing
  3761 ;; This function is called by:
  3762 ;;		_handleExternalInterruption
  3763 ;; This function uses a non-reentrant model
  3764 ;;
  3765                           
  3766  0607                     i1_irrigar:	
  3767                           ;psect for function i1_irrigar
  3768                           
  3769  0607                     i1l1492:	
  3770                           ;incstack = 0
  3771 ;; hardware stack exceeded
  3772                           ; Regs used in i1_irrigar: [wreg+status,2]
  3773                           
  3774                           
  3775                           ;main.c: 157:     irrigacao_ativa = 1;
  3776  0607  3001               	movlw	1
  3777  0608  00F9               	movwf	_irrigacao_ativa
  3778  0609  3000               	movlw	0
  3779  060A  00FA               	movwf	_irrigacao_ativa+1
  3780  060B                     i1l1494:
  3781                           
  3782                           ;main.c: 158:     timer_counter = 0;
  3783  060B  1283               	bcf	3,5	;RP0=0, select bank0
  3784  060C  1303               	bcf	3,6	;RP1=0, select bank0
  3785  060D  01C5               	clrf	_timer_counter
  3786  060E  01C6               	clrf	_timer_counter+1
  3787  060F                     i1l1496:
  3788                           
  3789                           ;main.c: 160:     T1CONbits.TMR1ON = 1;
  3790  060F  1410               	bsf	16,0	;volatile
  3791  0610                     i1l128:
  3792  0610  0008               	return
  3793  0611                     __end_ofi1_irrigar:
  3794  007E                     btemp	set	126	;btemp
  3795  007E                     wtemp0	set	126
  3796                           
  3797                           	psect	config
  3798                           
  3799                           ;Config register CONFIG @ 0x2007
  3800                           ;	Oscillator Selection bits
  3801                           ;	FOSC = HS, HS oscillator
  3802                           ;	Watchdog Timer Enable bit
  3803                           ;	WDTE = ON, WDT enabled
  3804                           ;	Power-up Timer Enable bit
  3805                           ;	PWRTE = ON, PWRT enabled
  3806                           ;	Brown-out Reset Enable bit
  3807                           ;	BOREN = ON, BOR enabled
  3808                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  3809                           ;	LVP = 0x1, unprogrammed default
  3810                           ;	Data EEPROM Memory Code Protection bit
  3811                           ;	CPD = 0x1, unprogrammed default
  3812                           ;	Flash Program Memory Write Enable bits
  3813                           ;	WRT = 0x3, unprogrammed default
  3814                           ;	In-Circuit Debugger Mode bit
  3815                           ;	DEBUG = 0x1, unprogrammed default
  3816                           ;	Flash Program Memory Code Protection bit
  3817                           ;	CP = 0x1, unprogrammed default
  3818  2007                     	org	8199
  3819  2007  3FF6               	dw	16374

Data Sizes:
    Strings     27
    Constant    0
    Data        8
    BSS         6
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      11
    BANK0            80     27      39
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 15
		 -> STR_2(CODE[12]), STR_1(CODE[15]), 


Critical Paths under _main in COMMON

    _main->_Lcd_Init
    _getADConverterValue->___wmul
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Clear->_Lcd_Cmd
    _setupNewVolumeFlow->___wmul
    ___awdiv->___wmul
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _interrupcao in COMMON

    _interrupcao->_handleTimerInterruption

Critical Paths under _main in BANK0

    _main->_verifyMenu
    _verifySensor->_getADConverterValue
    _getADConverterValue->___awdiv
    _verifyMenu->_handleMenu
    _handleMenu->_writeValor
    _writeValor->___awdiv
    _setupTimer->_setupNewVolumeFlow
    _setupNewVolumeFlow->_changeTimerMaxConter
    _changeTimerMaxConter->___awdiv
    ___awdiv->___awmod

Critical Paths under _interrupcao in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _interrupcao in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _interrupcao in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _interrupcao in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   10896
                           _Lcd_Init
                           _setupADC
          _setupExternalInterruption
                         _setupTimer
                 _setupWatchdogTimer
                         _verifyMenu
                       _verifySensor
 ---------------------------------------------------------------------------------
 (1) _verifySensor                                         1     1      0    1595
                                             17 BANK0      1     1      0
                _getADConverterValue
                            _irrigar
 ---------------------------------------------------------------------------------
 (2) _irrigar                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _getADConverterValue                                  6     4      2    1595
                                             11 BANK0      6     4      2
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) _verifyMenu                                           3     3      0    7306
                                             24 BANK0      3     3      0
                         _handleMenu
 ---------------------------------------------------------------------------------
 (2) _handleMenu                                           7     7      0    7306
                                             17 BANK0      7     7      0
                          _Lcd_Clear
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                 _setupNewVolumeFlow
                         _writeValor
 ---------------------------------------------------------------------------------
 (3) _writeValor                                           6     4      2    3762
                                             11 BANK0      6     4      2
                     _Lcd_Set_Cursor
                     _Lcd_Write_Char
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              7     3      4     793
                                              3 COMMON     5     1      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (4) _Lcd_Set_Cursor                                       7     6      1     815
                                              7 COMMON     1     0      1
                                              0 BANK0      6     6      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (3) _Lcd_Write_String                                     3     3      0     456
                                              0 BANK0      3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (4) _Lcd_Write_Char                                       4     4      0     254
                                              4 COMMON     4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Clear                                            0     0      0     155
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _setupWatchdogTimer                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setupTimer                                           0     0      0    1716
                 _setupNewVolumeFlow
 ---------------------------------------------------------------------------------
 (3) _setupNewVolumeFlow                                   2     2      0    1716
                                             13 BANK0      2     2      0
                             ___wmul
               _changeTimerMaxConter
 ---------------------------------------------------------------------------------
 (4) _changeTimerMaxConter                                 2     0      2    1286
                                             11 BANK0      2     0      2
                            ___awdiv
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    1165
                                              2 BANK0      9     5      4
                            ___awmod (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     396
                                              3 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) _setupExternalInterruption                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setupADC                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     279
                                              7 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (5) _Lcd_Cmd                                              3     3      0     155
                                              4 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (5) _Lcd_Port                                             1     1      0     124
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _interrupcao                                          2     2      0       0
                                              1 COMMON     2     2      0
         _handleExternalInterruption
            _handleTimerInterruption
 ---------------------------------------------------------------------------------
 (8) _handleTimerInterruption                              1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (8) _handleExternalInterruption                           0     0      0       0
                          i1_irrigar
 ---------------------------------------------------------------------------------
 (9) i1_irrigar                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _setupADC
   _setupExternalInterruption
   _setupTimer
     _setupNewVolumeFlow
       ___wmul
       _changeTimerMaxConter
         ___awdiv
           ___awmod (ARG)
           ___wmul (ARG)
   _setupWatchdogTimer
   _verifyMenu
     _handleMenu
       _Lcd_Clear
         _Lcd_Cmd
       _Lcd_Set_Cursor
         _Lcd_Cmd
       _Lcd_Write_String
         _Lcd_Write_Char
           _Lcd_Port
       _setupNewVolumeFlow
       _writeValor
         _Lcd_Set_Cursor
         _Lcd_Write_Char
         ___awdiv
         ___awmod
   _verifySensor
     _getADConverterValue
       ___awdiv
       ___wmul
     _irrigar

 _interrupcao (ROOT)
   _handleExternalInterruption
     i1_irrigar
   _handleTimerInterruption

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     1B      27       5       48.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      9       B       1       78.6%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      32      12        0.0%
ABS                  0      0      32       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Sat Mar 05 15:56:12 2022

                                 pc 0002                     writeValor@valor 002B  
                                l60 04DD                                  l61 04E3  
                                l62 04E4                                  l63 04EA  
                                l71 05FC                                  l80 02CB  
                                l65 04EB                                  l57 04D3  
                                l58 04D6                                  l59 04DC  
                                l83 03EE                                  l68 0578  
                                l77 037E                                  l89 0482  
                      ___awdiv@sign 0028                    writeValor@dezena 002F  
                                fsr 0004                 ___wmul@multiplicand 0075  
                   _irrigacao_ativa 0079                                 l112 05A5  
                               l115 055E                                 l141 0627  
                               l118 05BA                                 l144 0205  
                               l128 0606                                 l170 053F  
                               l164 0184                                 l156 00D7  
                               l148 0032                                 l181 0620  
                               l173 0424                                 l166 0197  
                               l431 026E                                 l184 058F  
                               l280 04A7                                 l176 04C6  
                               l178 04C9                                 l444 0326  
                               l278 048F                                 _RD2 0042  
                               _RD3 0043                                 _RD4 0044  
                               _RD5 0045                                 _RD6 0046  
                               _RD7 0047                                 u730 0489  
                               u731 0488                                 u760 04A3  
                               u761 04A2                                 u745 0490  
                               u755 0497                   writeValor@centena 002E  
                               fsr0 0004                                 indf 0000  
                      ___awmod@sign 0021        ??_handleExternalInterruption 0070  
                              l1160 0587                                l1320 049D  
                              l1312 0483                                l1162 058B  
                              l1138 0621                                l1322 04A3  
                              l1314 0485                                l1164 058C  
                              l1316 0489                                l1156 0619  
                              l1166 058D                                l1158 0579  
                              l1318 0496                                l1168 058E  
                              l1610 04DA                                l1612 04E1  
                              l1620 0569                                l1700 03DB  
                              l1614 04E8                                l1606 04CB  
                              l1622 056C                                l1630 020D  
                              l1710 0590                                l1702 03DE  
                              l1382 05FD                                l1608 04CF  
                              l1624 0575                                l1616 0560  
                              l1640 0221                                l1632 0212  
                              l1704 03E4                                l1720 02D8  
                              l1800 00B0                                l1384 0601  
                              l1618 0563                                l1650 0237  
                              l1642 0223                                l1634 0214  
                              l1626 0206                                l1706 03E7  
                              l1730 02EC                                l1722 02DA  
                              l1714 02CC                                l1810 00D1  
                              l1802 00B4                                l1386 0605  
                              l1660 025A                                l1652 023B  
                              l1644 0229                                l1636 0218  
                              l1628 0209                                l1708 03EB  
                              l1740 030B                                l1732 02F3  
                              l1724 02DE                                l1716 02CF  
                              l1820 00FB                                l1812 00D8  
                              l1804 00B6                                l1900 053A  
                              l1654 024C                                l1646 022C  
                              l1662 0260                                l1638 021D  
                              l1670 032A                                l1742 0312  
                              l1734 02F7                                l1726 02E3  
                              l1718 02D3                                l1822 0101  
                              l1830 011E                                l1814 00E2  
                              l1806 00BF                                l1664 0265  
                              l1656 0252                                l1648 0233  
                              l1752 05F0                                l1760 0475  
                              l1672 032F                                l1680 0354  
                              l1736 02FB                                l1728 02E9  
                              l1744 0318                                l1840 0146  
                              l1832 0124                                l1824 0105  
                              l1816 00EA                                l1808 00C9  
                              l1904 04A8                                l1920 0389  
                              l1666 026A                                l1658 0253  
                              l1762 0540                                l1690 03B9  
                              l1754 045D                                l1682 035A  
                              l1674 0340                                l1746 031D  
                              l1738 0305                                l1850 0162  
                              l1834 012A                                l1842 0150  
                              l1826 010A                                l1818 00F0  
                              l1770 0027                                l1906 04BD  
                              l1930 039A                                l1922 038C  
                              l1914 037F                                l1692 03C3  
                              l1756 0460                                l1684 036B  
                              l1676 0345                                l1748 0322  
                              l1860 0192                                l1852 016B  
                              l1844 0156                                l1836 0137  
                              l1828 0110                                l1780 0056  
                              l1772 0033                                l1908 04C0  
                              l1932 03A4                                l1924 038D  
                              l1916 0385                                l1694 03C6  
                              l1758 046D                                l1686 0370  
                              l1678 034B                                l1766 0198  
                              l1846 015C                                l1838 013B  
                              l1854 0175                                l1790 008B  
                              l1782 005C                                l1774 003D  
                              l1870 0420                                l1934 03A9  
                              l1926 0390                                l1918 0386  
                              l1880 028C                                l1696 03D4  
                              l1688 0376                                l1856 017E  
                              l1848 0160                                l1792 008F  
                              l1784 0072                                l1776 0045  
                              l1864 03EF                                l1936 03AE  
                              l1928 0395                                l1882 0292  
                              l1874 026F                                l1890 05B5  
                              l1698 03D7                                l1858 0189  
                              l1794 009A                                l1786 0078  
                              l1778 004B                                l1866 03F2  
                              l1876 0275                                l1884 05A6  
                              l1788 007E                                l1796 00A4  
                              l1868 03F9                                l1878 027E  
                              l1886 05B0                                l1798 00AA  
                              l1894 0521                                l1888 05B4  
                              l1896 0527                                l1898 052B  
        __end_of_setupNewVolumeFlow 055F                                STR_1 0506  
                              STR_2 0515                                u1100 04E8  
                              u1101 04E7                                u1110 020D  
                              u1111 020C                                u1200 0265  
                              u1120 0218                                u1201 0264  
                              u1121 0217                   writeValor@unidade 0030  
                              u1130 0229                                u1210 032F  
                              u1131 0228                                u1211 032E  
                              u1300 02FB                                u1301 02FA  
                              u1070 04CF                                u1150 023B  
                              u1230 035A                                u1310 0305  
                              u1071 04CE                                u1151 023A  
                              u1231 0359                                u1311 0304  
                              u1080 04DA                                u1400 00B4  
                              u1081 04D9                                u1145 022D  
                              u1225 0337                                u1401 00B3  
                              u1090 04E1                                u1170 024C  
                              u1330 0318                                u1410 00D1  
                              u1091 04E0                                u1171 024B  
                              u1331 0317                                u1315 0301  
                              u1411 00D0                                u1340 031D  
                              u1260 02D3                                u1420 0101  
                              u1500 04BD                                u1165 023C  
                              u1245 0362                                u1341 031C  
                              u1325 030C                                u1261 02D2  
                              u1421 0100                                u1501 04BC  
                              u1190 0260                                u1350 0482  
                              u1270 02DE                                u1430 0124  
                              u1191 025F                                u1175 0248  
                              u1255 03C9                                u1351 0481  
                              u1271 02DD                                u1431 0123  
                              u1280 02E9                                u1440 0137  
                              u1360 005C                                u1185 0254  
                              u1281 02E8                                u1441 0136  
                              u1361 005B                                u1505 04B9  
                              u1450 0156                                u1370 0078  
                              u1451 0155                                u1371 0077  
                              u1460 0160                                u1380 008B  
                              u1461 015F                                u1445 0133  
                              u1381 008A                                u1517 03F6  
                              u1470 017E                                u1390 00AA  
                              u1295 02ED                                u1471 017D  
                              u1607 0171                                u1391 00A9  
                              u1527 0534                                u1480 0192  
                              u1617 03D9                                u1481 0191  
                              u1385 0087                                u1537 0039  
                              u1490 0527                                u1627 03E9  
                              u1547 006C                                u1491 0526  
                              u1637 0279                                u1557 00A0  
                              u1647 0288                                u1567 00C5  
                              u1657 0296                                u1577 00DE  
                              u1667 0570                                u1587 0118  
                              u1597 014C                                _INTF 0059  
             ??_getADConverterValue 002D                   ?_Lcd_Write_String 0070  
                              _main 037F                                btemp 007E  
                              start 000C                  ??_Lcd_Write_String 0078  
                   __end_of_Lcd_Cmd 0579         ?_handleExternalInterruption 0070  
                             ?_main 0070                     __end_of___awdiv 026F  
                   __end_of___awmod 0327                     ___awdiv@divisor 0022  
                             i1l133 05EF                               i1l125 0459  
                             i1l128 0610                               i1l138 05D8  
                   ___awdiv@counter 0027                               _TMR1H 000F  
                             _TMR1L 000E                               _PORTB 0006  
                             _PORTC 0007                               _TRISA 0085  
                             _TRISB 0086                               _TRISC 0087  
                             _TRISD 0088                               _MLxMS 003B  
                 _timer_counter_max 0041                     __end_of_irrigar 0607  
                             pclath 000A                               status 0003  
                             wtemp0 007E                    __end_of_Lcd_Init 02CC  
                  __end_of_Lcd_Port 04EC                     __initialization 000F  
                      ?_interrupcao 0070                        __end_of_main 03B8  
                            ??_main 0079            setupNewVolumeFlow@new_ms 002D  
          ?_handleTimerInterruption 0070                              _ADRESH 001E  
                            _ADRESL 009E                    ___awdiv@dividend 0024  
                            u100_20 042B                              u100_21 042A  
                            u101_20 0431                              u101_21 0430  
                            u102_20 0447                              u102_21 0446  
                            u102_25 0443                              u103_20 05E3  
                            u103_21 05E2                              u104_20 05E9  
                            i1l1520 042B                              u104_21 05E8  
                            i1l1530 044A                              i1l1522 0431  
                            i1l1532 044C                              i1l1540 0452  
                            i1l1524 0437                              i1l1550 05E3  
                            i1l1542 0455                              i1l1534 044D  
                            i1l1526 0438                              i1l1518 0425  
                            i1l1552 05E9                              i1l1544 0457  
                            i1l1528 0447                              i1l1536 044F  
                            i1l1554 05EE                              i1l1538 0451  
                            i1l1492 0607                              i1l1548 05DF  
                            i1l1494 060B                              i1l1496 060F  
                            i1l1578 05CE                           ??_Lcd_Cmd 0074  
                            _TMR1IF 0060   __end_of_setupExternalInterruption 0628  
                            ___wmul 0483                           ??___awdiv 0026  
                         ??___awmod 0077                    ___awdiv@quotient 0029  
                   ___awmod@divisor 0073                     ___awmod@counter 0020  
                  __end_of_setupADC 0590                           ??_irrigar 0073  
                            saved_w 007E                     Lcd_Set_Cursor@a 0022  
                   Lcd_Set_Cursor@b 0077                     Lcd_Set_Cursor@y 0024  
                   Lcd_Set_Cursor@z 0023                   __end_ofi1_irrigar 0611  
           __end_of__initialization 0023                   __end_of_Lcd_Clear 05FD  
                    __pcstackCOMMON 0070                        __pidataBANK0 0611  
                    _Lcd_Set_Cursor 0327                      _OPTION_REGbits 0081  
                         ?_Lcd_Init 0070                           ?_Lcd_Port 0070  
                        __pbssBANK0 0043                          __pmaintext 037F  
                _setupNewVolumeFlow 0540                             ?___wmul 0073  
                  handleMenu@volume 0034        __end_of_changeTimerMaxConter 05A6  
                        __pintentry 0004                          _handleMenu 0027  
            __end_of_Lcd_Set_Cursor 037F                 ?_setupNewVolumeFlow 0070  
       __end_of_getADConverterValue 0425                          ??_Lcd_Init 0077  
                        ??_Lcd_Port 0073                          __stringtab 0500  
                    _Lcd_Write_Char 03B8                             _Lcd_Cmd 055F  
              ??_setupNewVolumeFlow 0079                           ?_setupADC 0070  
                           ___awdiv 0206                             ___awmod 02CC  
                   ?_Lcd_Set_Cursor 0077                             __ptext1 04A8  
                           __ptext2 05FD                             __ptext3 03EF  
                           __ptext4 0521                             __ptext5 0027  
                           __ptext6 0198                             __ptext7 02CC  
                           __ptext8 0327                             __ptext9 045A  
                         _T1CONbits 0010                    ___awmod@dividend 0075  
                           _irrigar 05FD              __end_of_Lcd_Write_Char 03EF  
              end_of_initialization 0023                          ??_setupADC 0073  
                         Lcd_Port@a 0073                         ?_handleMenu 0070  
                         _PORTBbits 0006                          _setupTimer 05A6  
                        _setup_menu 0043                          _verifyMenu 0521  
                   ?_Lcd_Write_Char 0070                   Lcd_Write_String@a 0022  
                 Lcd_Write_String@i 0020                _changeTimerMaxConter 0590  
        __end_of_setupWatchdogTimer 0621                       ?_verifySensor 0070  
                         i1_irrigar 0607          ?_setupExternalInterruption 0070  
                         _Lcd_Clear 05F0                          _writeValor 0198  
                    __end_of___wmul 04A8                    _Lcd_Write_String 045A  
               start_initialization 000F               ?_changeTimerMaxConter 002B  
                    ??_verifySensor 0031                          ?i1_irrigar 0070  
                        ?_Lcd_Clear 0070                            ??___wmul 0077  
                        init_fetch0 05BB                         __pdataBANK0 003B  
        getADConverterValue@leitura 002F                     Lcd_Write_Char@a 0077  
                   Lcd_Write_Char@y 0076                         ?_setupTimer 0070  
                       __pbssCOMMON 0079                         ?_verifyMenu 0070  
                         ___latbits 0002                       __pcstackBANK0 0020  
                          ?_Lcd_Cmd 0070             _handleTimerInterruption 0425  
                     ??_interrupcao 0071                    ??_Lcd_Set_Cursor 0020  
                 handleMenu@umidade 0036                            ?___awdiv 0022  
                          ?___awmod 0073                         ?_writeValor 002B  
                         __pstrings 0500                            ?_irrigar 0070  
            ??_changeTimerMaxConter 0079                   interrupt_function 0004  
                    ___wmul@product 0077                            _PIE1bits 008C  
                       ??i1_irrigar 0070                            Lcd_Cmd@a 0076  
                          _PIR1bits 000C                         ??_Lcd_Clear 0077  
                      ??_handleMenu 0031                 __end_of_interrupcao 05DF  
                        _ADCON0bits 001F                         __stringbase 0505  
                        _ADCON1bits 009F                   ___wmul@multiplier 0073  
              __end_of_verifySensor 04CA                    ??_Lcd_Write_Char 0074  
                          _Lcd_Init 026F                            _Lcd_Port 04CA  
         ??_handleTimerInterruption 0070            __end_of_Lcd_Write_String 0483  
                __end_of_handleMenu 0198         ??_setupExternalInterruption 0073  
                _setupWatchdogTimer 0619  __end_of_handleExternalInterruption 05F0  
        _handleExternalInterruption 05DF                  __end_of__stringtab 0506  
               ?_setupWatchdogTimer 0070                            __ptext10 03B8  
                          __ptext11 05F0                            __ptext20 026F  
                          __ptext12 0619                            __ptext21 055F  
                          __ptext13 05A6                            __ptext22 04CA  
                          __ptext14 0540                            __ptext23 05CE  
                          __ptext15 0590                            __ptext24 0425  
                          __ptext16 0206                            __ptext25 05DF  
                          __ptext17 0483                            __ptext26 0607  
                          __ptext18 0621                            __ptext19 0579  
        changeTimerMaxConter@mili_s 002B                ??_setupWatchdogTimer 0073  
                          _setupADC 0579                         _interrupcao 05CE  
   __end_of_handleTimerInterruption 045A                      _umidade_minima 003F  
                     _timer_counter 0045                        ??_setupTimer 0079  
                        _INTCONbits 000B                        ??_verifyMenu 0038  
         _setupExternalInterruption 0621                            init_ram0 05BF  
                Lcd_Write_Char@temp 0075                            intlevel1 0000  
                __end_of_setupTimer 05BB                           stringcode 0500  
                __end_of_verifyMenu 0540                        ??_writeValor 002D  
                Lcd_Set_Cursor@temp 0025                 _getADConverterValue 03EF  
                          stringdir 0500                            stringtab 0500  
                      _water_volume 003D                ?_getADConverterValue 002B  
                __end_of_writeValor 0206                        _verifySensor 04A8  
