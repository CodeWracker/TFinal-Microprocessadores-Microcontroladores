

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Fri Mar 04 18:11:05 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text14,local,class=CODE,merge=1,delta=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2
    32                           	psect	text20,local,class=CODE,merge=1,delta=2
    33                           	psect	text21,local,class=CODE,merge=1,delta=2
    34                           	psect	text22,local,class=CODE,merge=1,delta=2
    35                           	psect	text23,local,class=CODE,merge=1,delta=2
    36                           	psect	intentry,global,class=CODE,delta=2
    37                           	psect	text24,local,class=CODE,merge=1,delta=2
    38                           	psect	text25,local,class=CODE,merge=1,delta=2
    39                           	psect	text26,local,class=CODE,merge=1,delta=2
    40                           	dabs	1,0x7E,2
    41  0000                     
    42                           ; Version 2.20
    43                           ; Generated 12/02/2020 GMT
    44                           ; 
    45                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    46                           ; All rights reserved.
    47                           ; 
    48                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    49                           ; 
    50                           ; Redistribution and use in source and binary forms, with or without modification, are
    51                           ; permitted provided that the following conditions are met:
    52                           ; 
    53                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    54                           ;        conditions and the following disclaimer.
    55                           ; 
    56                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    57                           ;        of conditions and the following disclaimer in the documentation and/or other
    58                           ;        materials provided with the distribution.
    59                           ; 
    60                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    61                           ;        software without specific prior written permission.
    62                           ; 
    63                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    64                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    65                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    66                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    67                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    68                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    69                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    70                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    71                           ; 
    72                           ; 
    73                           ; Code-generator required, PIC16F877A Definitions
    74                           ; 
    75                           ; SFR Addresses
    76  0000                     	;# 
    77  0001                     	;# 
    78  0002                     	;# 
    79  0003                     	;# 
    80  0004                     	;# 
    81  0005                     	;# 
    82  0006                     	;# 
    83  0007                     	;# 
    84  0008                     	;# 
    85  0009                     	;# 
    86  000A                     	;# 
    87  000B                     	;# 
    88  000C                     	;# 
    89  000D                     	;# 
    90  000E                     	;# 
    91  000E                     	;# 
    92  000F                     	;# 
    93  0010                     	;# 
    94  0011                     	;# 
    95  0012                     	;# 
    96  0013                     	;# 
    97  0014                     	;# 
    98  0015                     	;# 
    99  0015                     	;# 
   100  0016                     	;# 
   101  0017                     	;# 
   102  0018                     	;# 
   103  0019                     	;# 
   104  001A                     	;# 
   105  001B                     	;# 
   106  001B                     	;# 
   107  001C                     	;# 
   108  001D                     	;# 
   109  001E                     	;# 
   110  001F                     	;# 
   111  0081                     	;# 
   112  0085                     	;# 
   113  0086                     	;# 
   114  0087                     	;# 
   115  0088                     	;# 
   116  0089                     	;# 
   117  008C                     	;# 
   118  008D                     	;# 
   119  008E                     	;# 
   120  0091                     	;# 
   121  0092                     	;# 
   122  0093                     	;# 
   123  0094                     	;# 
   124  0098                     	;# 
   125  0099                     	;# 
   126  009C                     	;# 
   127  009D                     	;# 
   128  009E                     	;# 
   129  009F                     	;# 
   130  010C                     	;# 
   131  010D                     	;# 
   132  010E                     	;# 
   133  010F                     	;# 
   134  018C                     	;# 
   135  018D                     	;# 
   136  0000                     	;# 
   137  0001                     	;# 
   138  0002                     	;# 
   139  0003                     	;# 
   140  0004                     	;# 
   141  0005                     	;# 
   142  0006                     	;# 
   143  0007                     	;# 
   144  0008                     	;# 
   145  0009                     	;# 
   146  000A                     	;# 
   147  000B                     	;# 
   148  000C                     	;# 
   149  000D                     	;# 
   150  000E                     	;# 
   151  000E                     	;# 
   152  000F                     	;# 
   153  0010                     	;# 
   154  0011                     	;# 
   155  0012                     	;# 
   156  0013                     	;# 
   157  0014                     	;# 
   158  0015                     	;# 
   159  0015                     	;# 
   160  0016                     	;# 
   161  0017                     	;# 
   162  0018                     	;# 
   163  0019                     	;# 
   164  001A                     	;# 
   165  001B                     	;# 
   166  001B                     	;# 
   167  001C                     	;# 
   168  001D                     	;# 
   169  001E                     	;# 
   170  001F                     	;# 
   171  0081                     	;# 
   172  0085                     	;# 
   173  0086                     	;# 
   174  0087                     	;# 
   175  0088                     	;# 
   176  0089                     	;# 
   177  008C                     	;# 
   178  008D                     	;# 
   179  008E                     	;# 
   180  0091                     	;# 
   181  0092                     	;# 
   182  0093                     	;# 
   183  0094                     	;# 
   184  0098                     	;# 
   185  0099                     	;# 
   186  009C                     	;# 
   187  009D                     	;# 
   188  009E                     	;# 
   189  009F                     	;# 
   190  010C                     	;# 
   191  010D                     	;# 
   192  010E                     	;# 
   193  010F                     	;# 
   194  018C                     	;# 
   195  018D                     	;# 
   196                           
   197                           	psect	idataBANK0
   198  0550                     __pidataBANK0:
   199                           
   200                           ;initializer for _MLxMS
   201  0550  3419               	retlw	25
   202  0551  3400               	retlw	0
   203                           
   204                           ;initializer for _umidade_minima
   205  0552  340A               	retlw	10
   206  0553  3400               	retlw	0
   207                           
   208                           ;initializer for _timer_counter_max
   209  0554  340A               	retlw	10
   210  0555  3400               	retlw	0
   211  0006                     _PORTB	set	6
   212  0007                     _PORTC	set	7
   213  001F                     _ADCON0bits	set	31
   214  000C                     _PIR1bits	set	12
   215  0006                     _PORTBbits	set	6
   216  000E                     _TMR1L	set	14
   217  000F                     _TMR1H	set	15
   218  0010                     _T1CONbits	set	16
   219  000B                     _INTCONbits	set	11
   220  001E                     _ADRESH	set	30
   221  0059                     _INTF	set	89
   222  0060                     _TMR1IF	set	96
   223  0043                     _RD3	set	67
   224  0042                     _RD2	set	66
   225  0047                     _RD7	set	71
   226  0046                     _RD6	set	70
   227  0045                     _RD5	set	69
   228  0044                     _RD4	set	68
   229  0088                     _TRISD	set	136
   230  0087                     _TRISC	set	135
   231  0086                     _TRISB	set	134
   232  0085                     _TRISA	set	133
   233  009E                     _ADRESL	set	158
   234  009F                     _ADCON1bits	set	159
   235  0081                     _OPTION_REGbits	set	129
   236  008C                     _PIE1bits	set	140
   237                           
   238                           	psect	strings
   239  0485                     __pstrings:
   240  0485                     stringtab:
   241  0485                     __stringtab:
   242  0485                     stringcode:	
   243                           ;	String table - string pointers are 1 byte each
   244                           
   245  0485                     stringdir:
   246  0485  3004               	movlw	high stringdir
   247  0486  008A               	movwf	10
   248  0487  0804               	movf	4,w
   249  0488  0A84               	incf	4,f
   250  0489  0782               	addwf	2,f
   251  048A                     __stringbase:
   252  048A  3400               	retlw	0
   253  048B                     __end_of__stringtab:
   254  048B                     STR_2:
   255  048B  344D               	retlw	77	;'M'
   256  048C  3455               	retlw	85	;'U'
   257  048D  344E               	retlw	78	;'N'
   258  048E  3444               	retlw	68	;'D'
   259  048F  344F               	retlw	79	;'O'
   260  0490  3420               	retlw	32	;' '
   261  0491  3444               	retlw	68	;'D'
   262  0492  344F               	retlw	79	;'O'
   263  0493  3449               	retlw	73	;'I'
   264  0494  3444               	retlw	68	;'D'
   265  0495  344F               	retlw	79	;'O'
   266  0496  3400               	retlw	0
   267  0497                     STR_1:
   268  0497  344F               	retlw	79	;'O'
   269  0498  344C               	retlw	76	;'L'
   270  0499  3441               	retlw	65	;'A'
   271  049A  3420               	retlw	32	;' '
   272  049B  344D               	retlw	77	;'M'
   273  049C  3455               	retlw	85	;'U'
   274  049D  344E               	retlw	78	;'N'
   275  049E  3444               	retlw	68	;'D'
   276  049F  344F               	retlw	79	;'O'
   277  04A0  3400               	retlw	0
   278                           
   279                           	psect	cinit
   280  000F                     start_initialization:	
   281                           ; #config settings
   282                           
   283  000F                     __initialization:
   284                           
   285                           ; Initialize objects allocated to BANK0
   286  000F  120A  118A  2550  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   287  0014  00C2               	movwf	__pdataBANK0& (0+127)
   288  0015  120A  118A  2551  120A  118A  	fcall	__pidataBANK0+1	;fetch initializer
   289  001A  00C3               	movwf	(__pdataBANK0+1)& (0+127)
   290  001B  120A  118A  2552  120A  118A  	fcall	__pidataBANK0+2	;fetch initializer
   291  0020  00C4               	movwf	(__pdataBANK0+2)& (0+127)
   292  0021  120A  118A  2553  120A  118A  	fcall	__pidataBANK0+3	;fetch initializer
   293  0026  00C5               	movwf	(__pdataBANK0+3)& (0+127)
   294  0027  120A  118A  2554  120A  118A  	fcall	__pidataBANK0+4	;fetch initializer
   295  002C  00C6               	movwf	(__pdataBANK0+4)& (0+127)
   296  002D  120A  118A  2555  120A  118A  	fcall	__pidataBANK0+5	;fetch initializer
   297  0032  00C7               	movwf	(__pdataBANK0+5)& (0+127)
   298                           
   299                           ; Clear objects allocated to BANK0
   300  0033  01C8               	clrf	__pbssBANK0& (0+127)
   301  0034  01C9               	clrf	(__pbssBANK0+1)& (0+127)
   302                           
   303                           ; Clear objects allocated to COMMON
   304  0035  01F9               	clrf	__pbssCOMMON& (0+127)
   305  0036  01FA               	clrf	(__pbssCOMMON+1)& (0+127)
   306  0037                     end_of_initialization:	
   307                           ;End of C runtime variable initialization code
   308                           
   309  0037                     __end_of__initialization:
   310  0037  0183               	clrf	3
   311  0038  120A  118A  2973   	ljmp	_main	;jump to C main() function
   312                           
   313                           	psect	bssCOMMON
   314  0079                     __pbssCOMMON:
   315  0079                     _irrigacao_ativa:
   316  0079                     	ds	2
   317                           
   318                           	psect	bssBANK0
   319  0048                     __pbssBANK0:
   320  0048                     _timer_counter:
   321  0048                     	ds	2
   322                           
   323                           	psect	dataBANK0
   324  0042                     __pdataBANK0:
   325  0042                     _MLxMS:
   326  0042                     	ds	2
   327  0044                     _umidade_minima:
   328  0044                     	ds	2
   329  0046                     _timer_counter_max:
   330  0046                     	ds	2
   331                           
   332                           	psect	cstackCOMMON
   333  0070                     __pcstackCOMMON:
   334  0070                     ?_Lcd_Port:
   335  0070                     ?_Lcd_Cmd:	
   336                           ; 1 bytes @ 0x0
   337                           
   338  0070                     ?_Lcd_Clear:	
   339                           ; 1 bytes @ 0x0
   340                           
   341  0070                     ?_Lcd_Init:	
   342                           ; 1 bytes @ 0x0
   343                           
   344  0070                     ?_Lcd_Write_Char:	
   345                           ; 1 bytes @ 0x0
   346                           
   347  0070                     ?_Lcd_Write_String:	
   348                           ; 1 bytes @ 0x0
   349                           
   350  0070                     ?_setupTimer:	
   351                           ; 1 bytes @ 0x0
   352                           
   353  0070                     ?_handleTimerInterruption:	
   354                           ; 1 bytes @ 0x0
   355                           
   356  0070                     ??_handleTimerInterruption:	
   357                           ; 1 bytes @ 0x0
   358                           
   359  0070                     ?_irrigar:	
   360                           ; 1 bytes @ 0x0
   361                           
   362  0070                     ?_handleExternalInterruption:	
   363                           ; 1 bytes @ 0x0
   364                           
   365  0070                     ??_handleExternalInterruption:	
   366                           ; 1 bytes @ 0x0
   367                           
   368  0070                     ?_interrupcao:	
   369                           ; 1 bytes @ 0x0
   370                           
   371  0070                     ?_setupExternalInterruption:	
   372                           ; 1 bytes @ 0x0
   373                           
   374  0070                     ?_handleMenu:	
   375                           ; 1 bytes @ 0x0
   376                           
   377  0070                     ?_verifyMenu:	
   378                           ; 1 bytes @ 0x0
   379                           
   380  0070                     ?_verifySensor:	
   381                           ; 1 bytes @ 0x0
   382                           
   383  0070                     ?_setupWatchdogTimer:	
   384                           ; 1 bytes @ 0x0
   385                           
   386  0070                     ?_setupADC:	
   387                           ; 1 bytes @ 0x0
   388                           
   389  0070                     ?_main:	
   390                           ; 1 bytes @ 0x0
   391                           
   392  0070                     ?i1_irrigar:	
   393                           ; 1 bytes @ 0x0
   394                           
   395  0070                     ??i1_irrigar:	
   396                           ; 1 bytes @ 0x0
   397                           
   398                           
   399                           ; 1 bytes @ 0x0
   400  0070                     	ds	1
   401  0071                     ??_interrupcao:
   402                           
   403                           ; 1 bytes @ 0x1
   404  0071                     	ds	2
   405  0073                     ??_Lcd_Port:
   406  0073                     ??_irrigar:	
   407                           ; 1 bytes @ 0x3
   408                           
   409  0073                     ??_setupExternalInterruption:	
   410                           ; 1 bytes @ 0x3
   411                           
   412  0073                     ??_handleMenu:	
   413                           ; 1 bytes @ 0x3
   414                           
   415  0073                     ??_verifyMenu:	
   416                           ; 1 bytes @ 0x3
   417                           
   418  0073                     ??_setupWatchdogTimer:	
   419                           ; 1 bytes @ 0x3
   420                           
   421  0073                     ??_setupADC:	
   422                           ; 1 bytes @ 0x3
   423                           
   424  0073                     ?___wmul:	
   425                           ; 1 bytes @ 0x3
   426                           
   427  0073                     ?___fltol:	
   428                           ; 2 bytes @ 0x3
   429                           
   430  0073                     Lcd_Port@a:	
   431                           ; 4 bytes @ 0x3
   432                           
   433  0073                     ___wmul@multiplier:	
   434                           ; 1 bytes @ 0x3
   435                           
   436  0073                     ___fltol@f1:	
   437                           ; 2 bytes @ 0x3
   438                           
   439                           
   440                           ; 4 bytes @ 0x3
   441  0073                     	ds	1
   442  0074                     ??_Lcd_Cmd:
   443  0074                     ??_Lcd_Write_Char:	
   444                           ; 1 bytes @ 0x4
   445                           
   446                           
   447                           ; 1 bytes @ 0x4
   448  0074                     	ds	1
   449  0075                     Lcd_Write_Char@temp:
   450  0075                     ___wmul@multiplicand:	
   451                           ; 1 bytes @ 0x5
   452                           
   453                           
   454                           ; 2 bytes @ 0x5
   455  0075                     	ds	1
   456  0076                     Lcd_Cmd@a:
   457  0076                     Lcd_Write_Char@y:	
   458                           ; 1 bytes @ 0x6
   459                           
   460                           
   461                           ; 1 bytes @ 0x6
   462  0076                     	ds	1
   463  0077                     ??_Lcd_Clear:
   464  0077                     ?_Lcd_Set_Cursor:	
   465                           ; 1 bytes @ 0x7
   466                           
   467  0077                     ??_Lcd_Init:	
   468                           ; 1 bytes @ 0x7
   469                           
   470  0077                     ??___wmul:	
   471                           ; 1 bytes @ 0x7
   472                           
   473  0077                     Lcd_Set_Cursor@b:	
   474                           ; 1 bytes @ 0x7
   475                           
   476  0077                     Lcd_Write_Char@a:	
   477                           ; 1 bytes @ 0x7
   478                           
   479  0077                     ___fltol@sign1:	
   480                           ; 1 bytes @ 0x7
   481                           
   482  0077                     ___wmul@product:	
   483                           ; 1 bytes @ 0x7
   484                           
   485                           
   486                           ; 2 bytes @ 0x7
   487  0077                     	ds	1
   488  0078                     ??_Lcd_Write_String:
   489  0078                     ___fltol@exp1:	
   490                           ; 1 bytes @ 0x8
   491                           
   492                           
   493                           ; 1 bytes @ 0x8
   494  0078                     	ds	1
   495  0079                     ??_changeTimerMaxConter:
   496  0079                     ??_setupNewVolumeFlow:	
   497                           ; 1 bytes @ 0x9
   498                           
   499  0079                     ??_setupTimer:	
   500                           ; 1 bytes @ 0x9
   501                           
   502  0079                     ??_verifySensor:	
   503                           ; 1 bytes @ 0x9
   504                           
   505                           
   506                           	psect	cstackBANK0
   507  0020                     __pcstackBANK0:	
   508                           ; 1 bytes @ 0x9
   509                           
   510  0020                     ??_Lcd_Set_Cursor:
   511  0020                     ??___fltol:	
   512                           ; 1 bytes @ 0x0
   513                           
   514  0020                     ?___awdiv:	
   515                           ; 1 bytes @ 0x0
   516                           
   517  0020                     Lcd_Write_String@i:	
   518                           ; 2 bytes @ 0x0
   519                           
   520  0020                     ___awdiv@divisor:	
   521                           ; 2 bytes @ 0x0
   522                           
   523                           
   524                           ; 2 bytes @ 0x0
   525  0020                     	ds	2
   526  0022                     Lcd_Set_Cursor@a:
   527  0022                     Lcd_Write_String@a:	
   528                           ; 1 bytes @ 0x2
   529                           
   530  0022                     ___awdiv@dividend:	
   531                           ; 1 bytes @ 0x2
   532                           
   533                           
   534                           ; 2 bytes @ 0x2
   535  0022                     	ds	1
   536  0023                     Lcd_Set_Cursor@z:
   537                           
   538                           ; 1 bytes @ 0x3
   539  0023                     	ds	1
   540  0024                     ??___awdiv:
   541  0024                     Lcd_Set_Cursor@y:	
   542                           ; 1 bytes @ 0x4
   543                           
   544                           
   545                           ; 1 bytes @ 0x4
   546  0024                     	ds	1
   547  0025                     Lcd_Set_Cursor@temp:
   548  0025                     ___awdiv@counter:	
   549                           ; 1 bytes @ 0x5
   550                           
   551                           
   552                           ; 1 bytes @ 0x5
   553  0025                     	ds	1
   554  0026                     ___awdiv@sign:
   555                           
   556                           ; 1 bytes @ 0x6
   557  0026                     	ds	1
   558  0027                     ___awdiv@quotient:
   559                           
   560                           ; 2 bytes @ 0x7
   561  0027                     	ds	2
   562  0029                     ?_changeTimerMaxConter:
   563  0029                     ?___xxtofl:	
   564                           ; 1 bytes @ 0x9
   565                           
   566  0029                     changeTimerMaxConter@mili_s:	
   567                           ; 4 bytes @ 0x9
   568                           
   569  0029                     ___xxtofl@val:	
   570                           ; 2 bytes @ 0x9
   571                           
   572                           
   573                           ; 4 bytes @ 0x9
   574  0029                     	ds	2
   575  002B                     ?_setupNewVolumeFlow:
   576  002B                     setupNewVolumeFlow@new_ml:	
   577                           ; 1 bytes @ 0xB
   578                           
   579                           
   580                           ; 2 bytes @ 0xB
   581  002B                     	ds	2
   582  002D                     ??___xxtofl:
   583  002D                     setupNewVolumeFlow@new_ms:	
   584                           ; 1 bytes @ 0xD
   585                           
   586                           
   587                           ; 2 bytes @ 0xD
   588  002D                     	ds	4
   589  0031                     ___xxtofl@sign:
   590                           
   591                           ; 1 bytes @ 0x11
   592  0031                     	ds	1
   593  0032                     ___xxtofl@exp:
   594                           
   595                           ; 1 bytes @ 0x12
   596  0032                     	ds	1
   597  0033                     ___xxtofl@arg:
   598                           
   599                           ; 4 bytes @ 0x13
   600  0033                     	ds	4
   601  0037                     ?_getADConverterValue:
   602                           
   603                           ; 2 bytes @ 0x17
   604  0037                     	ds	2
   605  0039                     ??_getADConverterValue:
   606                           
   607                           ; 1 bytes @ 0x19
   608  0039                     	ds	2
   609  003B                     getADConverterValue@leitura:
   610                           
   611                           ; 4 bytes @ 0x1B
   612  003B                     	ds	4
   613  003F                     ??_main:
   614                           
   615                           ; 1 bytes @ 0x1F
   616  003F                     	ds	3
   617                           
   618                           	psect	maintext
   619  0173                     __pmaintext:	
   620 ;;
   621 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   622 ;;
   623 ;; *************** function _main *****************
   624 ;; Defined at:
   625 ;;		line 279 in file "main.c"
   626 ;; Parameters:    Size  Location     Type
   627 ;;		None
   628 ;; Auto vars:     Size  Location     Type
   629 ;;		None
   630 ;; Return value:  Size  Location     Type
   631 ;;                  1    wreg      void 
   632 ;; Registers used:
   633 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   634 ;; Tracked objects:
   635 ;;		On entry : B00/0
   636 ;;		On exit  : 0/0
   637 ;;		Unchanged: 0/0
   638 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   639 ;;      Params:         0       0       0       0       0
   640 ;;      Locals:         0       0       0       0       0
   641 ;;      Temps:          0       3       0       0       0
   642 ;;      Totals:         0       3       0       0       0
   643 ;;Total ram usage:        3 bytes
   644 ;; Hardware stack levels required when called: 7
   645 ;; This function calls:
   646 ;;		_Lcd_Clear
   647 ;;		_Lcd_Init
   648 ;;		_Lcd_Set_Cursor
   649 ;;		_Lcd_Write_String
   650 ;;		_setupADC
   651 ;;		_setupExternalInterruption
   652 ;;		_setupTimer
   653 ;;		_setupWatchdogTimer
   654 ;;		_verifyMenu
   655 ;;		_verifySensor
   656 ;; This function is called by:
   657 ;;		Startup code after reset
   658 ;; This function uses a non-reentrant model
   659 ;;
   660                           
   661  0173                     _main:	
   662                           ;psect for function _main
   663                           
   664  0173                     l1652:	
   665                           ;incstack = 0
   666                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   667                           
   668                           
   669                           ;main.c: 282:     TRISA = 0b00000001;
   670  0173  3001               	movlw	1
   671  0174  1683               	bsf	3,5	;RP0=1, select bank1
   672  0175  1303               	bcf	3,6	;RP1=0, select bank1
   673  0176  0085               	movwf	5	;volatile
   674                           
   675                           ;main.c: 283:     TRISB = 0b00011101;
   676  0177  301D               	movlw	29
   677  0178  0086               	movwf	6	;volatile
   678  0179                     l1654:
   679                           
   680                           ;main.c: 284:     TRISC = 0;
   681  0179  0187               	clrf	7	;volatile
   682  017A                     l1656:
   683                           
   684                           ;main.c: 285:     PORTC = 0;
   685  017A  1283               	bcf	3,5	;RP0=0, select bank0
   686  017B  1303               	bcf	3,6	;RP1=0, select bank0
   687  017C  0187               	clrf	7	;volatile
   688  017D                     l1658:
   689                           
   690                           ;main.c: 286:     TRISD = 0b00000000;
   691  017D  1683               	bsf	3,5	;RP0=1, select bank1
   692  017E  1303               	bcf	3,6	;RP1=0, select bank1
   693  017F  0188               	clrf	8	;volatile
   694  0180                     l1660:
   695                           
   696                           ;main.c: 287:     OPTION_REGbits.nRBPU = 0;
   697  0180  1381               	bcf	1,7	;volatile
   698  0181                     l1662:
   699                           
   700                           ;main.c: 288:     PORTB = 0;
   701  0181  1283               	bcf	3,5	;RP0=0, select bank0
   702  0182  1303               	bcf	3,6	;RP1=0, select bank0
   703  0183  0186               	clrf	6	;volatile
   704  0184                     l1664:
   705                           
   706                           ;main.c: 290:     setupExternalInterruption();
   707  0184  120A  118A  2556  120A  118A  	fcall	_setupExternalInterruption
   708  0189                     l1666:
   709                           
   710                           ;main.c: 291:     setupWatchdogTimer();
   711  0189  120A  118A  255D  120A  118A  	fcall	_setupWatchdogTimer
   712  018E                     l1668:
   713                           
   714                           ;main.c: 292:     setupTimer();
   715  018E  120A  118A  24BB  120A  118A  	fcall	_setupTimer
   716                           
   717                           ;main.c: 293:     setupADC();
   718  0193  120A  118A  24D4  120A  118A  	fcall	_setupADC
   719  0198                     l1670:
   720                           
   721                           ;main.c: 294:     Lcd_Init();
   722  0198  120A  118A  2251  120A  118A  	fcall	_Lcd_Init
   723  019D                     l1672:
   724                           
   725                           ;main.c: 298:     {;main.c: 299:         verifySensor();
   726  019D  120A  118A  23CC  120A  118A  	fcall	_verifySensor
   727  01A2                     l1674:
   728                           
   729                           ;main.c: 300:         verifyMenu();
   730  01A2  120A  118A  2530  120A  118A  	fcall	_verifyMenu
   731  01A7                     l1676:
   732                           
   733                           ;main.c: 302:         Lcd_Clear();
   734  01A7  120A  118A  2523  120A  118A  	fcall	_Lcd_Clear
   735  01AC                     l1678:
   736                           
   737                           ;main.c: 303:         Lcd_Set_Cursor(1,1);
   738  01AC  01F7               	clrf	Lcd_Set_Cursor@b
   739  01AD  0AF7               	incf	Lcd_Set_Cursor@b,f
   740  01AE  3001               	movlw	1
   741  01AF  120A  118A  2308  120A  118A  	fcall	_Lcd_Set_Cursor
   742  01B4                     l1680:
   743                           
   744                           ;main.c: 305:         Lcd_Write_String("OLA MUNDO");
   745  01B4  300D               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   746  01B5  120A  118A  23F6  120A  118A  	fcall	_Lcd_Write_String
   747  01BA                     l1682:
   748                           
   749                           ;main.c: 306:         _delay((unsigned long)((1000)*(4000000/4000.0)));
   750  01BA  3006               	movlw	6
   751  01BB  1283               	bcf	3,5	;RP0=0, select bank0
   752  01BC  1303               	bcf	3,6	;RP1=0, select bank0
   753  01BD  00C1               	movwf	??_main+2
   754  01BE  3013               	movlw	19
   755  01BF  00C0               	movwf	??_main+1
   756  01C0  30AD               	movlw	173
   757  01C1  00BF               	movwf	??_main
   758  01C2                     u1317:
   759  01C2  0BBF               	decfsz	??_main,f
   760  01C3  29C2               	goto	u1317
   761  01C4  0BC0               	decfsz	??_main+1,f
   762  01C5  29C2               	goto	u1317
   763  01C6  0BC1               	decfsz	??_main+2,f
   764  01C7  29C2               	goto	u1317
   765  01C8                     l1684:
   766                           
   767                           ;main.c: 308:         Lcd_Set_Cursor(2,1);
   768  01C8  01F7               	clrf	Lcd_Set_Cursor@b
   769  01C9  0AF7               	incf	Lcd_Set_Cursor@b,f
   770  01CA  3002               	movlw	2
   771  01CB  120A  118A  2308  120A  118A  	fcall	_Lcd_Set_Cursor
   772  01D0                     l1686:
   773                           
   774                           ;main.c: 309:         Lcd_Write_String("MUNDO DOIDO");
   775  01D0  3001               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   776  01D1  120A  118A  23F6  120A  118A  	fcall	_Lcd_Write_String
   777  01D6                     l1688:
   778                           
   779                           ;main.c: 310:         _delay((unsigned long)((2000)*(4000000/4000.0)));
   780  01D6  300B               	movlw	11
   781  01D7  1283               	bcf	3,5	;RP0=0, select bank0
   782  01D8  1303               	bcf	3,6	;RP1=0, select bank0
   783  01D9  00C1               	movwf	??_main+2
   784  01DA  3026               	movlw	38
   785  01DB  00C0               	movwf	??_main+1
   786  01DC  305D               	movlw	93
   787  01DD  00BF               	movwf	??_main
   788  01DE                     u1327:
   789  01DE  0BBF               	decfsz	??_main,f
   790  01DF  29DE               	goto	u1327
   791  01E0  0BC0               	decfsz	??_main+1,f
   792  01E1  29DE               	goto	u1327
   793  01E2  0BC1               	decfsz	??_main+2,f
   794  01E3  29DE               	goto	u1327
   795  01E4  299D               	goto	l1672
   796  01E5  120A  118A  280C   	ljmp	start
   797  01E8                     __end_of_main:
   798                           
   799                           	psect	text1
   800  03CC                     __ptext1:	
   801 ;; *************** function _verifySensor *****************
   802 ;; Defined at:
   803 ;;		line 219 in file "main.c"
   804 ;; Parameters:    Size  Location     Type
   805 ;;		None
   806 ;; Auto vars:     Size  Location     Type
   807 ;;		None
   808 ;; Return value:  Size  Location     Type
   809 ;;                  1    wreg      void 
   810 ;; Registers used:
   811 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   812 ;; Tracked objects:
   813 ;;		On entry : 0/0
   814 ;;		On exit  : 0/0
   815 ;;		Unchanged: 0/0
   816 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   817 ;;      Params:         0       0       0       0       0
   818 ;;      Locals:         0       0       0       0       0
   819 ;;      Temps:          0       0       0       0       0
   820 ;;      Totals:         0       0       0       0       0
   821 ;;Total ram usage:        0 bytes
   822 ;; Hardware stack levels used: 1
   823 ;; Hardware stack levels required when called: 5
   824 ;; This function calls:
   825 ;;		_getADConverterValue
   826 ;;		_irrigar
   827 ;; This function is called by:
   828 ;;		_main
   829 ;; This function uses a non-reentrant model
   830 ;;
   831                           
   832  03CC                     _verifySensor:	
   833                           ;psect for function _verifySensor
   834                           
   835  03CC                     l1640:	
   836                           ;incstack = 0
   837                           ; Regs used in _verifySensor: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   838                           
   839                           
   840                           ;main.c: 221:     PORTC = getADConverterValue();
   841  03CC  120A  118A  22AE  120A  118A  	fcall	_getADConverterValue
   842  03D1  1283               	bcf	3,5	;RP0=0, select bank0
   843  03D2  1303               	bcf	3,6	;RP1=0, select bank0
   844  03D3  0837               	movf	?_getADConverterValue,w
   845  03D4  0087               	movwf	7	;volatile
   846  03D5                     l1642:
   847                           
   848                           ;main.c: 222:     if(getADConverterValue()<umidade_minima){
   849  03D5  120A  118A  22AE  120A  118A  	fcall	_getADConverterValue
   850  03DA  1283               	bcf	3,5	;RP0=0, select bank0
   851  03DB  1303               	bcf	3,6	;RP1=0, select bank0
   852  03DC  0838               	movf	?_getADConverterValue+1,w
   853  03DD  3A80               	xorlw	128
   854  03DE  00FF               	movwf	btemp+1
   855  03DF  3080               	movlw	128
   856  03E0  027F               	subwf	btemp+1,w
   857  03E1  1D03               	skipz
   858  03E2  2BE5               	goto	u1305
   859  03E3  300A               	movlw	10
   860  03E4  0237               	subwf	?_getADConverterValue,w
   861  03E5                     u1305:
   862  03E5  1803               	skipnc
   863  03E6  2BE8               	goto	u1301
   864  03E7  2BE9               	goto	u1300
   865  03E8                     u1301:
   866  03E8  2BF2               	goto	l150
   867  03E9                     u1300:
   868  03E9                     l1644:
   869                           
   870                           ;main.c: 223:         PORTBbits.RB7 = 1;
   871  03E9  1283               	bcf	3,5	;RP0=0, select bank0
   872  03EA  1303               	bcf	3,6	;RP1=0, select bank0
   873  03EB  1786               	bsf	6,7	;volatile
   874  03EC                     l1646:
   875                           
   876                           ;main.c: 224:         irrigar();
   877  03EC  120A  118A  253C  120A  118A  	fcall	_irrigar
   878                           
   879                           ;main.c: 225:     }
   880  03F1  2BF5               	goto	l152
   881  03F2                     l150:	
   882                           ;main.c: 226:     else{
   883                           
   884                           
   885                           ;main.c: 227:         PORTBbits.RB7 = 0;
   886  03F2  1283               	bcf	3,5	;RP0=0, select bank0
   887  03F3  1303               	bcf	3,6	;RP1=0, select bank0
   888  03F4  1386               	bcf	6,7	;volatile
   889  03F5                     l152:
   890  03F5  0008               	return
   891  03F6                     __end_of_verifySensor:
   892                           
   893                           	psect	text2
   894  053C                     __ptext2:	
   895 ;; *************** function _irrigar *****************
   896 ;; Defined at:
   897 ;;		line 159 in file "main.c"
   898 ;; Parameters:    Size  Location     Type
   899 ;;		None
   900 ;; Auto vars:     Size  Location     Type
   901 ;;		None
   902 ;; Return value:  Size  Location     Type
   903 ;;                  1    wreg      void 
   904 ;; Registers used:
   905 ;;		wreg, status,2
   906 ;; Tracked objects:
   907 ;;		On entry : 0/0
   908 ;;		On exit  : 0/0
   909 ;;		Unchanged: 0/0
   910 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   911 ;;      Params:         0       0       0       0       0
   912 ;;      Locals:         0       0       0       0       0
   913 ;;      Temps:          0       0       0       0       0
   914 ;;      Totals:         0       0       0       0       0
   915 ;;Total ram usage:        0 bytes
   916 ;; Hardware stack levels used: 1
   917 ;; Hardware stack levels required when called: 3
   918 ;; This function calls:
   919 ;;		Nothing
   920 ;; This function is called by:
   921 ;;		_verifySensor
   922 ;; This function uses a non-reentrant model
   923 ;;
   924                           
   925  053C                     _irrigar:	
   926                           ;psect for function _irrigar
   927                           
   928  053C                     l1322:	
   929                           ;incstack = 0
   930                           ; Regs used in _irrigar: [wreg+status,2]
   931                           
   932                           
   933                           ;main.c: 160:     irrigacao_ativa = 1;
   934  053C  3001               	movlw	1
   935  053D  00F9               	movwf	_irrigacao_ativa
   936  053E  3000               	movlw	0
   937  053F  00FA               	movwf	_irrigacao_ativa+1
   938  0540                     l1324:
   939                           
   940                           ;main.c: 161:     timer_counter = 0;
   941  0540  1283               	bcf	3,5	;RP0=0, select bank0
   942  0541  1303               	bcf	3,6	;RP1=0, select bank0
   943  0542  01C8               	clrf	_timer_counter
   944  0543  01C9               	clrf	_timer_counter+1
   945  0544                     l1326:
   946                           
   947                           ;main.c: 164:     T1CONbits.TMR1ON = 1;
   948  0544  1410               	bsf	16,0	;volatile
   949  0545                     l124:
   950  0545  0008               	return
   951  0546                     __end_of_irrigar:
   952                           
   953                           	psect	text3
   954  02AE                     __ptext3:	
   955 ;; *************** function _getADConverterValue *****************
   956 ;; Defined at:
   957 ;;		line 213 in file "main.c"
   958 ;; Parameters:    Size  Location     Type
   959 ;;		None
   960 ;; Auto vars:     Size  Location     Type
   961 ;;  leitura         4   27[BANK0 ] float 
   962 ;; Return value:  Size  Location     Type
   963 ;;                  2   23[BANK0 ] int 
   964 ;; Registers used:
   965 ;;		wreg, status,2, status,0, pclath, cstack
   966 ;; Tracked objects:
   967 ;;		On entry : 0/0
   968 ;;		On exit  : 0/0
   969 ;;		Unchanged: 0/0
   970 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   971 ;;      Params:         0       2       0       0       0
   972 ;;      Locals:         0       4       0       0       0
   973 ;;      Temps:          0       2       0       0       0
   974 ;;      Totals:         0       8       0       0       0
   975 ;;Total ram usage:        8 bytes
   976 ;; Hardware stack levels used: 1
   977 ;; Hardware stack levels required when called: 4
   978 ;; This function calls:
   979 ;;		___awdiv
   980 ;;		___fltol
   981 ;;		___wmul
   982 ;;		___xxtofl
   983 ;; This function is called by:
   984 ;;		_verifySensor
   985 ;; This function uses a non-reentrant model
   986 ;;
   987                           
   988  02AE                     _getADConverterValue:	
   989                           ;psect for function _getADConverterValue
   990                           
   991  02AE                     l1580:	
   992                           ;incstack = 0
   993                           ; Regs used in _getADConverterValue: [wreg+status,2+status,0+pclath+cstack]
   994                           
   995                           
   996                           ;main.c: 214:     ADCON0bits.GO = 1;
   997  02AE  1283               	bcf	3,5	;RP0=0, select bank0
   998  02AF  1303               	bcf	3,6	;RP1=0, select bank0
   999  02B0  151F               	bsf	31,2	;volatile
  1000  02B1                     l1582:
  1001                           
  1002                           ;main.c: 215:     _delay((unsigned long)((10)*(4000000/4000000.0)));
  1003  02B1  3002               	movlw	2
  1004  02B2  1283               	bcf	3,5	;RP0=0, select bank0
  1005  02B3  1303               	bcf	3,6	;RP1=0, select bank0
  1006  02B4  00B9               	movwf	??_getADConverterValue
  1007  02B5                     u1337:
  1008  02B5  0BB9               	decfsz	??_getADConverterValue,f
  1009  02B6  2AB5               	goto	u1337
  1010  02B7  0000               	nop
  1011  02B8                     l1584:
  1012                           
  1013                           ;main.c: 216:     float leitura = 100*ADRESH/256;
  1014  02B8  3064               	movlw	100
  1015  02B9  00F5               	movwf	___wmul@multiplicand
  1016  02BA  3000               	movlw	0
  1017  02BB  00F6               	movwf	___wmul@multiplicand+1
  1018  02BC  1283               	bcf	3,5	;RP0=0, select bank0
  1019  02BD  1303               	bcf	3,6	;RP1=0, select bank0
  1020  02BE  081E               	movf	30,w	;volatile
  1021  02BF  00B9               	movwf	??_getADConverterValue
  1022  02C0  01BA               	clrf	??_getADConverterValue+1
  1023  02C1  0839               	movf	??_getADConverterValue,w
  1024  02C2  00F3               	movwf	___wmul@multiplier
  1025  02C3  083A               	movf	??_getADConverterValue+1,w
  1026  02C4  00F4               	movwf	___wmul@multiplier+1
  1027  02C5  120A  118A  241F  120A  118A  	fcall	___wmul
  1028  02CA  0874               	movf	?___wmul+1,w
  1029  02CB  1283               	bcf	3,5	;RP0=0, select bank0
  1030  02CC  1303               	bcf	3,6	;RP1=0, select bank0
  1031  02CD  00A3               	movwf	___awdiv@dividend+1
  1032  02CE  0873               	movf	?___wmul,w
  1033  02CF  00A2               	movwf	___awdiv@dividend
  1034  02D0  3000               	movlw	0
  1035  02D1  00A0               	movwf	___awdiv@divisor
  1036  02D2  3001               	movlw	1
  1037  02D3  00A1               	movwf	___awdiv@divisor+1
  1038  02D4  120A  118A  21E8  120A  118A  	fcall	___awdiv
  1039  02D9  1283               	bcf	3,5	;RP0=0, select bank0
  1040  02DA  1303               	bcf	3,6	;RP1=0, select bank0
  1041  02DB  0820               	movf	?___awdiv,w
  1042  02DC  00A9               	movwf	___xxtofl@val
  1043  02DD  0821               	movf	?___awdiv+1,w
  1044  02DE  00AA               	movwf	___xxtofl@val+1
  1045  02DF  3000               	movlw	0
  1046  02E0  1BAA               	btfsc	___xxtofl@val+1,7
  1047  02E1  30FF               	movlw	255
  1048  02E2  00AB               	movwf	___xxtofl@val+2
  1049  02E3  00AC               	movwf	___xxtofl@val+3
  1050  02E4  3001               	movlw	1
  1051  02E5  120A  118A  203B  120A  118A  	fcall	___xxtofl
  1052  02EA  1283               	bcf	3,5	;RP0=0, select bank0
  1053  02EB  1303               	bcf	3,6	;RP1=0, select bank0
  1054  02EC  082C               	movf	?___xxtofl+3,w
  1055  02ED  00BE               	movwf	getADConverterValue@leitura+3
  1056  02EE  082B               	movf	?___xxtofl+2,w
  1057  02EF  00BD               	movwf	getADConverterValue@leitura+2
  1058  02F0  082A               	movf	?___xxtofl+1,w
  1059  02F1  00BC               	movwf	getADConverterValue@leitura+1
  1060  02F2  0829               	movf	?___xxtofl,w
  1061  02F3  00BB               	movwf	getADConverterValue@leitura
  1062  02F4                     l1586:
  1063                           
  1064                           ;main.c: 217:     return leitura;
  1065  02F4  083E               	movf	getADConverterValue@leitura+3,w
  1066  02F5  00F6               	movwf	___fltol@f1+3
  1067  02F6  083D               	movf	getADConverterValue@leitura+2,w
  1068  02F7  00F5               	movwf	___fltol@f1+2
  1069  02F8  083C               	movf	getADConverterValue@leitura+1,w
  1070  02F9  00F4               	movwf	___fltol@f1+1
  1071  02FA  083B               	movf	getADConverterValue@leitura,w
  1072  02FB  00F3               	movwf	___fltol@f1
  1073  02FC  120A  118A  20F7  120A  118A  	fcall	___fltol
  1074  0301  0874               	movf	?___fltol+1,w
  1075  0302  1283               	bcf	3,5	;RP0=0, select bank0
  1076  0303  1303               	bcf	3,6	;RP1=0, select bank0
  1077  0304  00B8               	movwf	?_getADConverterValue+1
  1078  0305  0873               	movf	?___fltol,w
  1079  0306  00B7               	movwf	?_getADConverterValue
  1080  0307                     l147:
  1081  0307  0008               	return
  1082  0308                     __end_of_getADConverterValue:
  1083                           
  1084                           	psect	text4
  1085  003B                     __ptext4:	
  1086 ;; *************** function ___xxtofl *****************
  1087 ;; Defined at:
  1088 ;;		line 10 in file "D:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\xxtofl.c"
  1089 ;; Parameters:    Size  Location     Type
  1090 ;;  sign            1    wreg     unsigned char 
  1091 ;;  val             4    9[BANK0 ] long 
  1092 ;; Auto vars:     Size  Location     Type
  1093 ;;  sign            1   17[BANK0 ] unsigned char 
  1094 ;;  arg             4   19[BANK0 ] unsigned long 
  1095 ;;  exp             1   18[BANK0 ] unsigned char 
  1096 ;; Return value:  Size  Location     Type
  1097 ;;                  4    9[BANK0 ] unsigned char 
  1098 ;; Registers used:
  1099 ;;		wreg, status,2, status,0
  1100 ;; Tracked objects:
  1101 ;;		On entry : 0/0
  1102 ;;		On exit  : 0/0
  1103 ;;		Unchanged: 0/0
  1104 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1105 ;;      Params:         0       4       0       0       0
  1106 ;;      Locals:         0       6       0       0       0
  1107 ;;      Temps:          0       4       0       0       0
  1108 ;;      Totals:         0      14       0       0       0
  1109 ;;Total ram usage:       14 bytes
  1110 ;; Hardware stack levels used: 1
  1111 ;; Hardware stack levels required when called: 3
  1112 ;; This function calls:
  1113 ;;		Nothing
  1114 ;; This function is called by:
  1115 ;;		_getADConverterValue
  1116 ;; This function uses a non-reentrant model
  1117 ;;
  1118                           
  1119  003B                     ___xxtofl:	
  1120                           ;psect for function ___xxtofl
  1121                           
  1122                           
  1123                           ;incstack = 0
  1124                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  1125                           ;___xxtofl@sign stored from wreg
  1126  003B  1283               	bcf	3,5	;RP0=0, select bank0
  1127  003C  1303               	bcf	3,6	;RP1=0, select bank0
  1128  003D  00B1               	movwf	___xxtofl@sign
  1129  003E                     l1244:
  1130  003E  0831               	movf	___xxtofl@sign,w
  1131  003F  1903               	btfsc	3,2
  1132  0040  2842               	goto	u841
  1133  0041  2843               	goto	u840
  1134  0042                     u841:
  1135  0042  2857               	goto	l1250
  1136  0043                     u840:
  1137  0043                     l1246:
  1138  0043  1FAC               	btfss	___xxtofl@val+3,7
  1139  0044  2846               	goto	u851
  1140  0045  2847               	goto	u850
  1141  0046                     u851:
  1142  0046  2857               	goto	l1250
  1143  0047                     u850:
  1144  0047                     l1248:
  1145  0047  0929               	comf	___xxtofl@val,w
  1146  0048  00B3               	movwf	___xxtofl@arg
  1147  0049  092A               	comf	___xxtofl@val+1,w
  1148  004A  00B4               	movwf	___xxtofl@arg+1
  1149  004B  092B               	comf	___xxtofl@val+2,w
  1150  004C  00B5               	movwf	___xxtofl@arg+2
  1151  004D  092C               	comf	___xxtofl@val+3,w
  1152  004E  00B6               	movwf	___xxtofl@arg+3
  1153  004F  0AB3               	incf	___xxtofl@arg,f
  1154  0050  1903               	skipnz
  1155  0051  0AB4               	incf	___xxtofl@arg+1,f
  1156  0052  1903               	skipnz
  1157  0053  0AB5               	incf	___xxtofl@arg+2,f
  1158  0054  1903               	skipnz
  1159  0055  0AB6               	incf	___xxtofl@arg+3,f
  1160  0056  285F               	goto	l685
  1161  0057                     l1250:
  1162  0057  082C               	movf	___xxtofl@val+3,w
  1163  0058  00B6               	movwf	___xxtofl@arg+3
  1164  0059  082B               	movf	___xxtofl@val+2,w
  1165  005A  00B5               	movwf	___xxtofl@arg+2
  1166  005B  082A               	movf	___xxtofl@val+1,w
  1167  005C  00B4               	movwf	___xxtofl@arg+1
  1168  005D  0829               	movf	___xxtofl@val,w
  1169  005E  00B3               	movwf	___xxtofl@arg
  1170  005F                     l685:
  1171  005F  082C               	movf	___xxtofl@val+3,w
  1172  0060  042B               	iorwf	___xxtofl@val+2,w
  1173  0061  042A               	iorwf	___xxtofl@val+1,w
  1174  0062  0429               	iorwf	___xxtofl@val,w
  1175  0063  1D03               	skipz
  1176  0064  2866               	goto	u861
  1177  0065  2867               	goto	u860
  1178  0066                     u861:
  1179  0066  2870               	goto	l1256
  1180  0067                     u860:
  1181  0067                     l1252:
  1182  0067  3000               	movlw	0
  1183  0068  00AC               	movwf	?___xxtofl+3
  1184  0069  3000               	movlw	0
  1185  006A  00AB               	movwf	?___xxtofl+2
  1186  006B  3000               	movlw	0
  1187  006C  00AA               	movwf	?___xxtofl+1
  1188  006D  3000               	movlw	0
  1189  006E  00A9               	movwf	?___xxtofl
  1190  006F  28F6               	goto	l687
  1191  0070                     l1256:
  1192  0070  3096               	movlw	150
  1193  0071  00AD               	movwf	??___xxtofl
  1194  0072  082D               	movf	??___xxtofl,w
  1195  0073  00B2               	movwf	___xxtofl@exp
  1196  0074  2882               	goto	l1260
  1197  0075                     l1258:
  1198  0075  3001               	movlw	1
  1199  0076  00AD               	movwf	??___xxtofl
  1200  0077  082D               	movf	??___xxtofl,w
  1201  0078  07B2               	addwf	___xxtofl@exp,f
  1202  0079  3001               	movlw	1
  1203  007A                     u875:
  1204  007A  1003               	clrc
  1205  007B  0CB6               	rrf	___xxtofl@arg+3,f
  1206  007C  0CB5               	rrf	___xxtofl@arg+2,f
  1207  007D  0CB4               	rrf	___xxtofl@arg+1,f
  1208  007E  0CB3               	rrf	___xxtofl@arg,f
  1209  007F  3EFF               	addlw	-1
  1210  0080  1D03               	skipz
  1211  0081  287A               	goto	u875
  1212  0082                     l1260:
  1213  0082  30FE               	movlw	254
  1214  0083  0536               	andwf	___xxtofl@arg+3,w
  1215  0084  1D03               	btfss	3,2
  1216  0085  2887               	goto	u881
  1217  0086  2888               	goto	u880
  1218  0087                     u881:
  1219  0087  2875               	goto	l1258
  1220  0088                     u880:
  1221  0088  28A4               	goto	l691
  1222  0089                     l1262:
  1223  0089  3001               	movlw	1
  1224  008A  00AD               	movwf	??___xxtofl
  1225  008B  082D               	movf	??___xxtofl,w
  1226  008C  07B2               	addwf	___xxtofl@exp,f
  1227  008D                     l1264:
  1228  008D  3001               	movlw	1
  1229  008E  07B3               	addwf	___xxtofl@arg,f
  1230  008F  3000               	movlw	0
  1231  0090  1803               	skipnc
  1232  0091  3001               	movlw	1
  1233  0092  07B4               	addwf	___xxtofl@arg+1,f
  1234  0093  3000               	movlw	0
  1235  0094  1803               	skipnc
  1236  0095  3001               	movlw	1
  1237  0096  07B5               	addwf	___xxtofl@arg+2,f
  1238  0097  3000               	movlw	0
  1239  0098  1803               	skipnc
  1240  0099  3001               	movlw	1
  1241  009A  07B6               	addwf	___xxtofl@arg+3,f
  1242  009B                     l1266:
  1243  009B  3001               	movlw	1
  1244  009C                     u895:
  1245  009C  1003               	clrc
  1246  009D  0CB6               	rrf	___xxtofl@arg+3,f
  1247  009E  0CB5               	rrf	___xxtofl@arg+2,f
  1248  009F  0CB4               	rrf	___xxtofl@arg+1,f
  1249  00A0  0CB3               	rrf	___xxtofl@arg,f
  1250  00A1  3EFF               	addlw	-1
  1251  00A2  1D03               	skipz
  1252  00A3  289C               	goto	u895
  1253  00A4                     l691:
  1254  00A4  30FF               	movlw	255
  1255  00A5  0536               	andwf	___xxtofl@arg+3,w
  1256  00A6  1D03               	btfss	3,2
  1257  00A7  28A9               	goto	u901
  1258  00A8  28AA               	goto	u900
  1259  00A9                     u901:
  1260  00A9  2889               	goto	l1262
  1261  00AA                     u900:
  1262  00AA  28B6               	goto	l1270
  1263  00AB                     l1268:
  1264  00AB  3001               	movlw	1
  1265  00AC  02B2               	subwf	___xxtofl@exp,f
  1266  00AD  3001               	movlw	1
  1267  00AE  00AD               	movwf	??___xxtofl
  1268  00AF                     u915:
  1269  00AF  1003               	clrc
  1270  00B0  0DB3               	rlf	___xxtofl@arg,f
  1271  00B1  0DB4               	rlf	___xxtofl@arg+1,f
  1272  00B2  0DB5               	rlf	___xxtofl@arg+2,f
  1273  00B3  0DB6               	rlf	___xxtofl@arg+3,f
  1274  00B4  0BAD               	decfsz	??___xxtofl,f
  1275  00B5  28AF               	goto	u915
  1276  00B6                     l1270:
  1277  00B6  1BB5               	btfsc	___xxtofl@arg+2,7
  1278  00B7  28B9               	goto	u921
  1279  00B8  28BA               	goto	u920
  1280  00B9                     u921:
  1281  00B9  28C0               	goto	l698
  1282  00BA                     u920:
  1283  00BA                     l1272:
  1284  00BA  3002               	movlw	2
  1285  00BB  0232               	subwf	___xxtofl@exp,w
  1286  00BC  1803               	skipnc
  1287  00BD  28BF               	goto	u931
  1288  00BE  28C0               	goto	u930
  1289  00BF                     u931:
  1290  00BF  28AB               	goto	l1268
  1291  00C0                     u930:
  1292  00C0                     l698:
  1293  00C0  1832               	btfsc	___xxtofl@exp,0
  1294  00C1  28C3               	goto	u941
  1295  00C2  28C4               	goto	u940
  1296  00C3                     u941:
  1297  00C3  28CC               	goto	l699
  1298  00C4                     u940:
  1299  00C4                     l1274:
  1300  00C4  30FF               	movlw	255
  1301  00C5  05B3               	andwf	___xxtofl@arg,f
  1302  00C6  30FF               	movlw	255
  1303  00C7  05B4               	andwf	___xxtofl@arg+1,f
  1304  00C8  307F               	movlw	127
  1305  00C9  05B5               	andwf	___xxtofl@arg+2,f
  1306  00CA  30FF               	movlw	255
  1307  00CB  05B6               	andwf	___xxtofl@arg+3,f
  1308  00CC                     l699:
  1309  00CC  1003               	clrc
  1310  00CD  0CB2               	rrf	___xxtofl@exp,f
  1311  00CE                     l1276:
  1312  00CE  0832               	movf	___xxtofl@exp,w
  1313  00CF  00AD               	movwf	??___xxtofl
  1314  00D0  01AE               	clrf	??___xxtofl+1
  1315  00D1  01AF               	clrf	??___xxtofl+2
  1316  00D2  01B0               	clrf	??___xxtofl+3
  1317  00D3  3018               	movlw	24
  1318  00D4                     u955:
  1319  00D4  1003               	clrc
  1320  00D5  0DAD               	rlf	??___xxtofl,f
  1321  00D6  0DAE               	rlf	??___xxtofl+1,f
  1322  00D7  0DAF               	rlf	??___xxtofl+2,f
  1323  00D8  0DB0               	rlf	??___xxtofl+3,f
  1324  00D9                     u950:
  1325  00D9  3EFF               	addlw	-1
  1326  00DA  1D03               	skipz
  1327  00DB  28D4               	goto	u955
  1328  00DC  082D               	movf	??___xxtofl,w
  1329  00DD  04B3               	iorwf	___xxtofl@arg,f
  1330  00DE  082E               	movf	??___xxtofl+1,w
  1331  00DF  04B4               	iorwf	___xxtofl@arg+1,f
  1332  00E0  082F               	movf	??___xxtofl+2,w
  1333  00E1  04B5               	iorwf	___xxtofl@arg+2,f
  1334  00E2  0830               	movf	??___xxtofl+3,w
  1335  00E3  04B6               	iorwf	___xxtofl@arg+3,f
  1336  00E4                     l1278:
  1337  00E4  0831               	movf	___xxtofl@sign,w
  1338  00E5  1903               	btfsc	3,2
  1339  00E6  28E8               	goto	u961
  1340  00E7  28E9               	goto	u960
  1341  00E8                     u961:
  1342  00E8  28EE               	goto	l1284
  1343  00E9                     u960:
  1344  00E9                     l1280:
  1345  00E9  1FAC               	btfss	___xxtofl@val+3,7
  1346  00EA  28EC               	goto	u971
  1347  00EB  28ED               	goto	u970
  1348  00EC                     u971:
  1349  00EC  28EE               	goto	l1284
  1350  00ED                     u970:
  1351  00ED                     l1282:
  1352  00ED  17B6               	bsf	___xxtofl@arg+3,7
  1353  00EE                     l1284:
  1354  00EE  0836               	movf	___xxtofl@arg+3,w
  1355  00EF  00AC               	movwf	?___xxtofl+3
  1356  00F0  0835               	movf	___xxtofl@arg+2,w
  1357  00F1  00AB               	movwf	?___xxtofl+2
  1358  00F2  0834               	movf	___xxtofl@arg+1,w
  1359  00F3  00AA               	movwf	?___xxtofl+1
  1360  00F4  0833               	movf	___xxtofl@arg,w
  1361  00F5  00A9               	movwf	?___xxtofl
  1362  00F6                     l687:
  1363  00F6  0008               	return
  1364  00F7                     __end_of___xxtofl:
  1365                           
  1366                           	psect	text5
  1367  00F7                     __ptext5:	
  1368 ;; *************** function ___fltol *****************
  1369 ;; Defined at:
  1370 ;;		line 43 in file "D:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\fltol.c"
  1371 ;; Parameters:    Size  Location     Type
  1372 ;;  f1              4    3[COMMON] unsigned char 
  1373 ;; Auto vars:     Size  Location     Type
  1374 ;;  exp1            1    8[COMMON] unsigned char 
  1375 ;;  sign1           1    7[COMMON] unsigned char 
  1376 ;; Return value:  Size  Location     Type
  1377 ;;                  4    3[COMMON] long 
  1378 ;; Registers used:
  1379 ;;		wreg, status,2, status,0
  1380 ;; Tracked objects:
  1381 ;;		On entry : 0/0
  1382 ;;		On exit  : 0/0
  1383 ;;		Unchanged: 0/0
  1384 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1385 ;;      Params:         4       0       0       0       0
  1386 ;;      Locals:         2       0       0       0       0
  1387 ;;      Temps:          0       5       0       0       0
  1388 ;;      Totals:         6       5       0       0       0
  1389 ;;Total ram usage:       11 bytes
  1390 ;; Hardware stack levels used: 1
  1391 ;; Hardware stack levels required when called: 3
  1392 ;; This function calls:
  1393 ;;		Nothing
  1394 ;; This function is called by:
  1395 ;;		_getADConverterValue
  1396 ;; This function uses a non-reentrant model
  1397 ;;
  1398                           
  1399  00F7                     ___fltol:	
  1400                           ;psect for function ___fltol
  1401                           
  1402  00F7                     l1208:	
  1403                           ;incstack = 0
  1404                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  1405                           
  1406  00F7  1003               	clrc
  1407  00F8  0D75               	rlf	___fltol@f1+2,w
  1408  00F9  0D76               	rlf	___fltol@f1+3,w
  1409  00FA  1283               	bcf	3,5	;RP0=0, select bank0
  1410  00FB  1303               	bcf	3,6	;RP1=0, select bank0
  1411  00FC  00A0               	movwf	??___fltol
  1412  00FD  0820               	movf	??___fltol,w
  1413  00FE  00F8               	movwf	___fltol@exp1
  1414  00FF  0878               	movf	___fltol@exp1,w
  1415  0100  1D03               	btfss	3,2
  1416  0101  2903               	goto	u741
  1417  0102  2904               	goto	u740
  1418  0103                     u741:
  1419  0103  290D               	goto	l1214
  1420  0104                     u740:
  1421  0104                     l1210:
  1422  0104  3000               	movlw	0
  1423  0105  00F6               	movwf	?___fltol+3
  1424  0106  3000               	movlw	0
  1425  0107  00F5               	movwf	?___fltol+2
  1426  0108  3000               	movlw	0
  1427  0109  00F4               	movwf	?___fltol+1
  1428  010A  3000               	movlw	0
  1429  010B  00F3               	movwf	?___fltol
  1430  010C  2972               	goto	l438
  1431  010D                     l1214:
  1432  010D  0873               	movf	___fltol@f1,w
  1433  010E  00A0               	movwf	??___fltol
  1434  010F  0874               	movf	___fltol@f1+1,w
  1435  0110  00A1               	movwf	??___fltol+1
  1436  0111  0875               	movf	___fltol@f1+2,w
  1437  0112  00A2               	movwf	??___fltol+2
  1438  0113  0876               	movf	___fltol@f1+3,w
  1439  0114  00A3               	movwf	??___fltol+3
  1440  0115  301F               	movlw	31
  1441  0116                     u755:
  1442  0116  1003               	clrc
  1443  0117  0CA3               	rrf	??___fltol+3,f
  1444  0118  0CA2               	rrf	??___fltol+2,f
  1445  0119  0CA1               	rrf	??___fltol+1,f
  1446  011A  0CA0               	rrf	??___fltol,f
  1447  011B                     u750:
  1448  011B  3EFF               	addlw	-1
  1449  011C  1D03               	skipz
  1450  011D  2916               	goto	u755
  1451  011E  0820               	movf	??___fltol,w
  1452  011F  00A4               	movwf	??___fltol+4
  1453  0120  0824               	movf	??___fltol+4,w
  1454  0121  00F7               	movwf	___fltol@sign1
  1455  0122                     l1216:
  1456  0122  17F5               	bsf	___fltol@f1+2,7
  1457  0123                     l1218:
  1458  0123  30FF               	movlw	255
  1459  0124  05F3               	andwf	___fltol@f1,f
  1460  0125  30FF               	movlw	255
  1461  0126  05F4               	andwf	___fltol@f1+1,f
  1462  0127  30FF               	movlw	255
  1463  0128  05F5               	andwf	___fltol@f1+2,f
  1464  0129  3000               	movlw	0
  1465  012A  05F6               	andwf	___fltol@f1+3,f
  1466  012B                     l1220:
  1467  012B  3096               	movlw	150
  1468  012C  02F8               	subwf	___fltol@exp1,f
  1469  012D                     l1222:
  1470  012D  1FF8               	btfss	___fltol@exp1,7
  1471  012E  2930               	goto	u761
  1472  012F  2931               	goto	u760
  1473  0130                     u761:
  1474  0130  294B               	goto	l1232
  1475  0131                     u760:
  1476  0131                     l1224:
  1477  0131  0878               	movf	___fltol@exp1,w
  1478  0132  3A80               	xorlw	128
  1479  0133  3E97               	addlw	151
  1480  0134  1803               	skipnc
  1481  0135  2937               	goto	u771
  1482  0136  2938               	goto	u770
  1483  0137                     u771:
  1484  0137  2939               	goto	l1230
  1485  0138                     u770:
  1486  0138  2904               	goto	l1210
  1487  0139                     l1230:
  1488  0139  3001               	movlw	1
  1489  013A                     u785:
  1490  013A  1003               	clrc
  1491  013B  0CF6               	rrf	___fltol@f1+3,f
  1492  013C  0CF5               	rrf	___fltol@f1+2,f
  1493  013D  0CF4               	rrf	___fltol@f1+1,f
  1494  013E  0CF3               	rrf	___fltol@f1,f
  1495  013F  3EFF               	addlw	-1
  1496  0140  1D03               	skipz
  1497  0141  293A               	goto	u785
  1498  0142  3001               	movlw	1
  1499  0143  00A0               	movwf	??___fltol
  1500  0144  0820               	movf	??___fltol,w
  1501  0145  07F8               	addwf	___fltol@exp1,f
  1502  0146  1D03               	btfss	3,2
  1503  0147  2949               	goto	u791
  1504  0148  294A               	goto	u790
  1505  0149                     u791:
  1506  0149  2939               	goto	l1230
  1507  014A                     u790:
  1508  014A  2962               	goto	l1240
  1509  014B                     l1232:
  1510  014B  3020               	movlw	32
  1511  014C  0278               	subwf	___fltol@exp1,w
  1512  014D  1C03               	skipc
  1513  014E  2950               	goto	u801
  1514  014F  2951               	goto	u800
  1515  0150                     u801:
  1516  0150  295D               	goto	l445
  1517  0151                     u800:
  1518  0151  2904               	goto	l1210
  1519  0152                     l1238:
  1520  0152  3001               	movlw	1
  1521  0153  00A0               	movwf	??___fltol
  1522  0154                     u815:
  1523  0154  1003               	clrc
  1524  0155  0DF3               	rlf	___fltol@f1,f
  1525  0156  0DF4               	rlf	___fltol@f1+1,f
  1526  0157  0DF5               	rlf	___fltol@f1+2,f
  1527  0158  0DF6               	rlf	___fltol@f1+3,f
  1528  0159  0BA0               	decfsz	??___fltol,f
  1529  015A  2954               	goto	u815
  1530  015B  3001               	movlw	1
  1531  015C  02F8               	subwf	___fltol@exp1,f
  1532  015D                     l445:
  1533  015D  0878               	movf	___fltol@exp1,w
  1534  015E  1D03               	btfss	3,2
  1535  015F  2961               	goto	u821
  1536  0160  2962               	goto	u820
  1537  0161                     u821:
  1538  0161  2952               	goto	l1238
  1539  0162                     u820:
  1540  0162                     l1240:
  1541  0162  0877               	movf	___fltol@sign1,w
  1542  0163  1903               	btfsc	3,2
  1543  0164  2966               	goto	u831
  1544  0165  2967               	goto	u830
  1545  0166                     u831:
  1546  0166  2972               	goto	l448
  1547  0167                     u830:
  1548  0167                     l1242:
  1549  0167  09F3               	comf	___fltol@f1,f
  1550  0168  09F4               	comf	___fltol@f1+1,f
  1551  0169  09F5               	comf	___fltol@f1+2,f
  1552  016A  09F6               	comf	___fltol@f1+3,f
  1553  016B  0AF3               	incf	___fltol@f1,f
  1554  016C  1903               	skipnz
  1555  016D  0AF4               	incf	___fltol@f1+1,f
  1556  016E  1903               	skipnz
  1557  016F  0AF5               	incf	___fltol@f1+2,f
  1558  0170  1903               	skipnz
  1559  0171  0AF6               	incf	___fltol@f1+3,f
  1560  0172                     l448:
  1561  0172                     l438:
  1562  0172  0008               	return
  1563  0173                     __end_of___fltol:
  1564                           
  1565                           	psect	text6
  1566  0530                     __ptext6:	
  1567 ;; *************** function _verifyMenu *****************
  1568 ;; Defined at:
  1569 ;;		line 203 in file "main.c"
  1570 ;; Parameters:    Size  Location     Type
  1571 ;;		None
  1572 ;; Auto vars:     Size  Location     Type
  1573 ;;		None
  1574 ;; Return value:  Size  Location     Type
  1575 ;;                  1    wreg      void 
  1576 ;; Registers used:
  1577 ;;		status,2, status,0, pclath, cstack
  1578 ;; Tracked objects:
  1579 ;;		On entry : 0/0
  1580 ;;		On exit  : 0/0
  1581 ;;		Unchanged: 0/0
  1582 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1583 ;;      Params:         0       0       0       0       0
  1584 ;;      Locals:         0       0       0       0       0
  1585 ;;      Temps:          0       0       0       0       0
  1586 ;;      Totals:         0       0       0       0       0
  1587 ;;Total ram usage:        0 bytes
  1588 ;; Hardware stack levels used: 1
  1589 ;; Hardware stack levels required when called: 4
  1590 ;; This function calls:
  1591 ;;		_handleMenu
  1592 ;; This function is called by:
  1593 ;;		_main
  1594 ;; This function uses a non-reentrant model
  1595 ;;
  1596                           
  1597  0530                     _verifyMenu:	
  1598                           ;psect for function _verifyMenu
  1599                           
  1600  0530                     l1060:	
  1601                           ;incstack = 0
  1602                           ; Regs used in _verifyMenu: [status,2+status,0+pclath+cstack]
  1603                           
  1604                           
  1605                           ;main.c: 205:     if (PORTBbits.RB2)
  1606  0530  1283               	bcf	3,5	;RP0=0, select bank0
  1607  0531  1303               	bcf	3,6	;RP1=0, select bank0
  1608  0532  1D06               	btfss	6,2	;volatile
  1609  0533  2D35               	goto	u541
  1610  0534  2D36               	goto	u540
  1611  0535                     u541:
  1612  0535  2D3B               	goto	l144
  1613  0536                     u540:
  1614  0536                     l1062:
  1615                           
  1616                           ;main.c: 206:     {;main.c: 207:         handleMenu();
  1617  0536  120A  118A  255C  120A  118A  	fcall	_handleMenu
  1618  053B                     l144:
  1619  053B  0008               	return
  1620  053C                     __end_of_verifyMenu:
  1621                           
  1622                           	psect	text7
  1623  055C                     __ptext7:	
  1624 ;; *************** function _handleMenu *****************
  1625 ;; Defined at:
  1626 ;;		line 199 in file "main.c"
  1627 ;; Parameters:    Size  Location     Type
  1628 ;;		None
  1629 ;; Auto vars:     Size  Location     Type
  1630 ;;		None
  1631 ;; Return value:  Size  Location     Type
  1632 ;;                  1    wreg      void 
  1633 ;; Registers used:
  1634 ;;		None
  1635 ;; Tracked objects:
  1636 ;;		On entry : 0/0
  1637 ;;		On exit  : 0/0
  1638 ;;		Unchanged: 0/0
  1639 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1640 ;;      Params:         0       0       0       0       0
  1641 ;;      Locals:         0       0       0       0       0
  1642 ;;      Temps:          0       0       0       0       0
  1643 ;;      Totals:         0       0       0       0       0
  1644 ;;Total ram usage:        0 bytes
  1645 ;; Hardware stack levels used: 1
  1646 ;; Hardware stack levels required when called: 3
  1647 ;; This function calls:
  1648 ;;		Nothing
  1649 ;; This function is called by:
  1650 ;;		_verifyMenu
  1651 ;; This function uses a non-reentrant model
  1652 ;;
  1653                           
  1654  055C                     _handleMenu:	
  1655                           ;psect for function _handleMenu
  1656                           
  1657  055C                     l950:	
  1658                           ;incstack = 0
  1659                           ; Regs used in _handleMenu: []
  1660                           
  1661  055C                     l140:	
  1662                           ;main.c: 201:     return;
  1663                           
  1664  055C  0008               	return
  1665  055D                     __end_of_handleMenu:
  1666                           
  1667                           	psect	text8
  1668  055D                     __ptext8:	
  1669 ;; *************** function _setupWatchdogTimer *****************
  1670 ;; Defined at:
  1671 ;;		line 232 in file "main.c"
  1672 ;; Parameters:    Size  Location     Type
  1673 ;;		None
  1674 ;; Auto vars:     Size  Location     Type
  1675 ;;		None
  1676 ;; Return value:  Size  Location     Type
  1677 ;;                  1    wreg      void 
  1678 ;; Registers used:
  1679 ;;		None
  1680 ;; Tracked objects:
  1681 ;;		On entry : 0/0
  1682 ;;		On exit  : 0/0
  1683 ;;		Unchanged: 0/0
  1684 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1685 ;;      Params:         0       0       0       0       0
  1686 ;;      Locals:         0       0       0       0       0
  1687 ;;      Temps:          0       0       0       0       0
  1688 ;;      Totals:         0       0       0       0       0
  1689 ;;Total ram usage:        0 bytes
  1690 ;; Hardware stack levels used: 1
  1691 ;; Hardware stack levels required when called: 3
  1692 ;; This function calls:
  1693 ;;		Nothing
  1694 ;; This function is called by:
  1695 ;;		_main
  1696 ;; This function uses a non-reentrant model
  1697 ;;
  1698                           
  1699  055D                     _setupWatchdogTimer:	
  1700                           ;psect for function _setupWatchdogTimer
  1701                           
  1702  055D                     l1074:	
  1703                           ;incstack = 0
  1704                           ; Regs used in _setupWatchdogTimer: []
  1705                           
  1706  055D                     l155:	
  1707                           ;main.c: 239:     return;
  1708                           
  1709  055D  0008               	return
  1710  055E                     __end_of_setupWatchdogTimer:
  1711                           
  1712                           	psect	text9
  1713  04BB                     __ptext9:	
  1714 ;; *************** function _setupTimer *****************
  1715 ;; Defined at:
  1716 ;;		line 97 in file "main.c"
  1717 ;; Parameters:    Size  Location     Type
  1718 ;;		None
  1719 ;; Auto vars:     Size  Location     Type
  1720 ;;		None
  1721 ;; Return value:  Size  Location     Type
  1722 ;;                  1    wreg      void 
  1723 ;; Registers used:
  1724 ;;		wreg, status,2, status,0, pclath, cstack
  1725 ;; Tracked objects:
  1726 ;;		On entry : 0/0
  1727 ;;		On exit  : 0/0
  1728 ;;		Unchanged: 0/0
  1729 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1730 ;;      Params:         0       0       0       0       0
  1731 ;;      Locals:         0       0       0       0       0
  1732 ;;      Temps:          0       0       0       0       0
  1733 ;;      Totals:         0       0       0       0       0
  1734 ;;Total ram usage:        0 bytes
  1735 ;; Hardware stack levels used: 1
  1736 ;; Hardware stack levels required when called: 6
  1737 ;; This function calls:
  1738 ;;		_setupNewVolumeFlow
  1739 ;; This function is called by:
  1740 ;;		_main
  1741 ;; This function uses a non-reentrant model
  1742 ;;
  1743                           
  1744  04BB                     _setupTimer:	
  1745                           ;psect for function _setupTimer
  1746                           
  1747  04BB                     l1630:	
  1748                           ;incstack = 0
  1749                           ; Regs used in _setupTimer: [wreg+status,2+status,0+pclath+cstack]
  1750                           
  1751                           
  1752                           ;main.c: 100:     INTCONbits.GIE = 1;
  1753  04BB  178B               	bsf	11,7	;volatile
  1754                           
  1755                           ;main.c: 101:     INTCONbits.PEIE = 1;
  1756  04BC  170B               	bsf	11,6	;volatile
  1757                           
  1758                           ;main.c: 102:     PIE1bits.TMR1IE = 1;
  1759  04BD  1683               	bsf	3,5	;RP0=1, select bank1
  1760  04BE  1303               	bcf	3,6	;RP1=0, select bank1
  1761  04BF  140C               	bsf	12,0	;volatile
  1762                           
  1763                           ;main.c: 105:     T1CONbits.TMR1CS = 0;
  1764  04C0  1283               	bcf	3,5	;RP0=0, select bank0
  1765  04C1  1303               	bcf	3,6	;RP1=0, select bank0
  1766  04C2  1090               	bcf	16,1	;volatile
  1767                           
  1768                           ;main.c: 108:     T1CONbits.T1CKPS0 = 1;
  1769  04C3  1610               	bsf	16,4	;volatile
  1770                           
  1771                           ;main.c: 109:     T1CONbits.T1CKPS1 = 1;
  1772  04C4  1690               	bsf	16,5	;volatile
  1773  04C5                     l1632:
  1774                           
  1775                           ;main.c: 117:     TMR1H = 0x0B;
  1776  04C5  300B               	movlw	11
  1777  04C6  008F               	movwf	15	;volatile
  1778                           
  1779                           ;main.c: 118:     TMR1L = 0xDC;
  1780  04C7  30DC               	movlw	220
  1781  04C8  008E               	movwf	14	;volatile
  1782  04C9                     l1634:
  1783                           
  1784                           ;main.c: 120:     T1CONbits.TMR1ON = 0;
  1785  04C9  1010               	bcf	16,0	;volatile
  1786  04CA                     l1636:
  1787                           
  1788                           ;main.c: 124:     setupNewVolumeFlow(200);
  1789  04CA  30C8               	movlw	200
  1790  04CB  00AB               	movwf	setupNewVolumeFlow@new_ml
  1791  04CC  3000               	movlw	0
  1792  04CD  00AC               	movwf	setupNewVolumeFlow@new_ml+1
  1793  04CE  120A  118A  2466  120A  118A  	fcall	_setupNewVolumeFlow
  1794  04D3                     l114:
  1795  04D3  0008               	return
  1796  04D4                     __end_of_setupTimer:
  1797                           
  1798                           	psect	text10
  1799  0466                     __ptext10:	
  1800 ;; *************** function _setupNewVolumeFlow *****************
  1801 ;; Defined at:
  1802 ;;		line 88 in file "main.c"
  1803 ;; Parameters:    Size  Location     Type
  1804 ;;  new_ml          2   11[BANK0 ] int 
  1805 ;; Auto vars:     Size  Location     Type
  1806 ;;  new_ms          2   13[BANK0 ] int 
  1807 ;; Return value:  Size  Location     Type
  1808 ;;                  1    wreg      void 
  1809 ;; Registers used:
  1810 ;;		wreg, status,2, status,0, pclath, cstack
  1811 ;; Tracked objects:
  1812 ;;		On entry : 0/0
  1813 ;;		On exit  : 0/0
  1814 ;;		Unchanged: 0/0
  1815 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1816 ;;      Params:         0       2       0       0       0
  1817 ;;      Locals:         0       2       0       0       0
  1818 ;;      Temps:          0       0       0       0       0
  1819 ;;      Totals:         0       4       0       0       0
  1820 ;;Total ram usage:        4 bytes
  1821 ;; Hardware stack levels used: 1
  1822 ;; Hardware stack levels required when called: 5
  1823 ;; This function calls:
  1824 ;;		___wmul
  1825 ;;		_changeTimerMaxConter
  1826 ;; This function is called by:
  1827 ;;		_setupTimer
  1828 ;; This function uses a non-reentrant model
  1829 ;;
  1830                           
  1831  0466                     _setupNewVolumeFlow:	
  1832                           ;psect for function _setupNewVolumeFlow
  1833                           
  1834  0466                     l1576:	
  1835                           ;incstack = 0
  1836                           ; Regs used in _setupNewVolumeFlow: [wreg+status,2+status,0+pclath+cstack]
  1837                           
  1838                           
  1839                           ;main.c: 88: void setupNewVolumeFlow(int new_ml);main.c: 89: {;main.c: 91:     int new_m
      +                          s = new_ml*MLxMS;
  1840  0466  1283               	bcf	3,5	;RP0=0, select bank0
  1841  0467  1303               	bcf	3,6	;RP1=0, select bank0
  1842  0468  082C               	movf	setupNewVolumeFlow@new_ml+1,w
  1843  0469  00F4               	movwf	___wmul@multiplier+1
  1844  046A  082B               	movf	setupNewVolumeFlow@new_ml,w
  1845  046B  00F3               	movwf	___wmul@multiplier
  1846  046C  3019               	movlw	25
  1847  046D  00F5               	movwf	___wmul@multiplicand
  1848  046E  3000               	movlw	0
  1849  046F  00F6               	movwf	___wmul@multiplicand+1
  1850  0470  120A  118A  241F  120A  118A  	fcall	___wmul
  1851  0475  0874               	movf	?___wmul+1,w
  1852  0476  1283               	bcf	3,5	;RP0=0, select bank0
  1853  0477  1303               	bcf	3,6	;RP1=0, select bank0
  1854  0478  00AE               	movwf	setupNewVolumeFlow@new_ms+1
  1855  0479  0873               	movf	?___wmul,w
  1856  047A  00AD               	movwf	setupNewVolumeFlow@new_ms
  1857                           
  1858                           ;main.c: 93:     changeTimerMaxConter(new_ms);
  1859  047B  082E               	movf	setupNewVolumeFlow@new_ms+1,w
  1860  047C  00AA               	movwf	changeTimerMaxConter@mili_s+1
  1861  047D  082D               	movf	setupNewVolumeFlow@new_ms,w
  1862  047E  00A9               	movwf	changeTimerMaxConter@mili_s
  1863  047F  120A  118A  24EB  120A  118A  	fcall	_changeTimerMaxConter
  1864  0484                     l111:
  1865  0484  0008               	return
  1866  0485                     __end_of_setupNewVolumeFlow:
  1867                           
  1868                           	psect	text11
  1869  04EB                     __ptext11:	
  1870 ;; *************** function _changeTimerMaxConter *****************
  1871 ;; Defined at:
  1872 ;;		line 79 in file "main.c"
  1873 ;; Parameters:    Size  Location     Type
  1874 ;;  mili_s          2    9[BANK0 ] int 
  1875 ;; Auto vars:     Size  Location     Type
  1876 ;;		None
  1877 ;; Return value:  Size  Location     Type
  1878 ;;                  1    wreg      void 
  1879 ;; Registers used:
  1880 ;;		wreg, status,2, status,0, pclath, cstack
  1881 ;; Tracked objects:
  1882 ;;		On entry : 0/0
  1883 ;;		On exit  : 0/0
  1884 ;;		Unchanged: 0/0
  1885 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1886 ;;      Params:         0       2       0       0       0
  1887 ;;      Locals:         0       0       0       0       0
  1888 ;;      Temps:          0       0       0       0       0
  1889 ;;      Totals:         0       2       0       0       0
  1890 ;;Total ram usage:        2 bytes
  1891 ;; Hardware stack levels used: 1
  1892 ;; Hardware stack levels required when called: 4
  1893 ;; This function calls:
  1894 ;;		___awdiv
  1895 ;; This function is called by:
  1896 ;;		_setupNewVolumeFlow
  1897 ;; This function uses a non-reentrant model
  1898 ;;
  1899                           
  1900  04EB                     _changeTimerMaxConter:	
  1901                           ;psect for function _changeTimerMaxConter
  1902                           
  1903  04EB                     l1542:	
  1904                           ;incstack = 0
  1905                           ; Regs used in _changeTimerMaxConter: [wreg+status,2+status,0+pclath+cstack]
  1906                           
  1907                           
  1908                           ;main.c: 81:     timer_counter_max = (mili_s/500);
  1909  04EB  30F4               	movlw	244
  1910  04EC  1283               	bcf	3,5	;RP0=0, select bank0
  1911  04ED  1303               	bcf	3,6	;RP1=0, select bank0
  1912  04EE  00A0               	movwf	___awdiv@divisor
  1913  04EF  3001               	movlw	1
  1914  04F0  00A1               	movwf	___awdiv@divisor+1
  1915  04F1  082A               	movf	changeTimerMaxConter@mili_s+1,w
  1916  04F2  00A3               	movwf	___awdiv@dividend+1
  1917  04F3  0829               	movf	changeTimerMaxConter@mili_s,w
  1918  04F4  00A2               	movwf	___awdiv@dividend
  1919  04F5  120A  118A  21E8  120A  118A  	fcall	___awdiv
  1920  04FA  1283               	bcf	3,5	;RP0=0, select bank0
  1921  04FB  1303               	bcf	3,6	;RP1=0, select bank0
  1922  04FC  0821               	movf	?___awdiv+1,w
  1923  04FD  00C7               	movwf	_timer_counter_max+1
  1924  04FE  0820               	movf	?___awdiv,w
  1925  04FF  00C6               	movwf	_timer_counter_max
  1926  0500                     l108:
  1927  0500  0008               	return
  1928  0501                     __end_of_changeTimerMaxConter:
  1929                           
  1930                           	psect	text12
  1931  01E8                     __ptext12:	
  1932 ;; *************** function ___awdiv *****************
  1933 ;; Defined at:
  1934 ;;		line 5 in file "D:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\awdiv.c"
  1935 ;; Parameters:    Size  Location     Type
  1936 ;;  divisor         2    0[BANK0 ] int 
  1937 ;;  dividend        2    2[BANK0 ] int 
  1938 ;; Auto vars:     Size  Location     Type
  1939 ;;  quotient        2    7[BANK0 ] int 
  1940 ;;  sign            1    6[BANK0 ] unsigned char 
  1941 ;;  counter         1    5[BANK0 ] unsigned char 
  1942 ;; Return value:  Size  Location     Type
  1943 ;;                  2    0[BANK0 ] int 
  1944 ;; Registers used:
  1945 ;;		wreg, status,2, status,0
  1946 ;; Tracked objects:
  1947 ;;		On entry : 0/0
  1948 ;;		On exit  : 0/0
  1949 ;;		Unchanged: 0/0
  1950 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1951 ;;      Params:         0       4       0       0       0
  1952 ;;      Locals:         0       4       0       0       0
  1953 ;;      Temps:          0       1       0       0       0
  1954 ;;      Totals:         0       9       0       0       0
  1955 ;;Total ram usage:        9 bytes
  1956 ;; Hardware stack levels used: 1
  1957 ;; Hardware stack levels required when called: 3
  1958 ;; This function calls:
  1959 ;;		Nothing
  1960 ;; This function is called by:
  1961 ;;		_changeTimerMaxConter
  1962 ;;		_getADConverterValue
  1963 ;; This function uses a non-reentrant model
  1964 ;;
  1965                           
  1966  01E8                     ___awdiv:	
  1967                           ;psect for function ___awdiv
  1968                           
  1969  01E8                     l1488:	
  1970                           ;incstack = 0
  1971                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1972                           
  1973  01E8  1283               	bcf	3,5	;RP0=0, select bank0
  1974  01E9  1303               	bcf	3,6	;RP1=0, select bank0
  1975  01EA  01A6               	clrf	___awdiv@sign
  1976  01EB                     l1490:
  1977  01EB  1FA1               	btfss	___awdiv@divisor+1,7
  1978  01EC  29EE               	goto	u1101
  1979  01ED  29EF               	goto	u1100
  1980  01EE                     u1101:
  1981  01EE  29F6               	goto	l1496
  1982  01EF                     u1100:
  1983  01EF                     l1492:
  1984  01EF  09A0               	comf	___awdiv@divisor,f
  1985  01F0  09A1               	comf	___awdiv@divisor+1,f
  1986  01F1  0AA0               	incf	___awdiv@divisor,f
  1987  01F2  1903               	skipnz
  1988  01F3  0AA1               	incf	___awdiv@divisor+1,f
  1989  01F4                     l1494:
  1990  01F4  01A6               	clrf	___awdiv@sign
  1991  01F5  0AA6               	incf	___awdiv@sign,f
  1992  01F6                     l1496:
  1993  01F6  1FA3               	btfss	___awdiv@dividend+1,7
  1994  01F7  29F9               	goto	u1111
  1995  01F8  29FA               	goto	u1110
  1996  01F9                     u1111:
  1997  01F9  2A03               	goto	l1502
  1998  01FA                     u1110:
  1999  01FA                     l1498:
  2000  01FA  09A2               	comf	___awdiv@dividend,f
  2001  01FB  09A3               	comf	___awdiv@dividend+1,f
  2002  01FC  0AA2               	incf	___awdiv@dividend,f
  2003  01FD  1903               	skipnz
  2004  01FE  0AA3               	incf	___awdiv@dividend+1,f
  2005  01FF                     l1500:
  2006  01FF  3001               	movlw	1
  2007  0200  00A4               	movwf	??___awdiv
  2008  0201  0824               	movf	??___awdiv,w
  2009  0202  06A6               	xorwf	___awdiv@sign,f
  2010  0203                     l1502:
  2011  0203  01A7               	clrf	___awdiv@quotient
  2012  0204  01A8               	clrf	___awdiv@quotient+1
  2013  0205                     l1504:
  2014  0205  0820               	movf	___awdiv@divisor,w
  2015  0206  0421               	iorwf	___awdiv@divisor+1,w
  2016  0207  1903               	btfsc	3,2
  2017  0208  2A0A               	goto	u1121
  2018  0209  2A0B               	goto	u1120
  2019  020A                     u1121:
  2020  020A  2A42               	goto	l1524
  2021  020B                     u1120:
  2022  020B                     l1506:
  2023  020B  01A5               	clrf	___awdiv@counter
  2024  020C  0AA5               	incf	___awdiv@counter,f
  2025  020D  2A19               	goto	l1512
  2026  020E                     l1508:
  2027  020E  3001               	movlw	1
  2028  020F                     u1135:
  2029  020F  1003               	clrc
  2030  0210  0DA0               	rlf	___awdiv@divisor,f
  2031  0211  0DA1               	rlf	___awdiv@divisor+1,f
  2032  0212  3EFF               	addlw	-1
  2033  0213  1D03               	skipz
  2034  0214  2A0F               	goto	u1135
  2035  0215                     l1510:
  2036  0215  3001               	movlw	1
  2037  0216  00A4               	movwf	??___awdiv
  2038  0217  0824               	movf	??___awdiv,w
  2039  0218  07A5               	addwf	___awdiv@counter,f
  2040  0219                     l1512:
  2041  0219  1FA1               	btfss	___awdiv@divisor+1,7
  2042  021A  2A1C               	goto	u1141
  2043  021B  2A1D               	goto	u1140
  2044  021C                     u1141:
  2045  021C  2A0E               	goto	l1508
  2046  021D                     u1140:
  2047  021D                     l1514:
  2048  021D  3001               	movlw	1
  2049  021E                     u1155:
  2050  021E  1003               	clrc
  2051  021F  0DA7               	rlf	___awdiv@quotient,f
  2052  0220  0DA8               	rlf	___awdiv@quotient+1,f
  2053  0221  3EFF               	addlw	-1
  2054  0222  1D03               	skipz
  2055  0223  2A1E               	goto	u1155
  2056  0224  0821               	movf	___awdiv@divisor+1,w
  2057  0225  0223               	subwf	___awdiv@dividend+1,w
  2058  0226  1D03               	skipz
  2059  0227  2A2A               	goto	u1165
  2060  0228  0820               	movf	___awdiv@divisor,w
  2061  0229  0222               	subwf	___awdiv@dividend,w
  2062  022A                     u1165:
  2063  022A  1C03               	skipc
  2064  022B  2A2D               	goto	u1161
  2065  022C  2A2E               	goto	u1160
  2066  022D                     u1161:
  2067  022D  2A35               	goto	l1520
  2068  022E                     u1160:
  2069  022E                     l1516:
  2070  022E  0820               	movf	___awdiv@divisor,w
  2071  022F  02A2               	subwf	___awdiv@dividend,f
  2072  0230  0821               	movf	___awdiv@divisor+1,w
  2073  0231  1C03               	skipc
  2074  0232  03A3               	decf	___awdiv@dividend+1,f
  2075  0233  02A3               	subwf	___awdiv@dividend+1,f
  2076  0234                     l1518:
  2077  0234  1427               	bsf	___awdiv@quotient,0
  2078  0235                     l1520:
  2079  0235  3001               	movlw	1
  2080  0236                     u1175:
  2081  0236  1003               	clrc
  2082  0237  0CA1               	rrf	___awdiv@divisor+1,f
  2083  0238  0CA0               	rrf	___awdiv@divisor,f
  2084  0239  3EFF               	addlw	-1
  2085  023A  1D03               	skipz
  2086  023B  2A36               	goto	u1175
  2087  023C                     l1522:
  2088  023C  3001               	movlw	1
  2089  023D  02A5               	subwf	___awdiv@counter,f
  2090  023E  1D03               	btfss	3,2
  2091  023F  2A41               	goto	u1181
  2092  0240  2A42               	goto	u1180
  2093  0241                     u1181:
  2094  0241  2A1D               	goto	l1514
  2095  0242                     u1180:
  2096  0242                     l1524:
  2097  0242  0826               	movf	___awdiv@sign,w
  2098  0243  1903               	btfsc	3,2
  2099  0244  2A46               	goto	u1191
  2100  0245  2A47               	goto	u1190
  2101  0246                     u1191:
  2102  0246  2A4C               	goto	l1528
  2103  0247                     u1190:
  2104  0247                     l1526:
  2105  0247  09A7               	comf	___awdiv@quotient,f
  2106  0248  09A8               	comf	___awdiv@quotient+1,f
  2107  0249  0AA7               	incf	___awdiv@quotient,f
  2108  024A  1903               	skipnz
  2109  024B  0AA8               	incf	___awdiv@quotient+1,f
  2110  024C                     l1528:
  2111  024C  0828               	movf	___awdiv@quotient+1,w
  2112  024D  00A1               	movwf	?___awdiv+1
  2113  024E  0827               	movf	___awdiv@quotient,w
  2114  024F  00A0               	movwf	?___awdiv
  2115  0250                     l405:
  2116  0250  0008               	return
  2117  0251                     __end_of___awdiv:
  2118                           
  2119                           	psect	text13
  2120  041F                     __ptext13:	
  2121 ;; *************** function ___wmul *****************
  2122 ;; Defined at:
  2123 ;;		line 15 in file "D:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\Umul16.c"
  2124 ;; Parameters:    Size  Location     Type
  2125 ;;  multiplier      2    3[COMMON] unsigned int 
  2126 ;;  multiplicand    2    5[COMMON] unsigned int 
  2127 ;; Auto vars:     Size  Location     Type
  2128 ;;  product         2    7[COMMON] unsigned int 
  2129 ;; Return value:  Size  Location     Type
  2130 ;;                  2    3[COMMON] unsigned int 
  2131 ;; Registers used:
  2132 ;;		wreg, status,2, status,0
  2133 ;; Tracked objects:
  2134 ;;		On entry : 0/0
  2135 ;;		On exit  : 0/0
  2136 ;;		Unchanged: 0/0
  2137 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2138 ;;      Params:         4       0       0       0       0
  2139 ;;      Locals:         2       0       0       0       0
  2140 ;;      Temps:          0       0       0       0       0
  2141 ;;      Totals:         6       0       0       0       0
  2142 ;;Total ram usage:        6 bytes
  2143 ;; Hardware stack levels used: 1
  2144 ;; Hardware stack levels required when called: 3
  2145 ;; This function calls:
  2146 ;;		Nothing
  2147 ;; This function is called by:
  2148 ;;		_setupNewVolumeFlow
  2149 ;;		_getADConverterValue
  2150 ;; This function uses a non-reentrant model
  2151 ;;
  2152                           
  2153  041F                     ___wmul:	
  2154                           ;psect for function ___wmul
  2155                           
  2156  041F                     l1194:	
  2157                           ;incstack = 0
  2158                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2159                           
  2160  041F  01F7               	clrf	___wmul@product
  2161  0420  01F8               	clrf	___wmul@product+1
  2162  0421                     l1196:
  2163  0421  1C73               	btfss	___wmul@multiplier,0
  2164  0422  2C24               	goto	u701
  2165  0423  2C25               	goto	u700
  2166  0424                     u701:
  2167  0424  2C2B               	goto	l252
  2168  0425                     u700:
  2169  0425                     l1198:
  2170  0425  0875               	movf	___wmul@multiplicand,w
  2171  0426  07F7               	addwf	___wmul@product,f
  2172  0427  1803               	skipnc
  2173  0428  0AF8               	incf	___wmul@product+1,f
  2174  0429  0876               	movf	___wmul@multiplicand+1,w
  2175  042A  07F8               	addwf	___wmul@product+1,f
  2176  042B                     l252:
  2177  042B  3001               	movlw	1
  2178  042C                     u715:
  2179  042C  1003               	clrc
  2180  042D  0DF5               	rlf	___wmul@multiplicand,f
  2181  042E  0DF6               	rlf	___wmul@multiplicand+1,f
  2182  042F  3EFF               	addlw	-1
  2183  0430  1D03               	skipz
  2184  0431  2C2C               	goto	u715
  2185  0432                     l1200:
  2186  0432  3001               	movlw	1
  2187  0433                     u725:
  2188  0433  1003               	clrc
  2189  0434  0CF4               	rrf	___wmul@multiplier+1,f
  2190  0435  0CF3               	rrf	___wmul@multiplier,f
  2191  0436  3EFF               	addlw	-1
  2192  0437  1D03               	skipz
  2193  0438  2C33               	goto	u725
  2194  0439                     l1202:
  2195  0439  0873               	movf	___wmul@multiplier,w
  2196  043A  0474               	iorwf	___wmul@multiplier+1,w
  2197  043B  1D03               	btfss	3,2
  2198  043C  2C3E               	goto	u731
  2199  043D  2C3F               	goto	u730
  2200  043E                     u731:
  2201  043E  2C21               	goto	l1196
  2202  043F                     u730:
  2203  043F                     l1204:
  2204  043F  0878               	movf	___wmul@product+1,w
  2205  0440  00F4               	movwf	?___wmul+1
  2206  0441  0877               	movf	___wmul@product,w
  2207  0442  00F3               	movwf	?___wmul
  2208  0443                     l254:
  2209  0443  0008               	return
  2210  0444                     __end_of___wmul:
  2211                           
  2212                           	psect	text14
  2213  0556                     __ptext14:	
  2214 ;; *************** function _setupExternalInterruption *****************
  2215 ;; Defined at:
  2216 ;;		line 191 in file "main.c"
  2217 ;; Parameters:    Size  Location     Type
  2218 ;;		None
  2219 ;; Auto vars:     Size  Location     Type
  2220 ;;		None
  2221 ;; Return value:  Size  Location     Type
  2222 ;;                  1    wreg      void 
  2223 ;; Registers used:
  2224 ;;		None
  2225 ;; Tracked objects:
  2226 ;;		On entry : 0/0
  2227 ;;		On exit  : 0/0
  2228 ;;		Unchanged: 0/0
  2229 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2230 ;;      Params:         0       0       0       0       0
  2231 ;;      Locals:         0       0       0       0       0
  2232 ;;      Temps:          0       0       0       0       0
  2233 ;;      Totals:         0       0       0       0       0
  2234 ;;Total ram usage:        0 bytes
  2235 ;; Hardware stack levels used: 1
  2236 ;; Hardware stack levels required when called: 3
  2237 ;; This function calls:
  2238 ;;		Nothing
  2239 ;; This function is called by:
  2240 ;;		_main
  2241 ;; This function uses a non-reentrant model
  2242 ;;
  2243                           
  2244  0556                     _setupExternalInterruption:	
  2245                           ;psect for function _setupExternalInterruption
  2246                           
  2247  0556                     l1058:	
  2248                           ;incstack = 0
  2249                           ; Regs used in _setupExternalInterruption: []
  2250                           
  2251                           
  2252                           ;main.c: 193:     OPTION_REGbits.INTEDG = 1;
  2253  0556  1683               	bsf	3,5	;RP0=1, select bank1
  2254  0557  1303               	bcf	3,6	;RP1=0, select bank1
  2255  0558  1701               	bsf	1,6	;volatile
  2256                           
  2257                           ;main.c: 194:  INTCONbits.GIE = 1;
  2258  0559  178B               	bsf	11,7	;volatile
  2259                           
  2260                           ;main.c: 195:  INTCONbits.INTE = 1;
  2261  055A  160B               	bsf	11,4	;volatile
  2262  055B                     l137:	
  2263                           ;main.c: 196:     return;
  2264                           
  2265  055B  0008               	return
  2266  055C                     __end_of_setupExternalInterruption:
  2267                           
  2268                           	psect	text15
  2269  04D4                     __ptext15:	
  2270 ;; *************** function _setupADC *****************
  2271 ;; Defined at:
  2272 ;;		line 243 in file "main.c"
  2273 ;; Parameters:    Size  Location     Type
  2274 ;;		None
  2275 ;; Auto vars:     Size  Location     Type
  2276 ;;		None
  2277 ;; Return value:  Size  Location     Type
  2278 ;;                  1    wreg      void 
  2279 ;; Registers used:
  2280 ;;		status,2
  2281 ;; Tracked objects:
  2282 ;;		On entry : 0/0
  2283 ;;		On exit  : 0/0
  2284 ;;		Unchanged: 0/0
  2285 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2286 ;;      Params:         0       0       0       0       0
  2287 ;;      Locals:         0       0       0       0       0
  2288 ;;      Temps:          0       0       0       0       0
  2289 ;;      Totals:         0       0       0       0       0
  2290 ;;Total ram usage:        0 bytes
  2291 ;; Hardware stack levels used: 1
  2292 ;; Hardware stack levels required when called: 3
  2293 ;; This function calls:
  2294 ;;		Nothing
  2295 ;; This function is called by:
  2296 ;;		_main
  2297 ;; This function uses a non-reentrant model
  2298 ;;
  2299                           
  2300  04D4                     _setupADC:	
  2301                           ;psect for function _setupADC
  2302                           
  2303  04D4                     l1076:	
  2304                           ;incstack = 0
  2305                           ; Regs used in _setupADC: [status,2]
  2306                           
  2307                           
  2308                           ;main.c: 248:     ADCON1bits.PCFG0 = 1;
  2309  04D4  1683               	bsf	3,5	;RP0=1, select bank1
  2310  04D5  1303               	bcf	3,6	;RP1=0, select bank1
  2311  04D6  141F               	bsf	31,0	;volatile
  2312                           
  2313                           ;main.c: 249:     ADCON1bits.PCFG1 = 1;
  2314  04D7  149F               	bsf	31,1	;volatile
  2315                           
  2316                           ;main.c: 250:     ADCON1bits.PCFG2 = 1;
  2317  04D8  151F               	bsf	31,2	;volatile
  2318                           
  2319                           ;main.c: 251:     ADCON1bits.PCFG3 = 1;
  2320  04D9  159F               	bsf	31,3	;volatile
  2321                           
  2322                           ;main.c: 254:     ADCON1bits.ADCS2 = 1;
  2323  04DA  171F               	bsf	31,6	;volatile
  2324                           
  2325                           ;main.c: 255:     ADCON0bits.ADCS1 = 1;
  2326  04DB  1283               	bcf	3,5	;RP0=0, select bank0
  2327  04DC  1303               	bcf	3,6	;RP1=0, select bank0
  2328  04DD  179F               	bsf	31,7	;volatile
  2329                           
  2330                           ;main.c: 256:     ADCON0bits.ADCS0 = 0;
  2331  04DE  131F               	bcf	31,6	;volatile
  2332                           
  2333                           ;main.c: 259:     ADCON1bits.ADFM = 0;
  2334  04DF  1683               	bsf	3,5	;RP0=1, select bank1
  2335  04E0  1303               	bcf	3,6	;RP1=0, select bank1
  2336  04E1  139F               	bcf	31,7	;volatile
  2337  04E2                     l1078:
  2338                           
  2339                           ;main.c: 262:     ADRESL = 0;
  2340  04E2  019E               	clrf	30	;volatile
  2341                           
  2342                           ;main.c: 263:     ADRESH = 0;
  2343  04E3  1283               	bcf	3,5	;RP0=0, select bank0
  2344  04E4  1303               	bcf	3,6	;RP1=0, select bank0
  2345  04E5  019E               	clrf	30	;volatile
  2346  04E6                     l1080:
  2347                           
  2348                           ;main.c: 267:     ADCON0bits.ADON = 1;
  2349  04E6  141F               	bsf	31,0	;volatile
  2350  04E7                     l1082:
  2351                           
  2352                           ;main.c: 270:     ADCON0bits.CHS0 = 0;
  2353  04E7  119F               	bcf	31,3	;volatile
  2354  04E8                     l1084:
  2355                           
  2356                           ;main.c: 271:     ADCON0bits.CHS1 = 0;
  2357  04E8  121F               	bcf	31,4	;volatile
  2358  04E9                     l1086:
  2359                           
  2360                           ;main.c: 272:     ADCON0bits.CHS2 = 0;
  2361  04E9  129F               	bcf	31,5	;volatile
  2362  04EA                     l158:
  2363  04EA  0008               	return
  2364  04EB                     __end_of_setupADC:
  2365                           
  2366                           	psect	text16
  2367  03F6                     __ptext16:	
  2368 ;; *************** function _Lcd_Write_String *****************
  2369 ;; Defined at:
  2370 ;;		line 97 in file "./lcd.h"
  2371 ;; Parameters:    Size  Location     Type
  2372 ;;  a               1    wreg     PTR unsigned char 
  2373 ;;		 -> STR_2(12), STR_1(10), 
  2374 ;; Auto vars:     Size  Location     Type
  2375 ;;  a               1    2[BANK0 ] PTR unsigned char 
  2376 ;;		 -> STR_2(12), STR_1(10), 
  2377 ;;  i               2    0[BANK0 ] int 
  2378 ;; Return value:  Size  Location     Type
  2379 ;;                  1    wreg      void 
  2380 ;; Registers used:
  2381 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2382 ;; Tracked objects:
  2383 ;;		On entry : 0/0
  2384 ;;		On exit  : 0/0
  2385 ;;		Unchanged: 0/0
  2386 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2387 ;;      Params:         0       0       0       0       0
  2388 ;;      Locals:         0       3       0       0       0
  2389 ;;      Temps:          0       0       0       0       0
  2390 ;;      Totals:         0       3       0       0       0
  2391 ;;Total ram usage:        3 bytes
  2392 ;; Hardware stack levels used: 1
  2393 ;; Hardware stack levels required when called: 5
  2394 ;; This function calls:
  2395 ;;		_Lcd_Write_Char
  2396 ;; This function is called by:
  2397 ;;		_main
  2398 ;; This function uses a non-reentrant model
  2399 ;;
  2400                           
  2401  03F6                     _Lcd_Write_String:	
  2402                           ;psect for function _Lcd_Write_String
  2403                           
  2404                           
  2405                           ;incstack = 0
  2406                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2407                           ;Lcd_Write_String@a stored from wreg
  2408  03F6  1283               	bcf	3,5	;RP0=0, select bank0
  2409  03F7  1303               	bcf	3,6	;RP1=0, select bank0
  2410  03F8  00A2               	movwf	Lcd_Write_String@a
  2411  03F9                     l1622:
  2412                           
  2413                           ;./lcd.h: 97: void Lcd_Write_String(char *a);./lcd.h: 98: {;./lcd.h: 99:  int i;;./lcd.h
      +                          : 100:  for(i=0;a[i]!='\0';i++)
  2414  03F9  01A0               	clrf	Lcd_Write_String@i
  2415  03FA  01A1               	clrf	Lcd_Write_String@i+1
  2416  03FB  2C11               	goto	l1628
  2417  03FC                     l1624:
  2418                           
  2419                           ;./lcd.h: 101:     Lcd_Write_Char(a[i]);
  2420  03FC  0820               	movf	Lcd_Write_String@i,w
  2421  03FD  0722               	addwf	Lcd_Write_String@a,w
  2422  03FE  0084               	movwf	4
  2423  03FF  120A  118A  2485  120A  118A  	fcall	stringdir
  2424  0404  120A  118A  2360  120A  118A  	fcall	_Lcd_Write_Char
  2425  0409                     l1626:
  2426  0409  3001               	movlw	1
  2427  040A  1283               	bcf	3,5	;RP0=0, select bank0
  2428  040B  1303               	bcf	3,6	;RP1=0, select bank0
  2429  040C  07A0               	addwf	Lcd_Write_String@i,f
  2430  040D  1803               	skipnc
  2431  040E  0AA1               	incf	Lcd_Write_String@i+1,f
  2432  040F  3000               	movlw	0
  2433  0410  07A1               	addwf	Lcd_Write_String@i+1,f
  2434  0411                     l1628:
  2435  0411  0820               	movf	Lcd_Write_String@i,w
  2436  0412  0722               	addwf	Lcd_Write_String@a,w
  2437  0413  0084               	movwf	4
  2438  0414  120A  118A  2485  120A  118A  	fcall	stringdir
  2439  0419  3A00               	xorlw	0
  2440  041A  1D03               	skipz
  2441  041B  2C1D               	goto	u1291
  2442  041C  2C1E               	goto	u1290
  2443  041D                     u1291:
  2444  041D  2BFC               	goto	l1624
  2445  041E                     u1290:
  2446  041E                     l89:
  2447  041E  0008               	return
  2448  041F                     __end_of_Lcd_Write_String:
  2449                           
  2450                           	psect	text17
  2451  0360                     __ptext17:	
  2452 ;; *************** function _Lcd_Write_Char *****************
  2453 ;; Defined at:
  2454 ;;		line 81 in file "./lcd.h"
  2455 ;; Parameters:    Size  Location     Type
  2456 ;;  a               1    wreg     unsigned char 
  2457 ;; Auto vars:     Size  Location     Type
  2458 ;;  a               1    7[COMMON] unsigned char 
  2459 ;;  y               1    6[COMMON] unsigned char 
  2460 ;;  temp            1    5[COMMON] unsigned char 
  2461 ;; Return value:  Size  Location     Type
  2462 ;;                  1    wreg      void 
  2463 ;; Registers used:
  2464 ;;		wreg, status,2, status,0, pclath, cstack
  2465 ;; Tracked objects:
  2466 ;;		On entry : 0/0
  2467 ;;		On exit  : 0/0
  2468 ;;		Unchanged: 0/0
  2469 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2470 ;;      Params:         0       0       0       0       0
  2471 ;;      Locals:         3       0       0       0       0
  2472 ;;      Temps:          1       0       0       0       0
  2473 ;;      Totals:         4       0       0       0       0
  2474 ;;Total ram usage:        4 bytes
  2475 ;; Hardware stack levels used: 1
  2476 ;; Hardware stack levels required when called: 4
  2477 ;; This function calls:
  2478 ;;		_Lcd_Port
  2479 ;; This function is called by:
  2480 ;;		_Lcd_Write_String
  2481 ;; This function uses a non-reentrant model
  2482 ;;
  2483                           
  2484  0360                     _Lcd_Write_Char:	
  2485                           ;psect for function _Lcd_Write_Char
  2486                           
  2487                           
  2488                           ;incstack = 0
  2489                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  2490                           ;Lcd_Write_Char@a stored from wreg
  2491  0360  00F7               	movwf	Lcd_Write_Char@a
  2492  0361                     l1556:
  2493                           
  2494                           ;./lcd.h: 81: void Lcd_Write_Char(char a);./lcd.h: 82: {;./lcd.h: 83:    char temp,y;;./
      +                          lcd.h: 84:    temp = a&0x0F;
  2495  0361  0877               	movf	Lcd_Write_Char@a,w
  2496  0362  390F               	andlw	15
  2497  0363  00F4               	movwf	??_Lcd_Write_Char
  2498  0364  0874               	movf	??_Lcd_Write_Char,w
  2499  0365  00F5               	movwf	Lcd_Write_Char@temp
  2500                           
  2501                           ;./lcd.h: 85:    y = a&0xF0;
  2502  0366  0877               	movf	Lcd_Write_Char@a,w
  2503  0367  39F0               	andlw	240
  2504  0368  00F4               	movwf	??_Lcd_Write_Char
  2505  0369  0874               	movf	??_Lcd_Write_Char,w
  2506  036A  00F6               	movwf	Lcd_Write_Char@y
  2507  036B                     l1558:
  2508                           
  2509                           ;./lcd.h: 86:    RD2 = 1;
  2510  036B  1283               	bcf	3,5	;RP0=0, select bank0
  2511  036C  1303               	bcf	3,6	;RP1=0, select bank0
  2512  036D  1508               	bsf	8,2	;volatile
  2513  036E                     l1560:
  2514                           
  2515                           ;./lcd.h: 87:    Lcd_Port(y>>4);
  2516  036E  0876               	movf	Lcd_Write_Char@y,w
  2517  036F  00F4               	movwf	??_Lcd_Write_Char
  2518  0370  3004               	movlw	4
  2519  0371                     u1245:
  2520  0371  1003               	clrc
  2521  0372  0CF4               	rrf	??_Lcd_Write_Char,f
  2522  0373  3EFF               	addlw	-1
  2523  0374  1D03               	skipz
  2524  0375  2B71               	goto	u1245
  2525  0376  0874               	movf	??_Lcd_Write_Char,w
  2526  0377  120A  118A  2444  120A  118A  	fcall	_Lcd_Port
  2527  037C                     l1562:
  2528                           
  2529                           ;./lcd.h: 88:    RD3 = 1;
  2530  037C  1283               	bcf	3,5	;RP0=0, select bank0
  2531  037D  1303               	bcf	3,6	;RP1=0, select bank0
  2532  037E  1588               	bsf	8,3	;volatile
  2533  037F                     l1564:
  2534                           
  2535                           ;./lcd.h: 89:    _delay((unsigned long)((40)*(4000000/4000000.0)));
  2536  037F  300D               	movlw	13
  2537  0380  00F4               	movwf	??_Lcd_Write_Char
  2538  0381                     u1347:
  2539  0381  0BF4               	decfsz	??_Lcd_Write_Char,f
  2540  0382  2B81               	goto	u1347
  2541  0383                     l1566:
  2542                           
  2543                           ;./lcd.h: 90:    RD3 = 0;
  2544  0383  1283               	bcf	3,5	;RP0=0, select bank0
  2545  0384  1303               	bcf	3,6	;RP1=0, select bank0
  2546  0385  1188               	bcf	8,3	;volatile
  2547  0386                     l1568:
  2548                           
  2549                           ;./lcd.h: 91:    Lcd_Port(temp);
  2550  0386  0875               	movf	Lcd_Write_Char@temp,w
  2551  0387  120A  118A  2444  120A  118A  	fcall	_Lcd_Port
  2552  038C                     l1570:
  2553                           
  2554                           ;./lcd.h: 92:    RD3 = 1;
  2555  038C  1283               	bcf	3,5	;RP0=0, select bank0
  2556  038D  1303               	bcf	3,6	;RP1=0, select bank0
  2557  038E  1588               	bsf	8,3	;volatile
  2558  038F                     l1572:
  2559                           
  2560                           ;./lcd.h: 93:    _delay((unsigned long)((40)*(4000000/4000000.0)));
  2561  038F  300D               	movlw	13
  2562  0390  00F4               	movwf	??_Lcd_Write_Char
  2563  0391                     u1357:
  2564  0391  0BF4               	decfsz	??_Lcd_Write_Char,f
  2565  0392  2B91               	goto	u1357
  2566  0393                     l1574:
  2567                           
  2568                           ;./lcd.h: 94:    RD3 = 0;
  2569  0393  1283               	bcf	3,5	;RP0=0, select bank0
  2570  0394  1303               	bcf	3,6	;RP1=0, select bank0
  2571  0395  1188               	bcf	8,3	;volatile
  2572  0396                     l83:
  2573  0396  0008               	return
  2574  0397                     __end_of_Lcd_Write_Char:
  2575                           
  2576                           	psect	text18
  2577  0308                     __ptext18:	
  2578 ;; *************** function _Lcd_Set_Cursor *****************
  2579 ;; Defined at:
  2580 ;;		line 41 in file "./lcd.h"
  2581 ;; Parameters:    Size  Location     Type
  2582 ;;  a               1    wreg     unsigned char 
  2583 ;;  b               1    7[COMMON] unsigned char 
  2584 ;; Auto vars:     Size  Location     Type
  2585 ;;  a               1    2[BANK0 ] unsigned char 
  2586 ;;  temp            1    5[BANK0 ] unsigned char 
  2587 ;;  y               1    4[BANK0 ] unsigned char 
  2588 ;;  z               1    3[BANK0 ] unsigned char 
  2589 ;; Return value:  Size  Location     Type
  2590 ;;                  1    wreg      void 
  2591 ;; Registers used:
  2592 ;;		wreg, status,2, status,0, pclath, cstack
  2593 ;; Tracked objects:
  2594 ;;		On entry : 0/0
  2595 ;;		On exit  : 0/0
  2596 ;;		Unchanged: 0/0
  2597 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2598 ;;      Params:         1       0       0       0       0
  2599 ;;      Locals:         0       4       0       0       0
  2600 ;;      Temps:          0       2       0       0       0
  2601 ;;      Totals:         1       6       0       0       0
  2602 ;;Total ram usage:        7 bytes
  2603 ;; Hardware stack levels used: 1
  2604 ;; Hardware stack levels required when called: 5
  2605 ;; This function calls:
  2606 ;;		_Lcd_Cmd
  2607 ;; This function is called by:
  2608 ;;		_main
  2609 ;; This function uses a non-reentrant model
  2610 ;;
  2611                           
  2612  0308                     _Lcd_Set_Cursor:	
  2613                           ;psect for function _Lcd_Set_Cursor
  2614                           
  2615                           
  2616                           ;incstack = 0
  2617                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  2618                           ;Lcd_Set_Cursor@a stored from wreg
  2619  0308  1283               	bcf	3,5	;RP0=0, select bank0
  2620  0309  1303               	bcf	3,6	;RP1=0, select bank0
  2621  030A  00A2               	movwf	Lcd_Set_Cursor@a
  2622  030B                     l1592:
  2623                           
  2624                           ;./lcd.h: 41: void Lcd_Set_Cursor(char a, char b);./lcd.h: 42: {;./lcd.h: 43:  char temp
      +                          ,z,y;;./lcd.h: 44:  if(a == 1)
  2625  030B  0322               	decf	Lcd_Set_Cursor@a,w
  2626  030C  1D03               	btfss	3,2
  2627  030D  2B0F               	goto	u1251
  2628  030E  2B10               	goto	u1250
  2629  030F                     u1251:
  2630  030F  2B35               	goto	l1602
  2631  0310                     u1250:
  2632  0310                     l1594:
  2633                           
  2634                           ;./lcd.h: 45:  {;./lcd.h: 46:    temp = 0x80 + b - 1;
  2635  0310  0877               	movf	Lcd_Set_Cursor@b,w
  2636  0311  3E7F               	addlw	127
  2637  0312  00A0               	movwf	??_Lcd_Set_Cursor
  2638  0313  0820               	movf	??_Lcd_Set_Cursor,w
  2639  0314  00A5               	movwf	Lcd_Set_Cursor@temp
  2640                           
  2641                           ;./lcd.h: 47:   z = temp>>4;
  2642  0315  0825               	movf	Lcd_Set_Cursor@temp,w
  2643  0316  00A0               	movwf	??_Lcd_Set_Cursor
  2644  0317  3004               	movlw	4
  2645  0318                     u1265:
  2646  0318  1003               	clrc
  2647  0319  0CA0               	rrf	??_Lcd_Set_Cursor,f
  2648  031A  3EFF               	addlw	-1
  2649  031B  1D03               	skipz
  2650  031C  2B18               	goto	u1265
  2651  031D  0820               	movf	??_Lcd_Set_Cursor,w
  2652  031E  00A1               	movwf	??_Lcd_Set_Cursor+1
  2653  031F  0821               	movf	??_Lcd_Set_Cursor+1,w
  2654  0320  00A3               	movwf	Lcd_Set_Cursor@z
  2655  0321                     l1596:
  2656                           
  2657                           ;./lcd.h: 48:   y = temp & 0x0F;
  2658  0321  0825               	movf	Lcd_Set_Cursor@temp,w
  2659  0322  390F               	andlw	15
  2660  0323  00A0               	movwf	??_Lcd_Set_Cursor
  2661  0324  0820               	movf	??_Lcd_Set_Cursor,w
  2662  0325  00A4               	movwf	Lcd_Set_Cursor@y
  2663  0326                     l1598:
  2664                           
  2665                           ;./lcd.h: 49:   Lcd_Cmd(z);
  2666  0326  0823               	movf	Lcd_Set_Cursor@z,w
  2667  0327  120A  118A  24A1  120A  118A  	fcall	_Lcd_Cmd
  2668  032C                     l1600:
  2669                           
  2670                           ;./lcd.h: 50:   Lcd_Cmd(y);
  2671  032C  1283               	bcf	3,5	;RP0=0, select bank0
  2672  032D  1303               	bcf	3,6	;RP1=0, select bank0
  2673  032E  0824               	movf	Lcd_Set_Cursor@y,w
  2674  032F  120A  118A  24A1  120A  118A  	fcall	_Lcd_Cmd
  2675                           
  2676                           ;./lcd.h: 51:  }
  2677  0334  2B5F               	goto	l77
  2678  0335                     l1602:
  2679  0335  3002               	movlw	2
  2680  0336  0622               	xorwf	Lcd_Set_Cursor@a,w
  2681  0337  1D03               	btfss	3,2
  2682  0338  2B3A               	goto	u1271
  2683  0339  2B3B               	goto	u1270
  2684  033A                     u1271:
  2685  033A  2B5F               	goto	l77
  2686  033B                     u1270:
  2687  033B                     l1604:
  2688                           
  2689                           ;./lcd.h: 53:  {;./lcd.h: 54:   temp = 0xC0 + b - 1;
  2690  033B  0877               	movf	Lcd_Set_Cursor@b,w
  2691  033C  3EBF               	addlw	191
  2692  033D  00A0               	movwf	??_Lcd_Set_Cursor
  2693  033E  0820               	movf	??_Lcd_Set_Cursor,w
  2694  033F  00A5               	movwf	Lcd_Set_Cursor@temp
  2695                           
  2696                           ;./lcd.h: 55:   z = temp>>4;
  2697  0340  0825               	movf	Lcd_Set_Cursor@temp,w
  2698  0341  00A0               	movwf	??_Lcd_Set_Cursor
  2699  0342  3004               	movlw	4
  2700  0343                     u1285:
  2701  0343  1003               	clrc
  2702  0344  0CA0               	rrf	??_Lcd_Set_Cursor,f
  2703  0345  3EFF               	addlw	-1
  2704  0346  1D03               	skipz
  2705  0347  2B43               	goto	u1285
  2706  0348  0820               	movf	??_Lcd_Set_Cursor,w
  2707  0349  00A1               	movwf	??_Lcd_Set_Cursor+1
  2708  034A  0821               	movf	??_Lcd_Set_Cursor+1,w
  2709  034B  00A3               	movwf	Lcd_Set_Cursor@z
  2710  034C                     l1606:
  2711                           
  2712                           ;./lcd.h: 56:   y = temp & 0x0F;
  2713  034C  0825               	movf	Lcd_Set_Cursor@temp,w
  2714  034D  390F               	andlw	15
  2715  034E  00A0               	movwf	??_Lcd_Set_Cursor
  2716  034F  0820               	movf	??_Lcd_Set_Cursor,w
  2717  0350  00A4               	movwf	Lcd_Set_Cursor@y
  2718  0351                     l1608:
  2719                           
  2720                           ;./lcd.h: 57:   Lcd_Cmd(z);
  2721  0351  0823               	movf	Lcd_Set_Cursor@z,w
  2722  0352  120A  118A  24A1  120A  118A  	fcall	_Lcd_Cmd
  2723  0357                     l1610:
  2724                           
  2725                           ;./lcd.h: 58:   Lcd_Cmd(y);
  2726  0357  1283               	bcf	3,5	;RP0=0, select bank0
  2727  0358  1303               	bcf	3,6	;RP1=0, select bank0
  2728  0359  0824               	movf	Lcd_Set_Cursor@y,w
  2729  035A  120A  118A  24A1  120A  118A  	fcall	_Lcd_Cmd
  2730  035F                     l77:
  2731  035F  0008               	return
  2732  0360                     __end_of_Lcd_Set_Cursor:
  2733                           
  2734                           	psect	text19
  2735  0251                     __ptext19:	
  2736 ;; *************** function _Lcd_Init *****************
  2737 ;; Defined at:
  2738 ;;		line 62 in file "./lcd.h"
  2739 ;; Parameters:    Size  Location     Type
  2740 ;;		None
  2741 ;; Auto vars:     Size  Location     Type
  2742 ;;		None
  2743 ;; Return value:  Size  Location     Type
  2744 ;;                  1    wreg      void 
  2745 ;; Registers used:
  2746 ;;		wreg, status,2, status,0, pclath, cstack
  2747 ;; Tracked objects:
  2748 ;;		On entry : 0/0
  2749 ;;		On exit  : 0/0
  2750 ;;		Unchanged: 0/0
  2751 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2752 ;;      Params:         0       0       0       0       0
  2753 ;;      Locals:         0       0       0       0       0
  2754 ;;      Temps:          2       0       0       0       0
  2755 ;;      Totals:         2       0       0       0       0
  2756 ;;Total ram usage:        2 bytes
  2757 ;; Hardware stack levels used: 1
  2758 ;; Hardware stack levels required when called: 5
  2759 ;; This function calls:
  2760 ;;		_Lcd_Cmd
  2761 ;;		_Lcd_Port
  2762 ;; This function is called by:
  2763 ;;		_main
  2764 ;; This function uses a non-reentrant model
  2765 ;;
  2766                           
  2767  0251                     _Lcd_Init:	
  2768                           ;psect for function _Lcd_Init
  2769                           
  2770  0251                     l1612:	
  2771                           ;incstack = 0
  2772                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  2773                           
  2774                           
  2775                           ;./lcd.h: 64:   Lcd_Port(0x00);
  2776  0251  3000               	movlw	0
  2777  0252  120A  118A  2444  120A  118A  	fcall	_Lcd_Port
  2778  0257                     l1614:
  2779                           
  2780                           ;./lcd.h: 65:    _delay((unsigned long)((20)*(4000000/4000.0)));
  2781  0257  301A               	movlw	26
  2782  0258  00F8               	movwf	??_Lcd_Init+1
  2783  0259  30F8               	movlw	248
  2784  025A  00F7               	movwf	??_Lcd_Init
  2785  025B                     u1367:
  2786  025B  0BF7               	decfsz	??_Lcd_Init,f
  2787  025C  2A5B               	goto	u1367
  2788  025D  0BF8               	decfsz	??_Lcd_Init+1,f
  2789  025E  2A5B               	goto	u1367
  2790  025F  0000               	nop
  2791  0260                     l1616:
  2792                           
  2793                           ;./lcd.h: 66:   Lcd_Cmd(0x03);
  2794  0260  3003               	movlw	3
  2795  0261  120A  118A  24A1  120A  118A  	fcall	_Lcd_Cmd
  2796                           
  2797                           ;./lcd.h: 67:  _delay((unsigned long)((5)*(4000000/4000.0)));
  2798  0266  3007               	movlw	7
  2799  0267  00F8               	movwf	??_Lcd_Init+1
  2800  0268  307D               	movlw	125
  2801  0269  00F7               	movwf	??_Lcd_Init
  2802  026A                     u1377:
  2803  026A  0BF7               	decfsz	??_Lcd_Init,f
  2804  026B  2A6A               	goto	u1377
  2805  026C  0BF8               	decfsz	??_Lcd_Init+1,f
  2806  026D  2A6A               	goto	u1377
  2807  026E                     l1618:
  2808                           
  2809                           ;./lcd.h: 68:   Lcd_Cmd(0x03);
  2810  026E  3003               	movlw	3
  2811  026F  120A  118A  24A1  120A  118A  	fcall	_Lcd_Cmd
  2812  0274                     l1620:
  2813                           
  2814                           ;./lcd.h: 69:  _delay((unsigned long)((11)*(4000000/4000.0)));
  2815  0274  300F               	movlw	15
  2816  0275  00F8               	movwf	??_Lcd_Init+1
  2817  0276  3047               	movlw	71
  2818  0277  00F7               	movwf	??_Lcd_Init
  2819  0278                     u1387:
  2820  0278  0BF7               	decfsz	??_Lcd_Init,f
  2821  0279  2A78               	goto	u1387
  2822  027A  0BF8               	decfsz	??_Lcd_Init+1,f
  2823  027B  2A78               	goto	u1387
  2824  027C  2A7D               	nop2
  2825                           
  2826                           ;./lcd.h: 70:   Lcd_Cmd(0x03);
  2827  027D  3003               	movlw	3
  2828  027E  120A  118A  24A1  120A  118A  	fcall	_Lcd_Cmd
  2829                           
  2830                           ;./lcd.h: 72:   Lcd_Cmd(0x02);
  2831  0283  3002               	movlw	2
  2832  0284  120A  118A  24A1  120A  118A  	fcall	_Lcd_Cmd
  2833                           
  2834                           ;./lcd.h: 73:   Lcd_Cmd(0x02);
  2835  0289  3002               	movlw	2
  2836  028A  120A  118A  24A1  120A  118A  	fcall	_Lcd_Cmd
  2837                           
  2838                           ;./lcd.h: 74:   Lcd_Cmd(0x08);
  2839  028F  3008               	movlw	8
  2840  0290  120A  118A  24A1  120A  118A  	fcall	_Lcd_Cmd
  2841                           
  2842                           ;./lcd.h: 75:   Lcd_Cmd(0x00);
  2843  0295  3000               	movlw	0
  2844  0296  120A  118A  24A1  120A  118A  	fcall	_Lcd_Cmd
  2845                           
  2846                           ;./lcd.h: 76:   Lcd_Cmd(0x0C);
  2847  029B  300C               	movlw	12
  2848  029C  120A  118A  24A1  120A  118A  	fcall	_Lcd_Cmd
  2849                           
  2850                           ;./lcd.h: 77:   Lcd_Cmd(0x00);
  2851  02A1  3000               	movlw	0
  2852  02A2  120A  118A  24A1  120A  118A  	fcall	_Lcd_Cmd
  2853                           
  2854                           ;./lcd.h: 78:   Lcd_Cmd(0x06);
  2855  02A7  3006               	movlw	6
  2856  02A8  120A  118A  24A1  120A  118A  	fcall	_Lcd_Cmd
  2857  02AD                     l80:
  2858  02AD  0008               	return
  2859  02AE                     __end_of_Lcd_Init:
  2860                           
  2861                           	psect	text20
  2862  0523                     __ptext20:	
  2863 ;; *************** function _Lcd_Clear *****************
  2864 ;; Defined at:
  2865 ;;		line 35 in file "./lcd.h"
  2866 ;; Parameters:    Size  Location     Type
  2867 ;;		None
  2868 ;; Auto vars:     Size  Location     Type
  2869 ;;		None
  2870 ;; Return value:  Size  Location     Type
  2871 ;;                  1    wreg      void 
  2872 ;; Registers used:
  2873 ;;		wreg, status,2, status,0, pclath, cstack
  2874 ;; Tracked objects:
  2875 ;;		On entry : 0/0
  2876 ;;		On exit  : 0/0
  2877 ;;		Unchanged: 0/0
  2878 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2879 ;;      Params:         0       0       0       0       0
  2880 ;;      Locals:         0       0       0       0       0
  2881 ;;      Temps:          0       0       0       0       0
  2882 ;;      Totals:         0       0       0       0       0
  2883 ;;Total ram usage:        0 bytes
  2884 ;; Hardware stack levels used: 1
  2885 ;; Hardware stack levels required when called: 5
  2886 ;; This function calls:
  2887 ;;		_Lcd_Cmd
  2888 ;; This function is called by:
  2889 ;;		_main
  2890 ;; This function uses a non-reentrant model
  2891 ;;
  2892                           
  2893  0523                     _Lcd_Clear:	
  2894                           ;psect for function _Lcd_Clear
  2895                           
  2896  0523                     l1590:	
  2897                           ;incstack = 0
  2898                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  2899                           
  2900                           
  2901                           ;./lcd.h: 37:  Lcd_Cmd(0);
  2902  0523  3000               	movlw	0
  2903  0524  120A  118A  24A1  120A  118A  	fcall	_Lcd_Cmd
  2904                           
  2905                           ;./lcd.h: 38:  Lcd_Cmd(1);
  2906  0529  3001               	movlw	1
  2907  052A  120A  118A  24A1  120A  118A  	fcall	_Lcd_Cmd
  2908  052F                     l71:
  2909  052F  0008               	return
  2910  0530                     __end_of_Lcd_Clear:
  2911                           
  2912                           	psect	text21
  2913  04A1                     __ptext21:	
  2914 ;; *************** function _Lcd_Cmd *****************
  2915 ;; Defined at:
  2916 ;;		line 26 in file "./lcd.h"
  2917 ;; Parameters:    Size  Location     Type
  2918 ;;  a               1    wreg     unsigned char 
  2919 ;; Auto vars:     Size  Location     Type
  2920 ;;  a               1    6[COMMON] unsigned char 
  2921 ;; Return value:  Size  Location     Type
  2922 ;;                  1    wreg      void 
  2923 ;; Registers used:
  2924 ;;		wreg, status,2, status,0, pclath, cstack
  2925 ;; Tracked objects:
  2926 ;;		On entry : 0/0
  2927 ;;		On exit  : 0/0
  2928 ;;		Unchanged: 0/0
  2929 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2930 ;;      Params:         0       0       0       0       0
  2931 ;;      Locals:         1       0       0       0       0
  2932 ;;      Temps:          2       0       0       0       0
  2933 ;;      Totals:         3       0       0       0       0
  2934 ;;Total ram usage:        3 bytes
  2935 ;; Hardware stack levels used: 1
  2936 ;; Hardware stack levels required when called: 4
  2937 ;; This function calls:
  2938 ;;		_Lcd_Port
  2939 ;; This function is called by:
  2940 ;;		_Lcd_Clear
  2941 ;;		_Lcd_Set_Cursor
  2942 ;;		_Lcd_Init
  2943 ;;		_Lcd_Shift_Right
  2944 ;;		_Lcd_Shift_Left
  2945 ;; This function uses a non-reentrant model
  2946 ;;
  2947                           
  2948  04A1                     _Lcd_Cmd:	
  2949                           ;psect for function _Lcd_Cmd
  2950                           
  2951                           
  2952                           ;incstack = 0
  2953                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  2954                           ;Lcd_Cmd@a stored from wreg
  2955  04A1  00F6               	movwf	Lcd_Cmd@a
  2956  04A2                     l1546:
  2957                           
  2958                           ;./lcd.h: 26: void Lcd_Cmd(char a);./lcd.h: 27: {;./lcd.h: 28:  RD2 = 0;
  2959  04A2  1283               	bcf	3,5	;RP0=0, select bank0
  2960  04A3  1303               	bcf	3,6	;RP1=0, select bank0
  2961  04A4  1108               	bcf	8,2	;volatile
  2962  04A5                     l1548:
  2963                           
  2964                           ;./lcd.h: 29:  Lcd_Port(a);
  2965  04A5  0876               	movf	Lcd_Cmd@a,w
  2966  04A6  120A  118A  2444  120A  118A  	fcall	_Lcd_Port
  2967  04AB                     l1550:
  2968                           
  2969                           ;./lcd.h: 30:  RD3 = 1;
  2970  04AB  1283               	bcf	3,5	;RP0=0, select bank0
  2971  04AC  1303               	bcf	3,6	;RP1=0, select bank0
  2972  04AD  1588               	bsf	8,3	;volatile
  2973  04AE                     l1552:
  2974                           
  2975                           ;./lcd.h: 31:         _delay((unsigned long)((4)*(4000000/4000.0)));
  2976  04AE  3006               	movlw	6
  2977  04AF  00F5               	movwf	??_Lcd_Cmd+1
  2978  04B0  3030               	movlw	48
  2979  04B1  00F4               	movwf	??_Lcd_Cmd
  2980  04B2                     u1397:
  2981  04B2  0BF4               	decfsz	??_Lcd_Cmd,f
  2982  04B3  2CB2               	goto	u1397
  2983  04B4  0BF5               	decfsz	??_Lcd_Cmd+1,f
  2984  04B5  2CB2               	goto	u1397
  2985  04B6  0000               	nop
  2986  04B7                     l1554:
  2987                           
  2988                           ;./lcd.h: 32:         RD3 = 0;
  2989  04B7  1283               	bcf	3,5	;RP0=0, select bank0
  2990  04B8  1303               	bcf	3,6	;RP1=0, select bank0
  2991  04B9  1188               	bcf	8,3	;volatile
  2992  04BA                     l68:
  2993  04BA  0008               	return
  2994  04BB                     __end_of_Lcd_Cmd:
  2995                           
  2996                           	psect	text22
  2997  0444                     __ptext22:	
  2998 ;; *************** function _Lcd_Port *****************
  2999 ;; Defined at:
  3000 ;;		line 4 in file "./lcd.h"
  3001 ;; Parameters:    Size  Location     Type
  3002 ;;  a               1    wreg     unsigned char 
  3003 ;; Auto vars:     Size  Location     Type
  3004 ;;  a               1    3[COMMON] unsigned char 
  3005 ;; Return value:  Size  Location     Type
  3006 ;;                  1    wreg      void 
  3007 ;; Registers used:
  3008 ;;		wreg
  3009 ;; Tracked objects:
  3010 ;;		On entry : 0/0
  3011 ;;		On exit  : 0/0
  3012 ;;		Unchanged: 0/0
  3013 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3014 ;;      Params:         0       0       0       0       0
  3015 ;;      Locals:         1       0       0       0       0
  3016 ;;      Temps:          0       0       0       0       0
  3017 ;;      Totals:         1       0       0       0       0
  3018 ;;Total ram usage:        1 bytes
  3019 ;; Hardware stack levels used: 1
  3020 ;; Hardware stack levels required when called: 3
  3021 ;; This function calls:
  3022 ;;		Nothing
  3023 ;; This function is called by:
  3024 ;;		_Lcd_Cmd
  3025 ;;		_Lcd_Init
  3026 ;;		_Lcd_Write_Char
  3027 ;; This function uses a non-reentrant model
  3028 ;;
  3029                           
  3030  0444                     _Lcd_Port:	
  3031                           ;psect for function _Lcd_Port
  3032                           
  3033                           
  3034                           ;incstack = 0
  3035                           ; Regs used in _Lcd_Port: [wreg]
  3036                           ;Lcd_Port@a stored from wreg
  3037  0444  00F3               	movwf	Lcd_Port@a
  3038  0445                     l1532:
  3039                           
  3040                           ;./lcd.h: 4: void Lcd_Port(char a);./lcd.h: 5: {;./lcd.h: 6:  if(a & 1)
  3041  0445  1C73               	btfss	Lcd_Port@a,0
  3042  0446  2C48               	goto	u1201
  3043  0447  2C49               	goto	u1200
  3044  0448                     u1201:
  3045  0448  2C4D               	goto	l57
  3046  0449                     u1200:
  3047  0449                     l1534:
  3048                           
  3049                           ;./lcd.h: 7:   RD4 = 1;
  3050  0449  1283               	bcf	3,5	;RP0=0, select bank0
  3051  044A  1303               	bcf	3,6	;RP1=0, select bank0
  3052  044B  1608               	bsf	8,4	;volatile
  3053  044C  2C50               	goto	l58
  3054  044D                     l57:	
  3055                           ;./lcd.h: 8:  else
  3056                           
  3057                           
  3058                           ;./lcd.h: 9:   RD4 = 0;
  3059  044D  1283               	bcf	3,5	;RP0=0, select bank0
  3060  044E  1303               	bcf	3,6	;RP1=0, select bank0
  3061  044F  1208               	bcf	8,4	;volatile
  3062  0450                     l58:
  3063                           
  3064                           ;./lcd.h: 11:  if(a & 2)
  3065  0450  1CF3               	btfss	Lcd_Port@a,1
  3066  0451  2C53               	goto	u1211
  3067  0452  2C54               	goto	u1210
  3068  0453                     u1211:
  3069  0453  2C56               	goto	l59
  3070  0454                     u1210:
  3071  0454                     l1536:
  3072                           
  3073                           ;./lcd.h: 12:   RD5 = 1;
  3074  0454  1688               	bsf	8,5	;volatile
  3075  0455  2C57               	goto	l60
  3076  0456                     l59:	
  3077                           ;./lcd.h: 13:  else
  3078                           
  3079                           
  3080                           ;./lcd.h: 14:   RD5 = 0;
  3081  0456  1288               	bcf	8,5	;volatile
  3082  0457                     l60:
  3083                           
  3084                           ;./lcd.h: 16:  if(a & 4)
  3085  0457  1D73               	btfss	Lcd_Port@a,2
  3086  0458  2C5A               	goto	u1221
  3087  0459  2C5B               	goto	u1220
  3088  045A                     u1221:
  3089  045A  2C5D               	goto	l61
  3090  045B                     u1220:
  3091  045B                     l1538:
  3092                           
  3093                           ;./lcd.h: 17:   RD6 = 1;
  3094  045B  1708               	bsf	8,6	;volatile
  3095  045C  2C5E               	goto	l62
  3096  045D                     l61:	
  3097                           ;./lcd.h: 18:  else
  3098                           
  3099                           
  3100                           ;./lcd.h: 19:   RD6 = 0;
  3101  045D  1308               	bcf	8,6	;volatile
  3102  045E                     l62:
  3103                           
  3104                           ;./lcd.h: 21:  if(a & 8)
  3105  045E  1DF3               	btfss	Lcd_Port@a,3
  3106  045F  2C61               	goto	u1231
  3107  0460  2C62               	goto	u1230
  3108  0461                     u1231:
  3109  0461  2C64               	goto	l63
  3110  0462                     u1230:
  3111  0462                     l1540:
  3112                           
  3113                           ;./lcd.h: 22:   RD7 = 1;
  3114  0462  1788               	bsf	8,7	;volatile
  3115  0463  2C65               	goto	l65
  3116  0464                     l63:	
  3117                           ;./lcd.h: 23:  else
  3118                           
  3119                           
  3120                           ;./lcd.h: 24:   RD7 = 0;
  3121  0464  1388               	bcf	8,7	;volatile
  3122  0465                     l65:
  3123  0465  0008               	return
  3124  0466                     __end_of_Lcd_Port:
  3125                           
  3126                           	psect	text23
  3127  0501                     __ptext23:	
  3128 ;; *************** function _interrupcao *****************
  3129 ;; Defined at:
  3130 ;;		line 184 in file "main.c"
  3131 ;; Parameters:    Size  Location     Type
  3132 ;;		None
  3133 ;; Auto vars:     Size  Location     Type
  3134 ;;		None
  3135 ;; Return value:  Size  Location     Type
  3136 ;;                  1    wreg      void 
  3137 ;; Registers used:
  3138 ;;		wreg, status,2, status,0, pclath, cstack
  3139 ;; Tracked objects:
  3140 ;;		On entry : 0/0
  3141 ;;		On exit  : 0/0
  3142 ;;		Unchanged: 0/0
  3143 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3144 ;;      Params:         0       0       0       0       0
  3145 ;;      Locals:         0       0       0       0       0
  3146 ;;      Temps:          2       0       0       0       0
  3147 ;;      Totals:         2       0       0       0       0
  3148 ;;Total ram usage:        2 bytes
  3149 ;; Hardware stack levels used: 1
  3150 ;; Hardware stack levels required when called: 2
  3151 ;; This function calls:
  3152 ;;		_handleExternalInterruption
  3153 ;;		_handleTimerInterruption
  3154 ;; This function is called by:
  3155 ;;		Interrupt level 1
  3156 ;; This function uses a non-reentrant model
  3157 ;;
  3158                           
  3159  0501                     _interrupcao:	
  3160                           ;psect for function _interrupcao
  3161                           
  3162  0501                     i1l1446:
  3163                           
  3164                           ;main.c: 186:     handleTimerInterruption();
  3165  0501  120A  118A  2397  120A  118A  	fcall	_handleTimerInterruption
  3166                           
  3167                           ;main.c: 187:     handleExternalInterruption();
  3168  0506  120A  118A  2512  120A  118A  	fcall	_handleExternalInterruption
  3169  050B                     i1l134:
  3170  050B  0872               	movf	??_interrupcao+1,w
  3171  050C  008A               	movwf	10
  3172  050D  0E71               	swapf	??_interrupcao,w
  3173  050E  0083               	movwf	3
  3174  050F  0EFE               	swapf	btemp,f
  3175  0510  0E7E               	swapf	btemp,w
  3176  0511  0009               	retfie
  3177  0512                     __end_of_interrupcao:
  3178                           
  3179                           	psect	intentry
  3180  0004                     __pintentry:	
  3181                           ;incstack = 0
  3182                           ; Regs used in _interrupcao: [wreg+status,2+status,0+pclath+cstack]
  3183                           
  3184  0004                     interrupt_function:
  3185  007E                     saved_w	set	btemp
  3186  0004  00FE               	movwf	btemp
  3187  0005  0E03               	swapf	3,w
  3188  0006  00F1               	movwf	??_interrupcao
  3189  0007  080A               	movf	10,w
  3190  0008  00F2               	movwf	??_interrupcao+1
  3191  0009  120A  118A  2D01   	ljmp	_interrupcao
  3192                           
  3193                           	psect	text24
  3194  0397                     __ptext24:	
  3195 ;; *************** function _handleTimerInterruption *****************
  3196 ;; Defined at:
  3197 ;;		line 131 in file "main.c"
  3198 ;; Parameters:    Size  Location     Type
  3199 ;;		None
  3200 ;; Auto vars:     Size  Location     Type
  3201 ;;		None
  3202 ;; Return value:  Size  Location     Type
  3203 ;;                  1    wreg      void 
  3204 ;; Registers used:
  3205 ;;		wreg, status,2, status,0
  3206 ;; Tracked objects:
  3207 ;;		On entry : 0/0
  3208 ;;		On exit  : 0/0
  3209 ;;		Unchanged: 0/0
  3210 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3211 ;;      Params:         0       0       0       0       0
  3212 ;;      Locals:         0       0       0       0       0
  3213 ;;      Temps:          1       0       0       0       0
  3214 ;;      Totals:         1       0       0       0       0
  3215 ;;Total ram usage:        1 bytes
  3216 ;; Hardware stack levels used: 1
  3217 ;; This function calls:
  3218 ;;		Nothing
  3219 ;; This function is called by:
  3220 ;;		_interrupcao
  3221 ;; This function uses a non-reentrant model
  3222 ;;
  3223                           
  3224  0397                     _handleTimerInterruption:	
  3225                           ;psect for function _handleTimerInterruption
  3226                           
  3227  0397                     i1l1394:	
  3228                           ;incstack = 0
  3229                           ; Regs used in _handleTimerInterruption: [wreg+status,2+status,0]
  3230                           
  3231                           
  3232                           ;main.c: 133:     if(TMR1IF){
  3233  0397  1283               	bcf	3,5	;RP0=0, select bank0
  3234  0398  1303               	bcf	3,6	;RP1=0, select bank0
  3235  0399  1C0C               	btfss	12,0	;volatile
  3236  039A  2B9C               	goto	u104_21
  3237  039B  2B9D               	goto	u104_20
  3238  039C                     u104_21:
  3239  039C  2BCB               	goto	i1l121
  3240  039D                     u104_20:
  3241  039D                     i1l1396:
  3242                           
  3243                           ;main.c: 134:         if(irrigacao_ativa){
  3244  039D  0879               	movf	_irrigacao_ativa,w
  3245  039E  047A               	iorwf	_irrigacao_ativa+1,w
  3246  039F  1903               	btfsc	3,2
  3247  03A0  2BA2               	goto	u105_21
  3248  03A1  2BA3               	goto	u105_20
  3249  03A2                     u105_21:
  3250  03A2  2BC1               	goto	i1l1412
  3251  03A3                     u105_20:
  3252  03A3                     i1l1398:
  3253                           
  3254                           ;main.c: 135:             timer_counter++;
  3255  03A3  3001               	movlw	1
  3256  03A4  07C8               	addwf	_timer_counter,f
  3257  03A5  1803               	skipnc
  3258  03A6  0AC9               	incf	_timer_counter+1,f
  3259  03A7  3000               	movlw	0
  3260  03A8  07C9               	addwf	_timer_counter+1,f
  3261  03A9                     i1l1400:
  3262                           
  3263                           ;main.c: 136:             PORTBbits.RB1 = 1;
  3264  03A9  1486               	bsf	6,1	;volatile
  3265  03AA                     i1l1402:
  3266                           
  3267                           ;main.c: 137:             PORTBbits.RB6 = 1;
  3268  03AA  1706               	bsf	6,6	;volatile
  3269                           
  3270                           ;main.c: 138:             if(timer_counter_max <= timer_counter){
  3271  03AB  0849               	movf	_timer_counter+1,w
  3272  03AC  3A80               	xorlw	128
  3273  03AD  00F0               	movwf	??_handleTimerInterruption
  3274  03AE  0847               	movf	_timer_counter_max+1,w
  3275  03AF  3A80               	xorlw	128
  3276  03B0  0270               	subwf	??_handleTimerInterruption,w
  3277  03B1  1D03               	skipz
  3278  03B2  2BB5               	goto	u106_25
  3279  03B3  0846               	movf	_timer_counter_max,w
  3280  03B4  0248               	subwf	_timer_counter,w
  3281  03B5                     u106_25:
  3282  03B5  1C03               	skipc
  3283  03B6  2BB8               	goto	u106_21
  3284  03B7  2BB9               	goto	u106_20
  3285  03B8                     u106_21:
  3286  03B8  2BC4               	goto	i1l1416
  3287  03B9                     u106_20:
  3288  03B9                     i1l1404:
  3289                           
  3290                           ;main.c: 139:                 PORTBbits.RB1 = 0;
  3291  03B9  1283               	bcf	3,5	;RP0=0, select bank0
  3292  03BA  1303               	bcf	3,6	;RP1=0, select bank0
  3293  03BB  1086               	bcf	6,1	;volatile
  3294  03BC                     i1l1406:
  3295                           
  3296                           ;main.c: 140:                 irrigacao_ativa = 0;
  3297  03BC  01F9               	clrf	_irrigacao_ativa
  3298  03BD  01FA               	clrf	_irrigacao_ativa+1
  3299  03BE                     i1l1408:
  3300                           
  3301                           ;main.c: 141:                 PORTBbits.RB6 = 0;
  3302  03BE  1306               	bcf	6,6	;volatile
  3303  03BF                     i1l1410:
  3304                           
  3305                           ;main.c: 144:                 T1CONbits.TMR1ON = 0;
  3306  03BF  1010               	bcf	16,0	;volatile
  3307  03C0  2BC4               	goto	i1l1416
  3308  03C1                     i1l1412:
  3309                           
  3310                           ;main.c: 148:             timer_counter = 0;
  3311  03C1  01C8               	clrf	_timer_counter
  3312  03C2  01C9               	clrf	_timer_counter+1
  3313  03C3                     i1l1414:
  3314                           
  3315                           ;main.c: 149:             PORTBbits.RB1 = 0;
  3316  03C3  1086               	bcf	6,1	;volatile
  3317  03C4                     i1l1416:
  3318                           
  3319                           ;main.c: 151:         PIR1bits.TMR1IF = 0;
  3320  03C4  1283               	bcf	3,5	;RP0=0, select bank0
  3321  03C5  1303               	bcf	3,6	;RP1=0, select bank0
  3322  03C6  100C               	bcf	12,0	;volatile
  3323  03C7                     i1l1418:
  3324                           
  3325                           ;main.c: 152:         TMR1H = 0x0B;
  3326  03C7  300B               	movlw	11
  3327  03C8  008F               	movwf	15	;volatile
  3328  03C9                     i1l1420:
  3329                           
  3330                           ;main.c: 153:         TMR1L = 0xDC;
  3331  03C9  30DC               	movlw	220
  3332  03CA  008E               	movwf	14	;volatile
  3333  03CB                     i1l121:
  3334  03CB  0008               	return
  3335  03CC                     __end_of_handleTimerInterruption:
  3336                           
  3337                           	psect	text25
  3338  0512                     __ptext25:	
  3339 ;; *************** function _handleExternalInterruption *****************
  3340 ;; Defined at:
  3341 ;;		line 173 in file "main.c"
  3342 ;; Parameters:    Size  Location     Type
  3343 ;;		None
  3344 ;; Auto vars:     Size  Location     Type
  3345 ;;		None
  3346 ;; Return value:  Size  Location     Type
  3347 ;;                  1    wreg      void 
  3348 ;; Registers used:
  3349 ;;		wreg, status,2, status,0, pclath, cstack
  3350 ;; Tracked objects:
  3351 ;;		On entry : 0/0
  3352 ;;		On exit  : 0/0
  3353 ;;		Unchanged: 0/0
  3354 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3355 ;;      Params:         0       0       0       0       0
  3356 ;;      Locals:         0       0       0       0       0
  3357 ;;      Temps:          0       0       0       0       0
  3358 ;;      Totals:         0       0       0       0       0
  3359 ;;Total ram usage:        0 bytes
  3360 ;; Hardware stack levels used: 1
  3361 ;; Hardware stack levels required when called: 1
  3362 ;; This function calls:
  3363 ;;		i1_irrigar
  3364 ;; This function is called by:
  3365 ;;		_interrupcao
  3366 ;; This function uses a non-reentrant model
  3367 ;;
  3368                           
  3369  0512                     _handleExternalInterruption:	
  3370                           ;psect for function _handleExternalInterruption
  3371                           
  3372  0512                     i1l1424:	
  3373                           ;incstack = 0
  3374                           ; Regs used in _handleExternalInterruption: [wreg+status,2+status,0+pclath+cstack]
  3375                           
  3376                           
  3377                           ;main.c: 175:     if(INTF){
  3378  0512  1C8B               	btfss	11,1	;volatile
  3379  0513  2D15               	goto	u107_21
  3380  0514  2D16               	goto	u107_20
  3381  0515                     u107_21:
  3382  0515  2D22               	goto	i1l129
  3383  0516                     u107_20:
  3384  0516                     i1l1426:
  3385                           
  3386                           ;main.c: 176:         if(!irrigacao_ativa){
  3387  0516  0879               	movf	_irrigacao_ativa,w
  3388  0517  047A               	iorwf	_irrigacao_ativa+1,w
  3389  0518  1D03               	btfss	3,2
  3390  0519  2D1B               	goto	u108_21
  3391  051A  2D1C               	goto	u108_20
  3392  051B                     u108_21:
  3393  051B  2D21               	goto	i1l1430
  3394  051C                     u108_20:
  3395  051C                     i1l1428:
  3396                           
  3397                           ;main.c: 177:             irrigar();
  3398  051C  120A  118A  2546  120A  118A  	fcall	i1_irrigar
  3399  0521                     i1l1430:
  3400                           
  3401                           ;main.c: 179:         INTCONbits.INTF = 0;
  3402  0521  108B               	bcf	11,1	;volatile
  3403  0522                     i1l129:
  3404  0522  0008               	return
  3405  0523                     __end_of_handleExternalInterruption:
  3406                           
  3407                           	psect	text26
  3408  0546                     __ptext26:	
  3409 ;; *************** function i1_irrigar *****************
  3410 ;; Defined at:
  3411 ;;		line 159 in file "main.c"
  3412 ;; Parameters:    Size  Location     Type
  3413 ;;		None
  3414 ;; Auto vars:     Size  Location     Type
  3415 ;;		None
  3416 ;; Return value:  Size  Location     Type
  3417 ;;                  1    wreg      void 
  3418 ;; Registers used:
  3419 ;;		wreg, status,2
  3420 ;; Tracked objects:
  3421 ;;		On entry : 0/0
  3422 ;;		On exit  : 0/0
  3423 ;;		Unchanged: 0/0
  3424 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3425 ;;      Params:         0       0       0       0       0
  3426 ;;      Locals:         0       0       0       0       0
  3427 ;;      Temps:          0       0       0       0       0
  3428 ;;      Totals:         0       0       0       0       0
  3429 ;;Total ram usage:        0 bytes
  3430 ;; Hardware stack levels used: 1
  3431 ;; This function calls:
  3432 ;;		Nothing
  3433 ;; This function is called by:
  3434 ;;		_handleExternalInterruption
  3435 ;; This function uses a non-reentrant model
  3436 ;;
  3437                           
  3438  0546                     i1_irrigar:	
  3439                           ;psect for function i1_irrigar
  3440                           
  3441  0546                     i1l1338:	
  3442                           ;incstack = 0
  3443                           ; Regs used in i1_irrigar: [wreg+status,2]
  3444                           
  3445                           
  3446                           ;main.c: 160:     irrigacao_ativa = 1;
  3447  0546  3001               	movlw	1
  3448  0547  00F9               	movwf	_irrigacao_ativa
  3449  0548  3000               	movlw	0
  3450  0549  00FA               	movwf	_irrigacao_ativa+1
  3451  054A                     i1l1340:
  3452                           
  3453                           ;main.c: 161:     timer_counter = 0;
  3454  054A  1283               	bcf	3,5	;RP0=0, select bank0
  3455  054B  1303               	bcf	3,6	;RP1=0, select bank0
  3456  054C  01C8               	clrf	_timer_counter
  3457  054D  01C9               	clrf	_timer_counter+1
  3458  054E                     i1l1342:
  3459                           
  3460                           ;main.c: 164:     T1CONbits.TMR1ON = 1;
  3461  054E  1410               	bsf	16,0	;volatile
  3462  054F                     i1l124:
  3463  054F  0008               	return
  3464  0550                     __end_ofi1_irrigar:
  3465  007E                     btemp	set	126	;btemp
  3466  007E                     wtemp0	set	126

Data Sizes:
    Strings     22
    Constant    0
    Data        6
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      11
    BANK0            80     34      42
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 12
		 -> STR_2(CODE[12]), STR_1(CODE[10]), 


Critical Paths under _main in COMMON

    _main->_Lcd_Init
    _getADConverterValue->___fltol
    _getADConverterValue->___wmul
    ___xxtofl->___wmul
    _setupNewVolumeFlow->___wmul
    ___awdiv->___wmul
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _interrupcao in COMMON

    _interrupcao->_handleTimerInterruption

Critical Paths under _main in BANK0

    _verifySensor->_getADConverterValue
    _getADConverterValue->___xxtofl
    ___xxtofl->___awdiv
    _setupTimer->_setupNewVolumeFlow
    _setupNewVolumeFlow->_changeTimerMaxConter
    _changeTimerMaxConter->___awdiv

Critical Paths under _interrupcao in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _interrupcao in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _interrupcao in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _interrupcao in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    5030
                                             31 BANK0      3     3      0
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                           _setupADC
          _setupExternalInterruption
                         _setupTimer
                 _setupWatchdogTimer
                         _verifyMenu
                       _verifySensor
 ---------------------------------------------------------------------------------
 (1) _verifySensor                                         0     0      0    1938
                _getADConverterValue
                            _irrigar
 ---------------------------------------------------------------------------------
 (2) _irrigar                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _getADConverterValue                                  8     6      2    1938
                                             23 BANK0      8     6      2
                            ___awdiv
                            ___fltol
                             ___wmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     398
                                              9 BANK0     14    10      4
                            ___awdiv (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             11     7      4     305
                                              3 COMMON     6     2      4
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (1) _verifyMenu                                           0     0      0       0
                         _handleMenu
 ---------------------------------------------------------------------------------
 (2) _handleMenu                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setupWatchdogTimer                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setupTimer                                           0     0      0    1477
                 _setupNewVolumeFlow
 ---------------------------------------------------------------------------------
 (2) _setupNewVolumeFlow                                   4     2      2    1477
                                             11 BANK0      4     2      2
                             ___wmul
               _changeTimerMaxConter
 ---------------------------------------------------------------------------------
 (3) _changeTimerMaxConter                                 2     0      2     926
                                              9 BANK0      2     0      2
                            ___awdiv
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     805
                                              0 BANK0      9     5      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     396
                                              3 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) _setupExternalInterruption                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setupADC                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     3     3      0     456
                                              0 BANK0      3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0     254
                                              4 COMMON     4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       7     6      1     725
                                              7 COMMON     1     0      1
                                              0 BANK0      6     6      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     279
                                              7 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     155
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     155
                                              4 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0     124
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _interrupcao                                          2     2      0       0
                                              1 COMMON     2     2      0
         _handleExternalInterruption
            _handleTimerInterruption
 ---------------------------------------------------------------------------------
 (6) _handleTimerInterruption                              1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (6) _handleExternalInterruption                           0     0      0       0
                          i1_irrigar
 ---------------------------------------------------------------------------------
 (7) i1_irrigar                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _setupADC
   _setupExternalInterruption
   _setupTimer
     _setupNewVolumeFlow
       ___wmul
       _changeTimerMaxConter
         ___awdiv
           ___wmul (ARG)
   _setupWatchdogTimer
   _verifyMenu
     _handleMenu
   _verifySensor
     _getADConverterValue
       ___awdiv
       ___fltol
       ___wmul
       ___xxtofl
         ___awdiv (ARG)
         ___wmul (ARG)
     _irrigar

 _interrupcao (ROOT)
   _handleExternalInterruption
     i1_irrigar
   _handleTimerInterruption

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     22      2A       5       52.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      9       B       1       78.6%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      35      12        0.0%
ABS                  0      0      35       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Fri Mar 04 18:11:05 2022

                                 pc 0002                                  l60 0457  
                                l61 045D                                  l62 045E  
                                l63 0464                                  l71 052F  
                                l80 02AD                                  l65 0465  
                                l57 044D                                  l58 0450  
                                l59 0456                                  l83 0396  
                                l68 04BA                                  l77 035F  
                                l89 041E                        ___awdiv@sign 0026  
                                fsr 0004                 ___wmul@multiplicand 0075  
                   _irrigacao_ativa 0079                                 l111 0484  
                               l114 04D3                                 l108 0500  
                               l140 055C                                 l124 0545  
                               l150 03F2                                 l144 053B  
                               l152 03F5                                 l137 055B  
                               l155 055D                                 l147 0307  
                               l252 042B                                 l405 0250  
                               l158 04EA                                 l254 0443  
                               l445 015D                                 l438 0172  
                               l448 0172                                 l691 00A4  
                               l685 005F                                 l950 055C  
                               l687 00F6                                 l698 00C0  
                               l699 00CC                                 _RD2 0042  
                               _RD3 0043                                 _RD4 0044  
                               _RD5 0045                                 _RD6 0046  
                               _RD7 0047                                 u700 0425  
                               u540 0536                                 u701 0424  
                               u541 0535                                 u800 0151  
                               u801 0150                                 u730 043F  
                               u731 043E                                 u715 042C  
                               u820 0162                                 u740 0104  
                               u900 00AA                                 u725 0433  
                               u821 0161                                 u741 0103  
                               u901 00A9                                 u830 0167  
                               u750 011B                                 u831 0166  
                               u815 0154                                 u760 0131  
                               u920 00BA                                 u840 0043  
                               u761 0130                                 u921 00B9  
                               u841 0042                                 u770 0138  
                               u930 00C0                                 u850 0047  
                               u771 0137                                 u755 0116  
                               u931 00BF                                 u915 00AF  
                               u851 0046                                 u940 00C4  
                               u860 0067                                 u941 00C3  
                               u861 0066                                 u790 014A  
                               u950 00D9                                 u791 0149  
                               u960 00E9                                 u880 0088  
                               u785 013A                                 u961 00E8  
                               u881 0087                                 u970 00ED  
                               u971 00EC                                 u955 00D4  
                               u875 007A                                 u895 009C  
                               fsr0 0004        ??_handleExternalInterruption 0070  
                      ___fltol@exp1 0078                                l1200 0432  
                              l1202 0439                                l1210 0104  
                              l1204 043F                                l1060 0530  
                              l1220 012B                                l1062 0536  
                              l1230 0139                                l1222 012D  
                              l1214 010D                                l1080 04E6  
                              l1240 0162                                l1224 0131  
                              l1232 014B                                l1216 0122  
                              l1208 00F7                                l1082 04E7  
                              l1058 0556                                l1074 055D  
                              l1242 0167                                l1218 0123  
                              l1250 0057                                l1322 053C  
                              l1084 04E8                                l1076 04D4  
                              l1500 01FF                                l1260 0082  
                              l1252 0067                                l1244 003E  
                              l1324 0540                                l1086 04E9  
                              l1078 04E2                                l1510 0215  
                              l1502 0203                                l1238 0152  
                              l1270 00B6                                l1262 0089  
                              l1246 0043                                l1326 0544  
                              l1600 032C                                l1520 0235  
                              l1512 0219                                l1504 0205  
                              l1280 00E9                                l1272 00BA  
                              l1264 008D                                l1256 0070  
                              l1248 0047                                l1610 0357  
                              l1602 0335                                l1194 041F  
                              l1522 023C                                l1514 021D  
                              l1506 020B                                l1282 00ED  
                              l1274 00C4                                l1266 009B  
                              l1258 0075                                l1540 0462  
                              l1532 0445                                l1620 0274  
                              l1612 0251                                l1604 033B  
                              l1196 0421                                l1516 022E  
                              l1508 020E                                l1524 0242  
                              l1284 00EE                                l1276 00CE  
                              l1268 00AB                                l1534 0449  
                              l1550 04AB                                l1614 0257  
                              l1606 034C                                l1622 03F9  
                              l1198 0425                                l1526 0247  
                              l1518 0234                                l1542 04EB  
                              l1630 04BB                                l1278 00E4  
                              l1536 0454                                l1552 04AE  
                              l1616 0260                                l1608 0351  
                              l1560 036E                                l1624 03FC  
                              l1528 024C                                l1632 04C5  
                              l1640 03CC                                l1538 045B  
                              l1554 04B7                                l1546 04A2  
                              l1618 026E                                l1570 038C  
                              l1562 037C                                l1626 0409  
                              l1490 01EB                                l1634 04C9  
                              l1642 03D5                                l1548 04A5  
                              l1572 038F                                l1564 037F  
                              l1556 0361                                l1628 0411  
                              l1492 01EF                                l1636 04CA  
                              l1580 02AE                                l1644 03E9  
                              l1660 0180                                l1652 0173  
                              l1590 0523                                l1574 0393  
                              l1566 0383                                l1558 036B  
                              l1494 01F4                                l1582 02B1  
                              l1646 03EC                                l1670 0198  
                              l1662 0181                                l1654 0179  
                              l1592 030B                                l1568 0386  
                              l1496 01F6                                l1488 01E8  
                              l1576 0466                                l1584 02B8  
                              l1680 01B4                                l1672 019D  
                              l1664 0184                                l1656 017A  
                              l1594 0310                                l1498 01FA  
                              l1586 02F4                                l1682 01BA  
                              l1674 01A2                                l1666 0189  
                              l1658 017D                                l1596 0321  
                              l1684 01C8                                l1676 01A7  
                              l1668 018E                                l1598 0326  
                              l1686 01D0                                l1678 01AC  
                              l1688 01D6          __end_of_setupNewVolumeFlow 0485  
                              STR_1 0497                                STR_2 048B  
                              u1100 01EF                                u1101 01EE  
                              u1110 01FA                                u1111 01F9  
                              u1200 0449                                u1120 020B  
                              u1201 0448                                u1121 020A  
                              u1210 0454                                u1211 0453  
                              u1220 045B                                u1140 021D  
                              u1300 03E9                                u1221 045A  
                              u1141 021C                                u1301 03E8  
                              u1230 0462                                u1231 0461  
                              u1135 020F                                u1160 022E  
                              u1161 022D                                u1305 03E5  
                              u1250 0310                                u1251 030F  
                              u1155 021E                                u1180 0242  
                              u1245 0371                                u1181 0241  
                              u1165 022A                                u1317 01C2  
                              u1270 033B                                u1190 0247  
                              u1271 033A                                u1191 0246  
                              u1175 0236                                u1327 01DE  
                              u1265 0318                                u1337 02B5  
                              u1290 041E                                u1347 0381  
                              u1291 041D                                u1285 0343  
                              u1357 0391                                u1367 025B  
                              u1377 026A                                u1387 0278  
                              u1397 04B2                                _INTF 0059  
             ??_getADConverterValue 0039                   ?_Lcd_Write_String 0070  
                              _main 0173                                btemp 007E  
                              start 000C                  ??_Lcd_Write_String 0078  
                   __end_of_Lcd_Cmd 04BB         ?_handleExternalInterruption 0070  
                     ___fltol@sign1 0077                               ?_main 0070  
                   __end_of___awdiv 0251                     __end_of___fltol 0173  
                   ___awdiv@divisor 0020                               i1l121 03CB  
                             i1l124 054F                               i1l134 050B  
                             i1l129 0522                     ___awdiv@counter 0025  
                             _TMR1H 000F                               _TMR1L 000E  
                             _PORTB 0006                               _PORTC 0007  
                             _TRISA 0085                               _TRISB 0086  
                             _TRISC 0087                               _TRISD 0088  
                             _MLxMS 0042                   _timer_counter_max 0046  
                   __end_of_irrigar 0546                               pclath 000A  
                             status 0003                               wtemp0 007E  
                  __end_of_Lcd_Init 02AE                    __end_of_Lcd_Port 0466  
                   __initialization 000F                        ?_interrupcao 0070  
                      __end_of_main 01E8                              ??_main 003F  
          setupNewVolumeFlow@new_ml 002B            setupNewVolumeFlow@new_ms 002D  
          ?_handleTimerInterruption 0070                              _ADRESH 001E  
                            _ADRESL 009E                    ___awdiv@dividend 0022  
                            i1l1400 03A9                              i1l1410 03BF  
                            i1l1402 03AA                              i1l1340 054A  
                            i1l1420 03C9                              i1l1404 03B9  
                            i1l1412 03C1                              i1l1342 054E  
                            i1l1430 0521                              i1l1414 03C3  
                            i1l1406 03BC                              i1l1424 0512  
                            i1l1408 03BE                              i1l1416 03C4  
                            u104_20 039D                              u104_21 039C  
                            i1l1338 0546                              i1l1426 0516  
                            i1l1418 03C7                              i1l1428 051C  
                            i1l1446 0501                              u105_20 03A3  
                            u105_21 03A2                              i1l1394 0397  
                            i1l1396 039D                              i1l1398 03A3  
                            u106_20 03B9                              u106_21 03B8  
                            u106_25 03B5                              u107_20 0516  
                            u107_21 0515                              u108_20 051C  
                            u108_21 051B                           ??_Lcd_Cmd 0074  
                            _TMR1IF 0060                    __end_of___xxtofl 00F7  
 __end_of_setupExternalInterruption 055C                              ___wmul 041F  
                         ??___awdiv 0024                           ??___fltol 0020  
                  ___awdiv@quotient 0027                    __end_of_setupADC 04EB  
                         ??_irrigar 0073                              saved_w 007E  
                   Lcd_Set_Cursor@a 0022                     Lcd_Set_Cursor@b 0077  
                   Lcd_Set_Cursor@y 0024                     Lcd_Set_Cursor@z 0023  
                 __end_ofi1_irrigar 0550                        ___xxtofl@arg 0033  
                      ___xxtofl@exp 0032                        ___xxtofl@val 0029  
           __end_of__initialization 0037                   __end_of_Lcd_Clear 0530  
                        ___fltol@f1 0073                      __pcstackCOMMON 0070  
                      __pidataBANK0 0550                      _Lcd_Set_Cursor 0308  
                    _OPTION_REGbits 0081                           ?_Lcd_Init 0070  
                         ?_Lcd_Port 0070                          __pbssBANK0 0048  
                        __pmaintext 0173                  _setupNewVolumeFlow 0466  
                           ?___wmul 0073        __end_of_changeTimerMaxConter 0501  
                        __pintentry 0004                          _handleMenu 055C  
            __end_of_Lcd_Set_Cursor 0360                 ?_setupNewVolumeFlow 002B  
                         ?___xxtofl 0029         __end_of_getADConverterValue 0308  
                        ??_Lcd_Init 0077                          ??_Lcd_Port 0073  
                        __stringtab 0485                      _Lcd_Write_Char 0360  
                           _Lcd_Cmd 04A1                ??_setupNewVolumeFlow 0079  
                         ?_setupADC 0070                             ___awdiv 01E8  
                           ___fltol 00F7                     ?_Lcd_Set_Cursor 0077  
                           __ptext1 03CC                             __ptext2 053C  
                           __ptext3 02AE                             __ptext4 003B  
                           __ptext5 00F7                             __ptext6 0530  
                           __ptext7 055C                             __ptext8 055D  
                           __ptext9 04BB                           _T1CONbits 0010  
                        ??___xxtofl 002D                             _irrigar 053C  
            __end_of_Lcd_Write_Char 0397                end_of_initialization 0037  
                        ??_setupADC 0073                           Lcd_Port@a 0073  
                       ?_handleMenu 0070                           _PORTBbits 0006  
                        _setupTimer 04BB                          _verifyMenu 0530  
                     ___xxtofl@sign 0031                     ?_Lcd_Write_Char 0070  
                 Lcd_Write_String@a 0022                   Lcd_Write_String@i 0020  
              _changeTimerMaxConter 04EB          __end_of_setupWatchdogTimer 055E  
                     ?_verifySensor 0070                           i1_irrigar 0546  
        ?_setupExternalInterruption 0070                           _Lcd_Clear 0523  
                    __end_of___wmul 0444                    _Lcd_Write_String 03F6  
               start_initialization 000F               ?_changeTimerMaxConter 0029  
                    ??_verifySensor 0079                          ?i1_irrigar 0070  
                        ?_Lcd_Clear 0070                            ??___wmul 0077  
                       __pdataBANK0 0042          getADConverterValue@leitura 003B  
                   Lcd_Write_Char@a 0077                     Lcd_Write_Char@y 0076  
                       ?_setupTimer 0070                         __pbssCOMMON 0079  
                       ?_verifyMenu 0070                           ___latbits 0002  
                     __pcstackBANK0 0020                            ?_Lcd_Cmd 0070  
           _handleTimerInterruption 0397                       ??_interrupcao 0071  
                  ??_Lcd_Set_Cursor 0020                            ?___awdiv 0020  
                          ?___fltol 0073                           __pstrings 0485  
                          ?_irrigar 0070              ??_changeTimerMaxConter 0079  
                 interrupt_function 0004                      ___wmul@product 0077  
                          _PIE1bits 008C                         ??i1_irrigar 0070  
                          Lcd_Cmd@a 0076                            _PIR1bits 000C  
                       ??_Lcd_Clear 0077                        ??_handleMenu 0073  
               __end_of_interrupcao 0512                          _ADCON0bits 001F  
                       __stringbase 048A                          _ADCON1bits 009F  
                 ___wmul@multiplier 0073                __end_of_verifySensor 03F6  
                  ??_Lcd_Write_Char 0074                            _Lcd_Init 0251  
                          _Lcd_Port 0444           ??_handleTimerInterruption 0070  
          __end_of_Lcd_Write_String 041F                  __end_of_handleMenu 055D  
       ??_setupExternalInterruption 0073                  _setupWatchdogTimer 055D  
__end_of_handleExternalInterruption 0523          _handleExternalInterruption 0512  
                __end_of__stringtab 048B                            ___xxtofl 003B  
               ?_setupWatchdogTimer 0070                            __ptext10 0466  
                          __ptext11 04EB                            __ptext20 0523  
                          __ptext12 01E8                            __ptext21 04A1  
                          __ptext13 041F                            __ptext22 0444  
                          __ptext14 0556                            __ptext23 0501  
                          __ptext15 04D4                            __ptext24 0397  
                          __ptext16 03F6                            __ptext25 0512  
                          __ptext17 0360                            __ptext26 0546  
                          __ptext18 0308                            __ptext19 0251  
        changeTimerMaxConter@mili_s 0029                ??_setupWatchdogTimer 0073  
                          _setupADC 04D4                         _interrupcao 0501  
   __end_of_handleTimerInterruption 03CC                      _umidade_minima 0044  
                     _timer_counter 0048                        ??_setupTimer 0079  
                        _INTCONbits 000B                        ??_verifyMenu 0073  
         _setupExternalInterruption 0556                  Lcd_Write_Char@temp 0075  
                          intlevel1 0000                  __end_of_setupTimer 04D4  
                         stringcode 0485                  __end_of_verifyMenu 053C  
                Lcd_Set_Cursor@temp 0025                 _getADConverterValue 02AE  
                          stringdir 0485                            stringtab 0485  
              ?_getADConverterValue 0037                        _verifySensor 03CC  
