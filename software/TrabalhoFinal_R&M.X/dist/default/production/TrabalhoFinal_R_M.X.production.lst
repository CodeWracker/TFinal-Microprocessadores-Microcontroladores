

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Fri Mar 04 17:31:35 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text14,local,class=CODE,merge=1,delta=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2
    32                           	psect	text20,local,class=CODE,merge=1,delta=2
    33                           	psect	text21,local,class=CODE,merge=1,delta=2
    34                           	psect	text22,local,class=CODE,merge=1,delta=2
    35                           	psect	text23,local,class=CODE,merge=1,delta=2
    36                           	psect	intentry,global,class=CODE,delta=2
    37                           	psect	text24,local,class=CODE,merge=1,delta=2
    38                           	psect	text25,local,class=CODE,merge=1,delta=2
    39                           	psect	text26,local,class=CODE,merge=1,delta=2
    40                           	dabs	1,0x7E,2
    41  0000                     
    42                           ; Version 2.20
    43                           ; Generated 12/02/2020 GMT
    44                           ; 
    45                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    46                           ; All rights reserved.
    47                           ; 
    48                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    49                           ; 
    50                           ; Redistribution and use in source and binary forms, with or without modification, are
    51                           ; permitted provided that the following conditions are met:
    52                           ; 
    53                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    54                           ;        conditions and the following disclaimer.
    55                           ; 
    56                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    57                           ;        of conditions and the following disclaimer in the documentation and/or other
    58                           ;        materials provided with the distribution.
    59                           ; 
    60                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    61                           ;        software without specific prior written permission.
    62                           ; 
    63                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    64                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    65                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    66                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    67                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    68                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    69                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    70                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    71                           ; 
    72                           ; 
    73                           ; Code-generator required, PIC16F877A Definitions
    74                           ; 
    75                           ; SFR Addresses
    76  0000                     	;# 
    77  0001                     	;# 
    78  0002                     	;# 
    79  0003                     	;# 
    80  0004                     	;# 
    81  0005                     	;# 
    82  0006                     	;# 
    83  0007                     	;# 
    84  0008                     	;# 
    85  0009                     	;# 
    86  000A                     	;# 
    87  000B                     	;# 
    88  000C                     	;# 
    89  000D                     	;# 
    90  000E                     	;# 
    91  000E                     	;# 
    92  000F                     	;# 
    93  0010                     	;# 
    94  0011                     	;# 
    95  0012                     	;# 
    96  0013                     	;# 
    97  0014                     	;# 
    98  0015                     	;# 
    99  0015                     	;# 
   100  0016                     	;# 
   101  0017                     	;# 
   102  0018                     	;# 
   103  0019                     	;# 
   104  001A                     	;# 
   105  001B                     	;# 
   106  001B                     	;# 
   107  001C                     	;# 
   108  001D                     	;# 
   109  001E                     	;# 
   110  001F                     	;# 
   111  0081                     	;# 
   112  0085                     	;# 
   113  0086                     	;# 
   114  0087                     	;# 
   115  0088                     	;# 
   116  0089                     	;# 
   117  008C                     	;# 
   118  008D                     	;# 
   119  008E                     	;# 
   120  0091                     	;# 
   121  0092                     	;# 
   122  0093                     	;# 
   123  0094                     	;# 
   124  0098                     	;# 
   125  0099                     	;# 
   126  009C                     	;# 
   127  009D                     	;# 
   128  009E                     	;# 
   129  009F                     	;# 
   130  010C                     	;# 
   131  010D                     	;# 
   132  010E                     	;# 
   133  010F                     	;# 
   134  018C                     	;# 
   135  018D                     	;# 
   136  0000                     	;# 
   137  0001                     	;# 
   138  0002                     	;# 
   139  0003                     	;# 
   140  0004                     	;# 
   141  0005                     	;# 
   142  0006                     	;# 
   143  0007                     	;# 
   144  0008                     	;# 
   145  0009                     	;# 
   146  000A                     	;# 
   147  000B                     	;# 
   148  000C                     	;# 
   149  000D                     	;# 
   150  000E                     	;# 
   151  000E                     	;# 
   152  000F                     	;# 
   153  0010                     	;# 
   154  0011                     	;# 
   155  0012                     	;# 
   156  0013                     	;# 
   157  0014                     	;# 
   158  0015                     	;# 
   159  0015                     	;# 
   160  0016                     	;# 
   161  0017                     	;# 
   162  0018                     	;# 
   163  0019                     	;# 
   164  001A                     	;# 
   165  001B                     	;# 
   166  001B                     	;# 
   167  001C                     	;# 
   168  001D                     	;# 
   169  001E                     	;# 
   170  001F                     	;# 
   171  0081                     	;# 
   172  0085                     	;# 
   173  0086                     	;# 
   174  0087                     	;# 
   175  0088                     	;# 
   176  0089                     	;# 
   177  008C                     	;# 
   178  008D                     	;# 
   179  008E                     	;# 
   180  0091                     	;# 
   181  0092                     	;# 
   182  0093                     	;# 
   183  0094                     	;# 
   184  0098                     	;# 
   185  0099                     	;# 
   186  009C                     	;# 
   187  009D                     	;# 
   188  009E                     	;# 
   189  009F                     	;# 
   190  010C                     	;# 
   191  010D                     	;# 
   192  010E                     	;# 
   193  010F                     	;# 
   194  018C                     	;# 
   195  018D                     	;# 
   196                           
   197                           	psect	idataBANK0
   198  054A                     __pidataBANK0:
   199                           
   200                           ;initializer for _MLxMS
   201  054A  3419               	retlw	25
   202  054B  3400               	retlw	0
   203                           
   204                           ;initializer for _umidade_minima
   205  054C  340A               	retlw	10
   206  054D  3400               	retlw	0
   207                           
   208                           ;initializer for _timer_counter_max
   209  054E  340A               	retlw	10
   210  054F  3400               	retlw	0
   211  0006                     _PORTB	set	6
   212  0008                     _PORTD	set	8
   213  001F                     _ADCON0bits	set	31
   214  000C                     _PIR1bits	set	12
   215  0006                     _PORTBbits	set	6
   216  000E                     _TMR1L	set	14
   217  000F                     _TMR1H	set	15
   218  0010                     _T1CONbits	set	16
   219  000B                     _INTCONbits	set	11
   220  001E                     _ADRESH	set	30
   221  0059                     _INTF	set	89
   222  0060                     _TMR1IF	set	96
   223  0043                     _RD3	set	67
   224  0042                     _RD2	set	66
   225  0047                     _RD7	set	71
   226  0046                     _RD6	set	70
   227  0045                     _RD5	set	69
   228  0044                     _RD4	set	68
   229  0088                     _TRISD	set	136
   230  0086                     _TRISB	set	134
   231  0085                     _TRISA	set	133
   232  009E                     _ADRESL	set	158
   233  009F                     _ADCON1bits	set	159
   234  0081                     _OPTION_REGbits	set	129
   235  008C                     _PIE1bits	set	140
   236                           
   237                           	psect	strings
   238  047F                     __pstrings:
   239  047F                     stringtab:
   240  047F                     __stringtab:
   241  047F                     stringcode:	
   242                           ;	String table - string pointers are 1 byte each
   243                           
   244  047F                     stringdir:
   245  047F  3004               	movlw	high stringdir
   246  0480  008A               	movwf	10
   247  0481  0804               	movf	4,w
   248  0482  0A84               	incf	4,f
   249  0483  0782               	addwf	2,f
   250  0484                     __stringbase:
   251  0484  3400               	retlw	0
   252  0485                     __end_of__stringtab:
   253  0485                     STR_2:
   254  0485  344D               	retlw	77	;'M'
   255  0486  3455               	retlw	85	;'U'
   256  0487  344E               	retlw	78	;'N'
   257  0488  3444               	retlw	68	;'D'
   258  0489  344F               	retlw	79	;'O'
   259  048A  3420               	retlw	32	;' '
   260  048B  3444               	retlw	68	;'D'
   261  048C  344F               	retlw	79	;'O'
   262  048D  3449               	retlw	73	;'I'
   263  048E  3444               	retlw	68	;'D'
   264  048F  344F               	retlw	79	;'O'
   265  0490  3400               	retlw	0
   266  0491                     STR_1:
   267  0491  344F               	retlw	79	;'O'
   268  0492  344C               	retlw	76	;'L'
   269  0493  3441               	retlw	65	;'A'
   270  0494  3420               	retlw	32	;' '
   271  0495  344D               	retlw	77	;'M'
   272  0496  3455               	retlw	85	;'U'
   273  0497  344E               	retlw	78	;'N'
   274  0498  3444               	retlw	68	;'D'
   275  0499  344F               	retlw	79	;'O'
   276  049A  3400               	retlw	0
   277                           
   278                           	psect	cinit
   279  000F                     start_initialization:	
   280                           ; #config settings
   281                           
   282  000F                     __initialization:
   283                           
   284                           ; Initialize objects allocated to BANK0
   285  000F  120A  118A  254A  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   286  0014  00C2               	movwf	__pdataBANK0& (0+127)
   287  0015  120A  118A  254B  120A  118A  	fcall	__pidataBANK0+1	;fetch initializer
   288  001A  00C3               	movwf	(__pdataBANK0+1)& (0+127)
   289  001B  120A  118A  254C  120A  118A  	fcall	__pidataBANK0+2	;fetch initializer
   290  0020  00C4               	movwf	(__pdataBANK0+2)& (0+127)
   291  0021  120A  118A  254D  120A  118A  	fcall	__pidataBANK0+3	;fetch initializer
   292  0026  00C5               	movwf	(__pdataBANK0+3)& (0+127)
   293  0027  120A  118A  254E  120A  118A  	fcall	__pidataBANK0+4	;fetch initializer
   294  002C  00C6               	movwf	(__pdataBANK0+4)& (0+127)
   295  002D  120A  118A  254F  120A  118A  	fcall	__pidataBANK0+5	;fetch initializer
   296  0032  00C7               	movwf	(__pdataBANK0+5)& (0+127)
   297                           
   298                           ; Clear objects allocated to BANK0
   299  0033  01C8               	clrf	__pbssBANK0& (0+127)
   300  0034  01C9               	clrf	(__pbssBANK0+1)& (0+127)
   301                           
   302                           ; Clear objects allocated to COMMON
   303  0035  01F9               	clrf	__pbssCOMMON& (0+127)
   304  0036  01FA               	clrf	(__pbssCOMMON+1)& (0+127)
   305  0037                     end_of_initialization:	
   306                           ;End of C runtime variable initialization code
   307                           
   308  0037                     __end_of__initialization:
   309  0037  0183               	clrf	3
   310  0038  120A  118A  2973   	ljmp	_main	;jump to C main() function
   311                           
   312                           	psect	bssCOMMON
   313  0079                     __pbssCOMMON:
   314  0079                     _irrigacao_ativa:
   315  0079                     	ds	2
   316                           
   317                           	psect	bssBANK0
   318  0048                     __pbssBANK0:
   319  0048                     _timer_counter:
   320  0048                     	ds	2
   321                           
   322                           	psect	dataBANK0
   323  0042                     __pdataBANK0:
   324  0042                     _MLxMS:
   325  0042                     	ds	2
   326  0044                     _umidade_minima:
   327  0044                     	ds	2
   328  0046                     _timer_counter_max:
   329  0046                     	ds	2
   330                           
   331                           	psect	cstackCOMMON
   332  0070                     __pcstackCOMMON:
   333  0070                     ?_Lcd_Port:
   334  0070                     ?_Lcd_Cmd:	
   335                           ; 1 bytes @ 0x0
   336                           
   337  0070                     ?_Lcd_Clear:	
   338                           ; 1 bytes @ 0x0
   339                           
   340  0070                     ?_Lcd_Init:	
   341                           ; 1 bytes @ 0x0
   342                           
   343  0070                     ?_Lcd_Write_Char:	
   344                           ; 1 bytes @ 0x0
   345                           
   346  0070                     ?_Lcd_Write_String:	
   347                           ; 1 bytes @ 0x0
   348                           
   349  0070                     ?_setupTimer:	
   350                           ; 1 bytes @ 0x0
   351                           
   352  0070                     ?_handleTimerInterruption:	
   353                           ; 1 bytes @ 0x0
   354                           
   355  0070                     ??_handleTimerInterruption:	
   356                           ; 1 bytes @ 0x0
   357                           
   358  0070                     ?_irrigar:	
   359                           ; 1 bytes @ 0x0
   360                           
   361  0070                     ?_handleExternalInterruption:	
   362                           ; 1 bytes @ 0x0
   363                           
   364  0070                     ??_handleExternalInterruption:	
   365                           ; 1 bytes @ 0x0
   366                           
   367  0070                     ?_interrupcao:	
   368                           ; 1 bytes @ 0x0
   369                           
   370  0070                     ?_setupExternalInterruption:	
   371                           ; 1 bytes @ 0x0
   372                           
   373  0070                     ?_handleMenu:	
   374                           ; 1 bytes @ 0x0
   375                           
   376  0070                     ?_verifyMenu:	
   377                           ; 1 bytes @ 0x0
   378                           
   379  0070                     ?_verifySensor:	
   380                           ; 1 bytes @ 0x0
   381                           
   382  0070                     ?_setupWatchdogTimer:	
   383                           ; 1 bytes @ 0x0
   384                           
   385  0070                     ?_setupADC:	
   386                           ; 1 bytes @ 0x0
   387                           
   388  0070                     ?_main:	
   389                           ; 1 bytes @ 0x0
   390                           
   391  0070                     ?i1_irrigar:	
   392                           ; 1 bytes @ 0x0
   393                           
   394  0070                     ??i1_irrigar:	
   395                           ; 1 bytes @ 0x0
   396                           
   397                           
   398                           ; 1 bytes @ 0x0
   399  0070                     	ds	1
   400  0071                     ??_interrupcao:
   401                           
   402                           ; 1 bytes @ 0x1
   403  0071                     	ds	2
   404  0073                     ??_Lcd_Port:
   405  0073                     ??_irrigar:	
   406                           ; 1 bytes @ 0x3
   407                           
   408  0073                     ??_setupExternalInterruption:	
   409                           ; 1 bytes @ 0x3
   410                           
   411  0073                     ??_handleMenu:	
   412                           ; 1 bytes @ 0x3
   413                           
   414  0073                     ??_verifyMenu:	
   415                           ; 1 bytes @ 0x3
   416                           
   417  0073                     ??_setupWatchdogTimer:	
   418                           ; 1 bytes @ 0x3
   419                           
   420  0073                     ??_setupADC:	
   421                           ; 1 bytes @ 0x3
   422                           
   423  0073                     ?___wmul:	
   424                           ; 1 bytes @ 0x3
   425                           
   426  0073                     ?___fltol:	
   427                           ; 2 bytes @ 0x3
   428                           
   429  0073                     Lcd_Port@a:	
   430                           ; 4 bytes @ 0x3
   431                           
   432  0073                     ___wmul@multiplier:	
   433                           ; 1 bytes @ 0x3
   434                           
   435  0073                     ___fltol@f1:	
   436                           ; 2 bytes @ 0x3
   437                           
   438                           
   439                           ; 4 bytes @ 0x3
   440  0073                     	ds	1
   441  0074                     ??_Lcd_Cmd:
   442  0074                     ??_Lcd_Write_Char:	
   443                           ; 1 bytes @ 0x4
   444                           
   445                           
   446                           ; 1 bytes @ 0x4
   447  0074                     	ds	1
   448  0075                     Lcd_Write_Char@temp:
   449  0075                     ___wmul@multiplicand:	
   450                           ; 1 bytes @ 0x5
   451                           
   452                           
   453                           ; 2 bytes @ 0x5
   454  0075                     	ds	1
   455  0076                     Lcd_Cmd@a:
   456  0076                     Lcd_Write_Char@y:	
   457                           ; 1 bytes @ 0x6
   458                           
   459                           
   460                           ; 1 bytes @ 0x6
   461  0076                     	ds	1
   462  0077                     ??_Lcd_Clear:
   463  0077                     ?_Lcd_Set_Cursor:	
   464                           ; 1 bytes @ 0x7
   465                           
   466  0077                     ??_Lcd_Init:	
   467                           ; 1 bytes @ 0x7
   468                           
   469  0077                     ??___wmul:	
   470                           ; 1 bytes @ 0x7
   471                           
   472  0077                     Lcd_Set_Cursor@b:	
   473                           ; 1 bytes @ 0x7
   474                           
   475  0077                     Lcd_Write_Char@a:	
   476                           ; 1 bytes @ 0x7
   477                           
   478  0077                     ___fltol@sign1:	
   479                           ; 1 bytes @ 0x7
   480                           
   481  0077                     ___wmul@product:	
   482                           ; 1 bytes @ 0x7
   483                           
   484                           
   485                           ; 2 bytes @ 0x7
   486  0077                     	ds	1
   487  0078                     ??_Lcd_Write_String:
   488  0078                     ___fltol@exp1:	
   489                           ; 1 bytes @ 0x8
   490                           
   491                           
   492                           ; 1 bytes @ 0x8
   493  0078                     	ds	1
   494  0079                     ??_changeTimerMaxConter:
   495  0079                     ??_setupNewVolumeFlow:	
   496                           ; 1 bytes @ 0x9
   497                           
   498  0079                     ??_setupTimer:	
   499                           ; 1 bytes @ 0x9
   500                           
   501  0079                     ??_verifySensor:	
   502                           ; 1 bytes @ 0x9
   503                           
   504                           
   505                           	psect	cstackBANK0
   506  0020                     __pcstackBANK0:	
   507                           ; 1 bytes @ 0x9
   508                           
   509  0020                     ??_Lcd_Set_Cursor:
   510  0020                     ??___fltol:	
   511                           ; 1 bytes @ 0x0
   512                           
   513  0020                     ?___awdiv:	
   514                           ; 1 bytes @ 0x0
   515                           
   516  0020                     Lcd_Write_String@i:	
   517                           ; 2 bytes @ 0x0
   518                           
   519  0020                     ___awdiv@divisor:	
   520                           ; 2 bytes @ 0x0
   521                           
   522                           
   523                           ; 2 bytes @ 0x0
   524  0020                     	ds	2
   525  0022                     Lcd_Set_Cursor@a:
   526  0022                     Lcd_Write_String@a:	
   527                           ; 1 bytes @ 0x2
   528                           
   529  0022                     ___awdiv@dividend:	
   530                           ; 1 bytes @ 0x2
   531                           
   532                           
   533                           ; 2 bytes @ 0x2
   534  0022                     	ds	1
   535  0023                     Lcd_Set_Cursor@z:
   536                           
   537                           ; 1 bytes @ 0x3
   538  0023                     	ds	1
   539  0024                     ??___awdiv:
   540  0024                     Lcd_Set_Cursor@y:	
   541                           ; 1 bytes @ 0x4
   542                           
   543                           
   544                           ; 1 bytes @ 0x4
   545  0024                     	ds	1
   546  0025                     Lcd_Set_Cursor@temp:
   547  0025                     ___awdiv@counter:	
   548                           ; 1 bytes @ 0x5
   549                           
   550                           
   551                           ; 1 bytes @ 0x5
   552  0025                     	ds	1
   553  0026                     ___awdiv@sign:
   554                           
   555                           ; 1 bytes @ 0x6
   556  0026                     	ds	1
   557  0027                     ___awdiv@quotient:
   558                           
   559                           ; 2 bytes @ 0x7
   560  0027                     	ds	2
   561  0029                     ?_changeTimerMaxConter:
   562  0029                     ?___xxtofl:	
   563                           ; 1 bytes @ 0x9
   564                           
   565  0029                     changeTimerMaxConter@mili_s:	
   566                           ; 4 bytes @ 0x9
   567                           
   568  0029                     ___xxtofl@val:	
   569                           ; 2 bytes @ 0x9
   570                           
   571                           
   572                           ; 4 bytes @ 0x9
   573  0029                     	ds	2
   574  002B                     ?_setupNewVolumeFlow:
   575  002B                     setupNewVolumeFlow@new_ml:	
   576                           ; 1 bytes @ 0xB
   577                           
   578                           
   579                           ; 2 bytes @ 0xB
   580  002B                     	ds	2
   581  002D                     ??___xxtofl:
   582  002D                     setupNewVolumeFlow@new_ms:	
   583                           ; 1 bytes @ 0xD
   584                           
   585                           
   586                           ; 2 bytes @ 0xD
   587  002D                     	ds	4
   588  0031                     ___xxtofl@sign:
   589                           
   590                           ; 1 bytes @ 0x11
   591  0031                     	ds	1
   592  0032                     ___xxtofl@exp:
   593                           
   594                           ; 1 bytes @ 0x12
   595  0032                     	ds	1
   596  0033                     ___xxtofl@arg:
   597                           
   598                           ; 4 bytes @ 0x13
   599  0033                     	ds	4
   600  0037                     ?_getADConverterValue:
   601                           
   602                           ; 2 bytes @ 0x17
   603  0037                     	ds	2
   604  0039                     ??_getADConverterValue:
   605                           
   606                           ; 1 bytes @ 0x19
   607  0039                     	ds	2
   608  003B                     getADConverterValue@leitura:
   609                           
   610                           ; 4 bytes @ 0x1B
   611  003B                     	ds	4
   612  003F                     ??_main:
   613                           
   614                           ; 1 bytes @ 0x1F
   615  003F                     	ds	3
   616                           
   617                           	psect	maintext
   618  0173                     __pmaintext:	
   619 ;;
   620 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   621 ;;
   622 ;; *************** function _main *****************
   623 ;; Defined at:
   624 ;;		line 279 in file "main.c"
   625 ;; Parameters:    Size  Location     Type
   626 ;;		None
   627 ;; Auto vars:     Size  Location     Type
   628 ;;  a               2    0        int 
   629 ;; Return value:  Size  Location     Type
   630 ;;                  1    wreg      void 
   631 ;; Registers used:
   632 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   633 ;; Tracked objects:
   634 ;;		On entry : B00/0
   635 ;;		On exit  : 0/0
   636 ;;		Unchanged: 0/0
   637 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   638 ;;      Params:         0       0       0       0       0
   639 ;;      Locals:         0       0       0       0       0
   640 ;;      Temps:          0       3       0       0       0
   641 ;;      Totals:         0       3       0       0       0
   642 ;;Total ram usage:        3 bytes
   643 ;; Hardware stack levels required when called: 7
   644 ;; This function calls:
   645 ;;		_Lcd_Clear
   646 ;;		_Lcd_Init
   647 ;;		_Lcd_Set_Cursor
   648 ;;		_Lcd_Write_String
   649 ;;		_setupADC
   650 ;;		_setupExternalInterruption
   651 ;;		_setupTimer
   652 ;;		_setupWatchdogTimer
   653 ;;		_verifyMenu
   654 ;;		_verifySensor
   655 ;; This function is called by:
   656 ;;		Startup code after reset
   657 ;; This function uses a non-reentrant model
   658 ;;
   659                           
   660  0173                     _main:	
   661                           ;psect for function _main
   662                           
   663  0173                     l1646:	
   664                           ;incstack = 0
   665                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   666                           
   667                           
   668                           ;main.c: 282:     TRISA = 0b00000001;
   669  0173  3001               	movlw	1
   670  0174  1683               	bsf	3,5	;RP0=1, select bank1
   671  0175  1303               	bcf	3,6	;RP1=0, select bank1
   672  0176  0085               	movwf	5	;volatile
   673                           
   674                           ;main.c: 283:     TRISB = 0b00011101;
   675  0177  301D               	movlw	29
   676  0178  0086               	movwf	6	;volatile
   677  0179                     l1648:
   678                           
   679                           ;main.c: 284:     TRISD = 0b00000000;
   680  0179  0188               	clrf	8	;volatile
   681  017A                     l1650:
   682                           
   683                           ;main.c: 285:     OPTION_REGbits.nRBPU = 0;
   684  017A  1381               	bcf	1,7	;volatile
   685  017B                     l1652:
   686                           
   687                           ;main.c: 286:     PORTB = 0;
   688  017B  1283               	bcf	3,5	;RP0=0, select bank0
   689  017C  1303               	bcf	3,6	;RP1=0, select bank0
   690  017D  0186               	clrf	6	;volatile
   691  017E                     l1654:
   692                           
   693                           ;main.c: 288:     setupExternalInterruption();
   694  017E  120A  118A  2550  120A  118A  	fcall	_setupExternalInterruption
   695  0183                     l1656:
   696                           
   697                           ;main.c: 289:     setupWatchdogTimer();
   698  0183  120A  118A  2557  120A  118A  	fcall	_setupWatchdogTimer
   699  0188                     l1658:
   700                           
   701                           ;main.c: 290:     setupTimer();
   702  0188  120A  118A  24B5  120A  118A  	fcall	_setupTimer
   703                           
   704                           ;main.c: 291:     setupADC();
   705  018D  120A  118A  24CE  120A  118A  	fcall	_setupADC
   706  0192                     l1660:
   707                           
   708                           ;main.c: 292:     Lcd_Init();
   709  0192  120A  118A  224B  120A  118A  	fcall	_Lcd_Init
   710  0197                     l1662:
   711  0197                     l1664:
   712                           
   713                           ;main.c: 295:     {;main.c: 296:         verifySensor();
   714  0197  120A  118A  23C6  120A  118A  	fcall	_verifySensor
   715  019C                     l1666:
   716                           
   717                           ;main.c: 297:         verifyMenu();
   718  019C  120A  118A  252A  120A  118A  	fcall	_verifyMenu
   719  01A1                     l1668:
   720                           
   721                           ;main.c: 298:         Lcd_Clear();
   722  01A1  120A  118A  251D  120A  118A  	fcall	_Lcd_Clear
   723  01A6                     l1670:
   724                           
   725                           ;main.c: 299:         Lcd_Set_Cursor(1,1);
   726  01A6  01F7               	clrf	Lcd_Set_Cursor@b
   727  01A7  0AF7               	incf	Lcd_Set_Cursor@b,f
   728  01A8  3001               	movlw	1
   729  01A9  120A  118A  2302  120A  118A  	fcall	_Lcd_Set_Cursor
   730  01AE                     l1672:
   731                           
   732                           ;main.c: 301:         Lcd_Write_String("OLA MUNDO");
   733  01AE  300D               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   734  01AF  120A  118A  23F0  120A  118A  	fcall	_Lcd_Write_String
   735  01B4                     l1674:
   736                           
   737                           ;main.c: 302:         _delay((unsigned long)((1000)*(4000000/4000.0)));
   738  01B4  3006               	movlw	6
   739  01B5  1283               	bcf	3,5	;RP0=0, select bank0
   740  01B6  1303               	bcf	3,6	;RP1=0, select bank0
   741  01B7  00C1               	movwf	??_main+2
   742  01B8  3013               	movlw	19
   743  01B9  00C0               	movwf	??_main+1
   744  01BA  30AD               	movlw	173
   745  01BB  00BF               	movwf	??_main
   746  01BC                     u1317:
   747  01BC  0BBF               	decfsz	??_main,f
   748  01BD  29BC               	goto	u1317
   749  01BE  0BC0               	decfsz	??_main+1,f
   750  01BF  29BC               	goto	u1317
   751  01C0  0BC1               	decfsz	??_main+2,f
   752  01C1  29BC               	goto	u1317
   753  01C2                     l1676:
   754                           
   755                           ;main.c: 304:         Lcd_Set_Cursor(2,1);
   756  01C2  01F7               	clrf	Lcd_Set_Cursor@b
   757  01C3  0AF7               	incf	Lcd_Set_Cursor@b,f
   758  01C4  3002               	movlw	2
   759  01C5  120A  118A  2302  120A  118A  	fcall	_Lcd_Set_Cursor
   760  01CA                     l1678:
   761                           
   762                           ;main.c: 305:         Lcd_Write_String("MUNDO DOIDO");
   763  01CA  3001               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   764  01CB  120A  118A  23F0  120A  118A  	fcall	_Lcd_Write_String
   765  01D0                     l1680:
   766                           
   767                           ;main.c: 306:         _delay((unsigned long)((2000)*(4000000/4000.0)));
   768  01D0  300B               	movlw	11
   769  01D1  1283               	bcf	3,5	;RP0=0, select bank0
   770  01D2  1303               	bcf	3,6	;RP1=0, select bank0
   771  01D3  00C1               	movwf	??_main+2
   772  01D4  3026               	movlw	38
   773  01D5  00C0               	movwf	??_main+1
   774  01D6  305D               	movlw	93
   775  01D7  00BF               	movwf	??_main
   776  01D8                     u1327:
   777  01D8  0BBF               	decfsz	??_main,f
   778  01D9  29D8               	goto	u1327
   779  01DA  0BC0               	decfsz	??_main+1,f
   780  01DB  29D8               	goto	u1327
   781  01DC  0BC1               	decfsz	??_main+2,f
   782  01DD  29D8               	goto	u1327
   783  01DE  2997               	goto	l1664
   784  01DF  120A  118A  280C   	ljmp	start
   785  01E2                     __end_of_main:
   786                           
   787                           	psect	text1
   788  03C6                     __ptext1:	
   789 ;; *************** function _verifySensor *****************
   790 ;; Defined at:
   791 ;;		line 219 in file "main.c"
   792 ;; Parameters:    Size  Location     Type
   793 ;;		None
   794 ;; Auto vars:     Size  Location     Type
   795 ;;		None
   796 ;; Return value:  Size  Location     Type
   797 ;;                  1    wreg      void 
   798 ;; Registers used:
   799 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   800 ;; Tracked objects:
   801 ;;		On entry : 0/0
   802 ;;		On exit  : 0/0
   803 ;;		Unchanged: 0/0
   804 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   805 ;;      Params:         0       0       0       0       0
   806 ;;      Locals:         0       0       0       0       0
   807 ;;      Temps:          0       0       0       0       0
   808 ;;      Totals:         0       0       0       0       0
   809 ;;Total ram usage:        0 bytes
   810 ;; Hardware stack levels used: 1
   811 ;; Hardware stack levels required when called: 5
   812 ;; This function calls:
   813 ;;		_getADConverterValue
   814 ;;		_irrigar
   815 ;; This function is called by:
   816 ;;		_main
   817 ;; This function uses a non-reentrant model
   818 ;;
   819                           
   820  03C6                     _verifySensor:	
   821                           ;psect for function _verifySensor
   822                           
   823  03C6                     l1634:	
   824                           ;incstack = 0
   825                           ; Regs used in _verifySensor: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   826                           
   827                           
   828                           ;main.c: 221:     PORTD = getADConverterValue();
   829  03C6  120A  118A  22A8  120A  118A  	fcall	_getADConverterValue
   830  03CB  1283               	bcf	3,5	;RP0=0, select bank0
   831  03CC  1303               	bcf	3,6	;RP1=0, select bank0
   832  03CD  0837               	movf	?_getADConverterValue,w
   833  03CE  0088               	movwf	8	;volatile
   834  03CF                     l1636:
   835                           
   836                           ;main.c: 222:     if(getADConverterValue()<umidade_minima){
   837  03CF  120A  118A  22A8  120A  118A  	fcall	_getADConverterValue
   838  03D4  1283               	bcf	3,5	;RP0=0, select bank0
   839  03D5  1303               	bcf	3,6	;RP1=0, select bank0
   840  03D6  0838               	movf	?_getADConverterValue+1,w
   841  03D7  3A80               	xorlw	128
   842  03D8  00FF               	movwf	btemp+1
   843  03D9  3080               	movlw	128
   844  03DA  027F               	subwf	btemp+1,w
   845  03DB  1D03               	skipz
   846  03DC  2BDF               	goto	u1305
   847  03DD  300A               	movlw	10
   848  03DE  0237               	subwf	?_getADConverterValue,w
   849  03DF                     u1305:
   850  03DF  1803               	skipnc
   851  03E0  2BE2               	goto	u1301
   852  03E1  2BE3               	goto	u1300
   853  03E2                     u1301:
   854  03E2  2BEC               	goto	l148
   855  03E3                     u1300:
   856  03E3                     l1638:
   857                           
   858                           ;main.c: 223:         PORTBbits.RB7 = 1;
   859  03E3  1283               	bcf	3,5	;RP0=0, select bank0
   860  03E4  1303               	bcf	3,6	;RP1=0, select bank0
   861  03E5  1786               	bsf	6,7	;volatile
   862  03E6                     l1640:
   863                           
   864                           ;main.c: 224:         irrigar();
   865  03E6  120A  118A  2536  120A  118A  	fcall	_irrigar
   866                           
   867                           ;main.c: 225:     }
   868  03EB  2BEF               	goto	l150
   869  03EC                     l148:	
   870                           ;main.c: 226:     else{
   871                           
   872                           
   873                           ;main.c: 227:         PORTBbits.RB7 = 0;
   874  03EC  1283               	bcf	3,5	;RP0=0, select bank0
   875  03ED  1303               	bcf	3,6	;RP1=0, select bank0
   876  03EE  1386               	bcf	6,7	;volatile
   877  03EF                     l150:
   878  03EF  0008               	return
   879  03F0                     __end_of_verifySensor:
   880                           
   881                           	psect	text2
   882  0536                     __ptext2:	
   883 ;; *************** function _irrigar *****************
   884 ;; Defined at:
   885 ;;		line 159 in file "main.c"
   886 ;; Parameters:    Size  Location     Type
   887 ;;		None
   888 ;; Auto vars:     Size  Location     Type
   889 ;;		None
   890 ;; Return value:  Size  Location     Type
   891 ;;                  1    wreg      void 
   892 ;; Registers used:
   893 ;;		wreg, status,2
   894 ;; Tracked objects:
   895 ;;		On entry : 0/0
   896 ;;		On exit  : 0/0
   897 ;;		Unchanged: 0/0
   898 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   899 ;;      Params:         0       0       0       0       0
   900 ;;      Locals:         0       0       0       0       0
   901 ;;      Temps:          0       0       0       0       0
   902 ;;      Totals:         0       0       0       0       0
   903 ;;Total ram usage:        0 bytes
   904 ;; Hardware stack levels used: 1
   905 ;; Hardware stack levels required when called: 3
   906 ;; This function calls:
   907 ;;		Nothing
   908 ;; This function is called by:
   909 ;;		_verifySensor
   910 ;; This function uses a non-reentrant model
   911 ;;
   912                           
   913  0536                     _irrigar:	
   914                           ;psect for function _irrigar
   915                           
   916  0536                     l1318:	
   917                           ;incstack = 0
   918                           ; Regs used in _irrigar: [wreg+status,2]
   919                           
   920                           
   921                           ;main.c: 160:     irrigacao_ativa = 1;
   922  0536  3001               	movlw	1
   923  0537  00F9               	movwf	_irrigacao_ativa
   924  0538  3000               	movlw	0
   925  0539  00FA               	movwf	_irrigacao_ativa+1
   926  053A                     l1320:
   927                           
   928                           ;main.c: 161:     timer_counter = 0;
   929  053A  1283               	bcf	3,5	;RP0=0, select bank0
   930  053B  1303               	bcf	3,6	;RP1=0, select bank0
   931  053C  01C8               	clrf	_timer_counter
   932  053D  01C9               	clrf	_timer_counter+1
   933  053E                     l1322:
   934                           
   935                           ;main.c: 164:     T1CONbits.TMR1ON = 1;
   936  053E  1410               	bsf	16,0	;volatile
   937  053F                     l122:
   938  053F  0008               	return
   939  0540                     __end_of_irrigar:
   940                           
   941                           	psect	text3
   942  02A8                     __ptext3:	
   943 ;; *************** function _getADConverterValue *****************
   944 ;; Defined at:
   945 ;;		line 213 in file "main.c"
   946 ;; Parameters:    Size  Location     Type
   947 ;;		None
   948 ;; Auto vars:     Size  Location     Type
   949 ;;  leitura         4   27[BANK0 ] float 
   950 ;; Return value:  Size  Location     Type
   951 ;;                  2   23[BANK0 ] int 
   952 ;; Registers used:
   953 ;;		wreg, status,2, status,0, pclath, cstack
   954 ;; Tracked objects:
   955 ;;		On entry : 0/0
   956 ;;		On exit  : 0/0
   957 ;;		Unchanged: 0/0
   958 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   959 ;;      Params:         0       2       0       0       0
   960 ;;      Locals:         0       4       0       0       0
   961 ;;      Temps:          0       2       0       0       0
   962 ;;      Totals:         0       8       0       0       0
   963 ;;Total ram usage:        8 bytes
   964 ;; Hardware stack levels used: 1
   965 ;; Hardware stack levels required when called: 4
   966 ;; This function calls:
   967 ;;		___awdiv
   968 ;;		___fltol
   969 ;;		___wmul
   970 ;;		___xxtofl
   971 ;; This function is called by:
   972 ;;		_verifySensor
   973 ;; This function uses a non-reentrant model
   974 ;;
   975                           
   976  02A8                     _getADConverterValue:	
   977                           ;psect for function _getADConverterValue
   978                           
   979  02A8                     l1574:	
   980                           ;incstack = 0
   981                           ; Regs used in _getADConverterValue: [wreg+status,2+status,0+pclath+cstack]
   982                           
   983                           
   984                           ;main.c: 214:     ADCON0bits.GO = 1;
   985  02A8  1283               	bcf	3,5	;RP0=0, select bank0
   986  02A9  1303               	bcf	3,6	;RP1=0, select bank0
   987  02AA  151F               	bsf	31,2	;volatile
   988  02AB                     l1576:
   989                           
   990                           ;main.c: 215:     _delay((unsigned long)((10)*(4000000/4000000.0)));
   991  02AB  3002               	movlw	2
   992  02AC  1283               	bcf	3,5	;RP0=0, select bank0
   993  02AD  1303               	bcf	3,6	;RP1=0, select bank0
   994  02AE  00B9               	movwf	??_getADConverterValue
   995  02AF                     u1337:
   996  02AF  0BB9               	decfsz	??_getADConverterValue,f
   997  02B0  2AAF               	goto	u1337
   998  02B1  0000               	nop
   999  02B2                     l1578:
  1000                           
  1001                           ;main.c: 216:     float leitura = 100*ADRESH/256;
  1002  02B2  3064               	movlw	100
  1003  02B3  00F5               	movwf	___wmul@multiplicand
  1004  02B4  3000               	movlw	0
  1005  02B5  00F6               	movwf	___wmul@multiplicand+1
  1006  02B6  1283               	bcf	3,5	;RP0=0, select bank0
  1007  02B7  1303               	bcf	3,6	;RP1=0, select bank0
  1008  02B8  081E               	movf	30,w	;volatile
  1009  02B9  00B9               	movwf	??_getADConverterValue
  1010  02BA  01BA               	clrf	??_getADConverterValue+1
  1011  02BB  0839               	movf	??_getADConverterValue,w
  1012  02BC  00F3               	movwf	___wmul@multiplier
  1013  02BD  083A               	movf	??_getADConverterValue+1,w
  1014  02BE  00F4               	movwf	___wmul@multiplier+1
  1015  02BF  120A  118A  2419  120A  118A  	fcall	___wmul
  1016  02C4  0874               	movf	?___wmul+1,w
  1017  02C5  1283               	bcf	3,5	;RP0=0, select bank0
  1018  02C6  1303               	bcf	3,6	;RP1=0, select bank0
  1019  02C7  00A3               	movwf	___awdiv@dividend+1
  1020  02C8  0873               	movf	?___wmul,w
  1021  02C9  00A2               	movwf	___awdiv@dividend
  1022  02CA  3000               	movlw	0
  1023  02CB  00A0               	movwf	___awdiv@divisor
  1024  02CC  3001               	movlw	1
  1025  02CD  00A1               	movwf	___awdiv@divisor+1
  1026  02CE  120A  118A  21E2  120A  118A  	fcall	___awdiv
  1027  02D3  1283               	bcf	3,5	;RP0=0, select bank0
  1028  02D4  1303               	bcf	3,6	;RP1=0, select bank0
  1029  02D5  0820               	movf	?___awdiv,w
  1030  02D6  00A9               	movwf	___xxtofl@val
  1031  02D7  0821               	movf	?___awdiv+1,w
  1032  02D8  00AA               	movwf	___xxtofl@val+1
  1033  02D9  3000               	movlw	0
  1034  02DA  1BAA               	btfsc	___xxtofl@val+1,7
  1035  02DB  30FF               	movlw	255
  1036  02DC  00AB               	movwf	___xxtofl@val+2
  1037  02DD  00AC               	movwf	___xxtofl@val+3
  1038  02DE  3001               	movlw	1
  1039  02DF  120A  118A  203B  120A  118A  	fcall	___xxtofl
  1040  02E4  1283               	bcf	3,5	;RP0=0, select bank0
  1041  02E5  1303               	bcf	3,6	;RP1=0, select bank0
  1042  02E6  082C               	movf	?___xxtofl+3,w
  1043  02E7  00BE               	movwf	getADConverterValue@leitura+3
  1044  02E8  082B               	movf	?___xxtofl+2,w
  1045  02E9  00BD               	movwf	getADConverterValue@leitura+2
  1046  02EA  082A               	movf	?___xxtofl+1,w
  1047  02EB  00BC               	movwf	getADConverterValue@leitura+1
  1048  02EC  0829               	movf	?___xxtofl,w
  1049  02ED  00BB               	movwf	getADConverterValue@leitura
  1050  02EE                     l1580:
  1051                           
  1052                           ;main.c: 217:     return leitura;
  1053  02EE  083E               	movf	getADConverterValue@leitura+3,w
  1054  02EF  00F6               	movwf	___fltol@f1+3
  1055  02F0  083D               	movf	getADConverterValue@leitura+2,w
  1056  02F1  00F5               	movwf	___fltol@f1+2
  1057  02F2  083C               	movf	getADConverterValue@leitura+1,w
  1058  02F3  00F4               	movwf	___fltol@f1+1
  1059  02F4  083B               	movf	getADConverterValue@leitura,w
  1060  02F5  00F3               	movwf	___fltol@f1
  1061  02F6  120A  118A  20F7  120A  118A  	fcall	___fltol
  1062  02FB  0874               	movf	?___fltol+1,w
  1063  02FC  1283               	bcf	3,5	;RP0=0, select bank0
  1064  02FD  1303               	bcf	3,6	;RP1=0, select bank0
  1065  02FE  00B8               	movwf	?_getADConverterValue+1
  1066  02FF  0873               	movf	?___fltol,w
  1067  0300  00B7               	movwf	?_getADConverterValue
  1068  0301                     l145:
  1069  0301  0008               	return
  1070  0302                     __end_of_getADConverterValue:
  1071                           
  1072                           	psect	text4
  1073  003B                     __ptext4:	
  1074 ;; *************** function ___xxtofl *****************
  1075 ;; Defined at:
  1076 ;;		line 10 in file "D:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\xxtofl.c"
  1077 ;; Parameters:    Size  Location     Type
  1078 ;;  sign            1    wreg     unsigned char 
  1079 ;;  val             4    9[BANK0 ] long 
  1080 ;; Auto vars:     Size  Location     Type
  1081 ;;  sign            1   17[BANK0 ] unsigned char 
  1082 ;;  arg             4   19[BANK0 ] unsigned long 
  1083 ;;  exp             1   18[BANK0 ] unsigned char 
  1084 ;; Return value:  Size  Location     Type
  1085 ;;                  4    9[BANK0 ] unsigned char 
  1086 ;; Registers used:
  1087 ;;		wreg, status,2, status,0
  1088 ;; Tracked objects:
  1089 ;;		On entry : 0/0
  1090 ;;		On exit  : 0/0
  1091 ;;		Unchanged: 0/0
  1092 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1093 ;;      Params:         0       4       0       0       0
  1094 ;;      Locals:         0       6       0       0       0
  1095 ;;      Temps:          0       4       0       0       0
  1096 ;;      Totals:         0      14       0       0       0
  1097 ;;Total ram usage:       14 bytes
  1098 ;; Hardware stack levels used: 1
  1099 ;; Hardware stack levels required when called: 3
  1100 ;; This function calls:
  1101 ;;		Nothing
  1102 ;; This function is called by:
  1103 ;;		_getADConverterValue
  1104 ;; This function uses a non-reentrant model
  1105 ;;
  1106                           
  1107  003B                     ___xxtofl:	
  1108                           ;psect for function ___xxtofl
  1109                           
  1110                           
  1111                           ;incstack = 0
  1112                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  1113                           ;___xxtofl@sign stored from wreg
  1114  003B  1283               	bcf	3,5	;RP0=0, select bank0
  1115  003C  1303               	bcf	3,6	;RP1=0, select bank0
  1116  003D  00B1               	movwf	___xxtofl@sign
  1117  003E                     l1240:
  1118  003E  0831               	movf	___xxtofl@sign,w
  1119  003F  1903               	btfsc	3,2
  1120  0040  2842               	goto	u841
  1121  0041  2843               	goto	u840
  1122  0042                     u841:
  1123  0042  2857               	goto	l1246
  1124  0043                     u840:
  1125  0043                     l1242:
  1126  0043  1FAC               	btfss	___xxtofl@val+3,7
  1127  0044  2846               	goto	u851
  1128  0045  2847               	goto	u850
  1129  0046                     u851:
  1130  0046  2857               	goto	l1246
  1131  0047                     u850:
  1132  0047                     l1244:
  1133  0047  0929               	comf	___xxtofl@val,w
  1134  0048  00B3               	movwf	___xxtofl@arg
  1135  0049  092A               	comf	___xxtofl@val+1,w
  1136  004A  00B4               	movwf	___xxtofl@arg+1
  1137  004B  092B               	comf	___xxtofl@val+2,w
  1138  004C  00B5               	movwf	___xxtofl@arg+2
  1139  004D  092C               	comf	___xxtofl@val+3,w
  1140  004E  00B6               	movwf	___xxtofl@arg+3
  1141  004F  0AB3               	incf	___xxtofl@arg,f
  1142  0050  1903               	skipnz
  1143  0051  0AB4               	incf	___xxtofl@arg+1,f
  1144  0052  1903               	skipnz
  1145  0053  0AB5               	incf	___xxtofl@arg+2,f
  1146  0054  1903               	skipnz
  1147  0055  0AB6               	incf	___xxtofl@arg+3,f
  1148  0056  285F               	goto	l683
  1149  0057                     l1246:
  1150  0057  082C               	movf	___xxtofl@val+3,w
  1151  0058  00B6               	movwf	___xxtofl@arg+3
  1152  0059  082B               	movf	___xxtofl@val+2,w
  1153  005A  00B5               	movwf	___xxtofl@arg+2
  1154  005B  082A               	movf	___xxtofl@val+1,w
  1155  005C  00B4               	movwf	___xxtofl@arg+1
  1156  005D  0829               	movf	___xxtofl@val,w
  1157  005E  00B3               	movwf	___xxtofl@arg
  1158  005F                     l683:
  1159  005F  082C               	movf	___xxtofl@val+3,w
  1160  0060  042B               	iorwf	___xxtofl@val+2,w
  1161  0061  042A               	iorwf	___xxtofl@val+1,w
  1162  0062  0429               	iorwf	___xxtofl@val,w
  1163  0063  1D03               	skipz
  1164  0064  2866               	goto	u861
  1165  0065  2867               	goto	u860
  1166  0066                     u861:
  1167  0066  2870               	goto	l1252
  1168  0067                     u860:
  1169  0067                     l1248:
  1170  0067  3000               	movlw	0
  1171  0068  00AC               	movwf	?___xxtofl+3
  1172  0069  3000               	movlw	0
  1173  006A  00AB               	movwf	?___xxtofl+2
  1174  006B  3000               	movlw	0
  1175  006C  00AA               	movwf	?___xxtofl+1
  1176  006D  3000               	movlw	0
  1177  006E  00A9               	movwf	?___xxtofl
  1178  006F  28F6               	goto	l685
  1179  0070                     l1252:
  1180  0070  3096               	movlw	150
  1181  0071  00AD               	movwf	??___xxtofl
  1182  0072  082D               	movf	??___xxtofl,w
  1183  0073  00B2               	movwf	___xxtofl@exp
  1184  0074  2882               	goto	l1256
  1185  0075                     l1254:
  1186  0075  3001               	movlw	1
  1187  0076  00AD               	movwf	??___xxtofl
  1188  0077  082D               	movf	??___xxtofl,w
  1189  0078  07B2               	addwf	___xxtofl@exp,f
  1190  0079  3001               	movlw	1
  1191  007A                     u875:
  1192  007A  1003               	clrc
  1193  007B  0CB6               	rrf	___xxtofl@arg+3,f
  1194  007C  0CB5               	rrf	___xxtofl@arg+2,f
  1195  007D  0CB4               	rrf	___xxtofl@arg+1,f
  1196  007E  0CB3               	rrf	___xxtofl@arg,f
  1197  007F  3EFF               	addlw	-1
  1198  0080  1D03               	skipz
  1199  0081  287A               	goto	u875
  1200  0082                     l1256:
  1201  0082  30FE               	movlw	254
  1202  0083  0536               	andwf	___xxtofl@arg+3,w
  1203  0084  1D03               	btfss	3,2
  1204  0085  2887               	goto	u881
  1205  0086  2888               	goto	u880
  1206  0087                     u881:
  1207  0087  2875               	goto	l1254
  1208  0088                     u880:
  1209  0088  28A4               	goto	l689
  1210  0089                     l1258:
  1211  0089  3001               	movlw	1
  1212  008A  00AD               	movwf	??___xxtofl
  1213  008B  082D               	movf	??___xxtofl,w
  1214  008C  07B2               	addwf	___xxtofl@exp,f
  1215  008D                     l1260:
  1216  008D  3001               	movlw	1
  1217  008E  07B3               	addwf	___xxtofl@arg,f
  1218  008F  3000               	movlw	0
  1219  0090  1803               	skipnc
  1220  0091  3001               	movlw	1
  1221  0092  07B4               	addwf	___xxtofl@arg+1,f
  1222  0093  3000               	movlw	0
  1223  0094  1803               	skipnc
  1224  0095  3001               	movlw	1
  1225  0096  07B5               	addwf	___xxtofl@arg+2,f
  1226  0097  3000               	movlw	0
  1227  0098  1803               	skipnc
  1228  0099  3001               	movlw	1
  1229  009A  07B6               	addwf	___xxtofl@arg+3,f
  1230  009B                     l1262:
  1231  009B  3001               	movlw	1
  1232  009C                     u895:
  1233  009C  1003               	clrc
  1234  009D  0CB6               	rrf	___xxtofl@arg+3,f
  1235  009E  0CB5               	rrf	___xxtofl@arg+2,f
  1236  009F  0CB4               	rrf	___xxtofl@arg+1,f
  1237  00A0  0CB3               	rrf	___xxtofl@arg,f
  1238  00A1  3EFF               	addlw	-1
  1239  00A2  1D03               	skipz
  1240  00A3  289C               	goto	u895
  1241  00A4                     l689:
  1242  00A4  30FF               	movlw	255
  1243  00A5  0536               	andwf	___xxtofl@arg+3,w
  1244  00A6  1D03               	btfss	3,2
  1245  00A7  28A9               	goto	u901
  1246  00A8  28AA               	goto	u900
  1247  00A9                     u901:
  1248  00A9  2889               	goto	l1258
  1249  00AA                     u900:
  1250  00AA  28B6               	goto	l1266
  1251  00AB                     l1264:
  1252  00AB  3001               	movlw	1
  1253  00AC  02B2               	subwf	___xxtofl@exp,f
  1254  00AD  3001               	movlw	1
  1255  00AE  00AD               	movwf	??___xxtofl
  1256  00AF                     u915:
  1257  00AF  1003               	clrc
  1258  00B0  0DB3               	rlf	___xxtofl@arg,f
  1259  00B1  0DB4               	rlf	___xxtofl@arg+1,f
  1260  00B2  0DB5               	rlf	___xxtofl@arg+2,f
  1261  00B3  0DB6               	rlf	___xxtofl@arg+3,f
  1262  00B4  0BAD               	decfsz	??___xxtofl,f
  1263  00B5  28AF               	goto	u915
  1264  00B6                     l1266:
  1265  00B6  1BB5               	btfsc	___xxtofl@arg+2,7
  1266  00B7  28B9               	goto	u921
  1267  00B8  28BA               	goto	u920
  1268  00B9                     u921:
  1269  00B9  28C0               	goto	l696
  1270  00BA                     u920:
  1271  00BA                     l1268:
  1272  00BA  3002               	movlw	2
  1273  00BB  0232               	subwf	___xxtofl@exp,w
  1274  00BC  1803               	skipnc
  1275  00BD  28BF               	goto	u931
  1276  00BE  28C0               	goto	u930
  1277  00BF                     u931:
  1278  00BF  28AB               	goto	l1264
  1279  00C0                     u930:
  1280  00C0                     l696:
  1281  00C0  1832               	btfsc	___xxtofl@exp,0
  1282  00C1  28C3               	goto	u941
  1283  00C2  28C4               	goto	u940
  1284  00C3                     u941:
  1285  00C3  28CC               	goto	l697
  1286  00C4                     u940:
  1287  00C4                     l1270:
  1288  00C4  30FF               	movlw	255
  1289  00C5  05B3               	andwf	___xxtofl@arg,f
  1290  00C6  30FF               	movlw	255
  1291  00C7  05B4               	andwf	___xxtofl@arg+1,f
  1292  00C8  307F               	movlw	127
  1293  00C9  05B5               	andwf	___xxtofl@arg+2,f
  1294  00CA  30FF               	movlw	255
  1295  00CB  05B6               	andwf	___xxtofl@arg+3,f
  1296  00CC                     l697:
  1297  00CC  1003               	clrc
  1298  00CD  0CB2               	rrf	___xxtofl@exp,f
  1299  00CE                     l1272:
  1300  00CE  0832               	movf	___xxtofl@exp,w
  1301  00CF  00AD               	movwf	??___xxtofl
  1302  00D0  01AE               	clrf	??___xxtofl+1
  1303  00D1  01AF               	clrf	??___xxtofl+2
  1304  00D2  01B0               	clrf	??___xxtofl+3
  1305  00D3  3018               	movlw	24
  1306  00D4                     u955:
  1307  00D4  1003               	clrc
  1308  00D5  0DAD               	rlf	??___xxtofl,f
  1309  00D6  0DAE               	rlf	??___xxtofl+1,f
  1310  00D7  0DAF               	rlf	??___xxtofl+2,f
  1311  00D8  0DB0               	rlf	??___xxtofl+3,f
  1312  00D9                     u950:
  1313  00D9  3EFF               	addlw	-1
  1314  00DA  1D03               	skipz
  1315  00DB  28D4               	goto	u955
  1316  00DC  082D               	movf	??___xxtofl,w
  1317  00DD  04B3               	iorwf	___xxtofl@arg,f
  1318  00DE  082E               	movf	??___xxtofl+1,w
  1319  00DF  04B4               	iorwf	___xxtofl@arg+1,f
  1320  00E0  082F               	movf	??___xxtofl+2,w
  1321  00E1  04B5               	iorwf	___xxtofl@arg+2,f
  1322  00E2  0830               	movf	??___xxtofl+3,w
  1323  00E3  04B6               	iorwf	___xxtofl@arg+3,f
  1324  00E4                     l1274:
  1325  00E4  0831               	movf	___xxtofl@sign,w
  1326  00E5  1903               	btfsc	3,2
  1327  00E6  28E8               	goto	u961
  1328  00E7  28E9               	goto	u960
  1329  00E8                     u961:
  1330  00E8  28EE               	goto	l1280
  1331  00E9                     u960:
  1332  00E9                     l1276:
  1333  00E9  1FAC               	btfss	___xxtofl@val+3,7
  1334  00EA  28EC               	goto	u971
  1335  00EB  28ED               	goto	u970
  1336  00EC                     u971:
  1337  00EC  28EE               	goto	l1280
  1338  00ED                     u970:
  1339  00ED                     l1278:
  1340  00ED  17B6               	bsf	___xxtofl@arg+3,7
  1341  00EE                     l1280:
  1342  00EE  0836               	movf	___xxtofl@arg+3,w
  1343  00EF  00AC               	movwf	?___xxtofl+3
  1344  00F0  0835               	movf	___xxtofl@arg+2,w
  1345  00F1  00AB               	movwf	?___xxtofl+2
  1346  00F2  0834               	movf	___xxtofl@arg+1,w
  1347  00F3  00AA               	movwf	?___xxtofl+1
  1348  00F4  0833               	movf	___xxtofl@arg,w
  1349  00F5  00A9               	movwf	?___xxtofl
  1350  00F6                     l685:
  1351  00F6  0008               	return
  1352  00F7                     __end_of___xxtofl:
  1353                           
  1354                           	psect	text5
  1355  00F7                     __ptext5:	
  1356 ;; *************** function ___fltol *****************
  1357 ;; Defined at:
  1358 ;;		line 43 in file "D:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\fltol.c"
  1359 ;; Parameters:    Size  Location     Type
  1360 ;;  f1              4    3[COMMON] unsigned char 
  1361 ;; Auto vars:     Size  Location     Type
  1362 ;;  exp1            1    8[COMMON] unsigned char 
  1363 ;;  sign1           1    7[COMMON] unsigned char 
  1364 ;; Return value:  Size  Location     Type
  1365 ;;                  4    3[COMMON] long 
  1366 ;; Registers used:
  1367 ;;		wreg, status,2, status,0
  1368 ;; Tracked objects:
  1369 ;;		On entry : 0/0
  1370 ;;		On exit  : 0/0
  1371 ;;		Unchanged: 0/0
  1372 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1373 ;;      Params:         4       0       0       0       0
  1374 ;;      Locals:         2       0       0       0       0
  1375 ;;      Temps:          0       5       0       0       0
  1376 ;;      Totals:         6       5       0       0       0
  1377 ;;Total ram usage:       11 bytes
  1378 ;; Hardware stack levels used: 1
  1379 ;; Hardware stack levels required when called: 3
  1380 ;; This function calls:
  1381 ;;		Nothing
  1382 ;; This function is called by:
  1383 ;;		_getADConverterValue
  1384 ;; This function uses a non-reentrant model
  1385 ;;
  1386                           
  1387  00F7                     ___fltol:	
  1388                           ;psect for function ___fltol
  1389                           
  1390  00F7                     l1204:	
  1391                           ;incstack = 0
  1392                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  1393                           
  1394  00F7  1003               	clrc
  1395  00F8  0D75               	rlf	___fltol@f1+2,w
  1396  00F9  0D76               	rlf	___fltol@f1+3,w
  1397  00FA  1283               	bcf	3,5	;RP0=0, select bank0
  1398  00FB  1303               	bcf	3,6	;RP1=0, select bank0
  1399  00FC  00A0               	movwf	??___fltol
  1400  00FD  0820               	movf	??___fltol,w
  1401  00FE  00F8               	movwf	___fltol@exp1
  1402  00FF  0878               	movf	___fltol@exp1,w
  1403  0100  1D03               	btfss	3,2
  1404  0101  2903               	goto	u741
  1405  0102  2904               	goto	u740
  1406  0103                     u741:
  1407  0103  290D               	goto	l1210
  1408  0104                     u740:
  1409  0104                     l1206:
  1410  0104  3000               	movlw	0
  1411  0105  00F6               	movwf	?___fltol+3
  1412  0106  3000               	movlw	0
  1413  0107  00F5               	movwf	?___fltol+2
  1414  0108  3000               	movlw	0
  1415  0109  00F4               	movwf	?___fltol+1
  1416  010A  3000               	movlw	0
  1417  010B  00F3               	movwf	?___fltol
  1418  010C  2972               	goto	l436
  1419  010D                     l1210:
  1420  010D  0873               	movf	___fltol@f1,w
  1421  010E  00A0               	movwf	??___fltol
  1422  010F  0874               	movf	___fltol@f1+1,w
  1423  0110  00A1               	movwf	??___fltol+1
  1424  0111  0875               	movf	___fltol@f1+2,w
  1425  0112  00A2               	movwf	??___fltol+2
  1426  0113  0876               	movf	___fltol@f1+3,w
  1427  0114  00A3               	movwf	??___fltol+3
  1428  0115  301F               	movlw	31
  1429  0116                     u755:
  1430  0116  1003               	clrc
  1431  0117  0CA3               	rrf	??___fltol+3,f
  1432  0118  0CA2               	rrf	??___fltol+2,f
  1433  0119  0CA1               	rrf	??___fltol+1,f
  1434  011A  0CA0               	rrf	??___fltol,f
  1435  011B                     u750:
  1436  011B  3EFF               	addlw	-1
  1437  011C  1D03               	skipz
  1438  011D  2916               	goto	u755
  1439  011E  0820               	movf	??___fltol,w
  1440  011F  00A4               	movwf	??___fltol+4
  1441  0120  0824               	movf	??___fltol+4,w
  1442  0121  00F7               	movwf	___fltol@sign1
  1443  0122                     l1212:
  1444  0122  17F5               	bsf	___fltol@f1+2,7
  1445  0123                     l1214:
  1446  0123  30FF               	movlw	255
  1447  0124  05F3               	andwf	___fltol@f1,f
  1448  0125  30FF               	movlw	255
  1449  0126  05F4               	andwf	___fltol@f1+1,f
  1450  0127  30FF               	movlw	255
  1451  0128  05F5               	andwf	___fltol@f1+2,f
  1452  0129  3000               	movlw	0
  1453  012A  05F6               	andwf	___fltol@f1+3,f
  1454  012B                     l1216:
  1455  012B  3096               	movlw	150
  1456  012C  02F8               	subwf	___fltol@exp1,f
  1457  012D                     l1218:
  1458  012D  1FF8               	btfss	___fltol@exp1,7
  1459  012E  2930               	goto	u761
  1460  012F  2931               	goto	u760
  1461  0130                     u761:
  1462  0130  294B               	goto	l1228
  1463  0131                     u760:
  1464  0131                     l1220:
  1465  0131  0878               	movf	___fltol@exp1,w
  1466  0132  3A80               	xorlw	128
  1467  0133  3E97               	addlw	151
  1468  0134  1803               	skipnc
  1469  0135  2937               	goto	u771
  1470  0136  2938               	goto	u770
  1471  0137                     u771:
  1472  0137  2939               	goto	l1226
  1473  0138                     u770:
  1474  0138  2904               	goto	l1206
  1475  0139                     l1226:
  1476  0139  3001               	movlw	1
  1477  013A                     u785:
  1478  013A  1003               	clrc
  1479  013B  0CF6               	rrf	___fltol@f1+3,f
  1480  013C  0CF5               	rrf	___fltol@f1+2,f
  1481  013D  0CF4               	rrf	___fltol@f1+1,f
  1482  013E  0CF3               	rrf	___fltol@f1,f
  1483  013F  3EFF               	addlw	-1
  1484  0140  1D03               	skipz
  1485  0141  293A               	goto	u785
  1486  0142  3001               	movlw	1
  1487  0143  00A0               	movwf	??___fltol
  1488  0144  0820               	movf	??___fltol,w
  1489  0145  07F8               	addwf	___fltol@exp1,f
  1490  0146  1D03               	btfss	3,2
  1491  0147  2949               	goto	u791
  1492  0148  294A               	goto	u790
  1493  0149                     u791:
  1494  0149  2939               	goto	l1226
  1495  014A                     u790:
  1496  014A  2962               	goto	l1236
  1497  014B                     l1228:
  1498  014B  3020               	movlw	32
  1499  014C  0278               	subwf	___fltol@exp1,w
  1500  014D  1C03               	skipc
  1501  014E  2950               	goto	u801
  1502  014F  2951               	goto	u800
  1503  0150                     u801:
  1504  0150  295D               	goto	l443
  1505  0151                     u800:
  1506  0151  2904               	goto	l1206
  1507  0152                     l1234:
  1508  0152  3001               	movlw	1
  1509  0153  00A0               	movwf	??___fltol
  1510  0154                     u815:
  1511  0154  1003               	clrc
  1512  0155  0DF3               	rlf	___fltol@f1,f
  1513  0156  0DF4               	rlf	___fltol@f1+1,f
  1514  0157  0DF5               	rlf	___fltol@f1+2,f
  1515  0158  0DF6               	rlf	___fltol@f1+3,f
  1516  0159  0BA0               	decfsz	??___fltol,f
  1517  015A  2954               	goto	u815
  1518  015B  3001               	movlw	1
  1519  015C  02F8               	subwf	___fltol@exp1,f
  1520  015D                     l443:
  1521  015D  0878               	movf	___fltol@exp1,w
  1522  015E  1D03               	btfss	3,2
  1523  015F  2961               	goto	u821
  1524  0160  2962               	goto	u820
  1525  0161                     u821:
  1526  0161  2952               	goto	l1234
  1527  0162                     u820:
  1528  0162                     l1236:
  1529  0162  0877               	movf	___fltol@sign1,w
  1530  0163  1903               	btfsc	3,2
  1531  0164  2966               	goto	u831
  1532  0165  2967               	goto	u830
  1533  0166                     u831:
  1534  0166  2972               	goto	l446
  1535  0167                     u830:
  1536  0167                     l1238:
  1537  0167  09F3               	comf	___fltol@f1,f
  1538  0168  09F4               	comf	___fltol@f1+1,f
  1539  0169  09F5               	comf	___fltol@f1+2,f
  1540  016A  09F6               	comf	___fltol@f1+3,f
  1541  016B  0AF3               	incf	___fltol@f1,f
  1542  016C  1903               	skipnz
  1543  016D  0AF4               	incf	___fltol@f1+1,f
  1544  016E  1903               	skipnz
  1545  016F  0AF5               	incf	___fltol@f1+2,f
  1546  0170  1903               	skipnz
  1547  0171  0AF6               	incf	___fltol@f1+3,f
  1548  0172                     l446:
  1549  0172                     l436:
  1550  0172  0008               	return
  1551  0173                     __end_of___fltol:
  1552                           
  1553                           	psect	text6
  1554  052A                     __ptext6:	
  1555 ;; *************** function _verifyMenu *****************
  1556 ;; Defined at:
  1557 ;;		line 203 in file "main.c"
  1558 ;; Parameters:    Size  Location     Type
  1559 ;;		None
  1560 ;; Auto vars:     Size  Location     Type
  1561 ;;		None
  1562 ;; Return value:  Size  Location     Type
  1563 ;;                  1    wreg      void 
  1564 ;; Registers used:
  1565 ;;		status,2, status,0, pclath, cstack
  1566 ;; Tracked objects:
  1567 ;;		On entry : 0/0
  1568 ;;		On exit  : 0/0
  1569 ;;		Unchanged: 0/0
  1570 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1571 ;;      Params:         0       0       0       0       0
  1572 ;;      Locals:         0       0       0       0       0
  1573 ;;      Temps:          0       0       0       0       0
  1574 ;;      Totals:         0       0       0       0       0
  1575 ;;Total ram usage:        0 bytes
  1576 ;; Hardware stack levels used: 1
  1577 ;; Hardware stack levels required when called: 4
  1578 ;; This function calls:
  1579 ;;		_handleMenu
  1580 ;; This function is called by:
  1581 ;;		_main
  1582 ;; This function uses a non-reentrant model
  1583 ;;
  1584                           
  1585  052A                     _verifyMenu:	
  1586                           ;psect for function _verifyMenu
  1587                           
  1588  052A                     l1058:	
  1589                           ;incstack = 0
  1590                           ; Regs used in _verifyMenu: [status,2+status,0+pclath+cstack]
  1591                           
  1592                           
  1593                           ;main.c: 205:     if (PORTBbits.RB2)
  1594  052A  1283               	bcf	3,5	;RP0=0, select bank0
  1595  052B  1303               	bcf	3,6	;RP1=0, select bank0
  1596  052C  1D06               	btfss	6,2	;volatile
  1597  052D  2D2F               	goto	u541
  1598  052E  2D30               	goto	u540
  1599  052F                     u541:
  1600  052F  2D35               	goto	l142
  1601  0530                     u540:
  1602  0530                     l1060:
  1603                           
  1604                           ;main.c: 206:     {;main.c: 207:         handleMenu();
  1605  0530  120A  118A  2556  120A  118A  	fcall	_handleMenu
  1606  0535                     l142:
  1607  0535  0008               	return
  1608  0536                     __end_of_verifyMenu:
  1609                           
  1610                           	psect	text7
  1611  0556                     __ptext7:	
  1612 ;; *************** function _handleMenu *****************
  1613 ;; Defined at:
  1614 ;;		line 199 in file "main.c"
  1615 ;; Parameters:    Size  Location     Type
  1616 ;;		None
  1617 ;; Auto vars:     Size  Location     Type
  1618 ;;		None
  1619 ;; Return value:  Size  Location     Type
  1620 ;;                  1    wreg      void 
  1621 ;; Registers used:
  1622 ;;		None
  1623 ;; Tracked objects:
  1624 ;;		On entry : 0/0
  1625 ;;		On exit  : 0/0
  1626 ;;		Unchanged: 0/0
  1627 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1628 ;;      Params:         0       0       0       0       0
  1629 ;;      Locals:         0       0       0       0       0
  1630 ;;      Temps:          0       0       0       0       0
  1631 ;;      Totals:         0       0       0       0       0
  1632 ;;Total ram usage:        0 bytes
  1633 ;; Hardware stack levels used: 1
  1634 ;; Hardware stack levels required when called: 3
  1635 ;; This function calls:
  1636 ;;		Nothing
  1637 ;; This function is called by:
  1638 ;;		_verifyMenu
  1639 ;; This function uses a non-reentrant model
  1640 ;;
  1641                           
  1642  0556                     _handleMenu:	
  1643                           ;psect for function _handleMenu
  1644                           
  1645  0556                     l948:	
  1646                           ;incstack = 0
  1647                           ; Regs used in _handleMenu: []
  1648                           
  1649  0556                     l138:	
  1650                           ;main.c: 201:     return;
  1651                           
  1652  0556  0008               	return
  1653  0557                     __end_of_handleMenu:
  1654                           
  1655                           	psect	text8
  1656  0557                     __ptext8:	
  1657 ;; *************** function _setupWatchdogTimer *****************
  1658 ;; Defined at:
  1659 ;;		line 232 in file "main.c"
  1660 ;; Parameters:    Size  Location     Type
  1661 ;;		None
  1662 ;; Auto vars:     Size  Location     Type
  1663 ;;		None
  1664 ;; Return value:  Size  Location     Type
  1665 ;;                  1    wreg      void 
  1666 ;; Registers used:
  1667 ;;		None
  1668 ;; Tracked objects:
  1669 ;;		On entry : 0/0
  1670 ;;		On exit  : 0/0
  1671 ;;		Unchanged: 0/0
  1672 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1673 ;;      Params:         0       0       0       0       0
  1674 ;;      Locals:         0       0       0       0       0
  1675 ;;      Temps:          0       0       0       0       0
  1676 ;;      Totals:         0       0       0       0       0
  1677 ;;Total ram usage:        0 bytes
  1678 ;; Hardware stack levels used: 1
  1679 ;; Hardware stack levels required when called: 3
  1680 ;; This function calls:
  1681 ;;		Nothing
  1682 ;; This function is called by:
  1683 ;;		_main
  1684 ;; This function uses a non-reentrant model
  1685 ;;
  1686                           
  1687  0557                     _setupWatchdogTimer:	
  1688                           ;psect for function _setupWatchdogTimer
  1689                           
  1690  0557                     l1072:	
  1691                           ;incstack = 0
  1692                           ; Regs used in _setupWatchdogTimer: []
  1693                           
  1694  0557                     l153:	
  1695                           ;main.c: 239:     return;
  1696                           
  1697  0557  0008               	return
  1698  0558                     __end_of_setupWatchdogTimer:
  1699                           
  1700                           	psect	text9
  1701  04B5                     __ptext9:	
  1702 ;; *************** function _setupTimer *****************
  1703 ;; Defined at:
  1704 ;;		line 97 in file "main.c"
  1705 ;; Parameters:    Size  Location     Type
  1706 ;;		None
  1707 ;; Auto vars:     Size  Location     Type
  1708 ;;		None
  1709 ;; Return value:  Size  Location     Type
  1710 ;;                  1    wreg      void 
  1711 ;; Registers used:
  1712 ;;		wreg, status,2, status,0, pclath, cstack
  1713 ;; Tracked objects:
  1714 ;;		On entry : 0/0
  1715 ;;		On exit  : 0/0
  1716 ;;		Unchanged: 0/0
  1717 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1718 ;;      Params:         0       0       0       0       0
  1719 ;;      Locals:         0       0       0       0       0
  1720 ;;      Temps:          0       0       0       0       0
  1721 ;;      Totals:         0       0       0       0       0
  1722 ;;Total ram usage:        0 bytes
  1723 ;; Hardware stack levels used: 1
  1724 ;; Hardware stack levels required when called: 6
  1725 ;; This function calls:
  1726 ;;		_setupNewVolumeFlow
  1727 ;; This function is called by:
  1728 ;;		_main
  1729 ;; This function uses a non-reentrant model
  1730 ;;
  1731                           
  1732  04B5                     _setupTimer:	
  1733                           ;psect for function _setupTimer
  1734                           
  1735  04B5                     l1624:	
  1736                           ;incstack = 0
  1737                           ; Regs used in _setupTimer: [wreg+status,2+status,0+pclath+cstack]
  1738                           
  1739                           
  1740                           ;main.c: 100:     INTCONbits.GIE = 1;
  1741  04B5  178B               	bsf	11,7	;volatile
  1742                           
  1743                           ;main.c: 101:     INTCONbits.PEIE = 1;
  1744  04B6  170B               	bsf	11,6	;volatile
  1745                           
  1746                           ;main.c: 102:     PIE1bits.TMR1IE = 1;
  1747  04B7  1683               	bsf	3,5	;RP0=1, select bank1
  1748  04B8  1303               	bcf	3,6	;RP1=0, select bank1
  1749  04B9  140C               	bsf	12,0	;volatile
  1750                           
  1751                           ;main.c: 105:     T1CONbits.TMR1CS = 0;
  1752  04BA  1283               	bcf	3,5	;RP0=0, select bank0
  1753  04BB  1303               	bcf	3,6	;RP1=0, select bank0
  1754  04BC  1090               	bcf	16,1	;volatile
  1755                           
  1756                           ;main.c: 108:     T1CONbits.T1CKPS0 = 1;
  1757  04BD  1610               	bsf	16,4	;volatile
  1758                           
  1759                           ;main.c: 109:     T1CONbits.T1CKPS1 = 1;
  1760  04BE  1690               	bsf	16,5	;volatile
  1761  04BF                     l1626:
  1762                           
  1763                           ;main.c: 117:     TMR1H = 0x0B;
  1764  04BF  300B               	movlw	11
  1765  04C0  008F               	movwf	15	;volatile
  1766                           
  1767                           ;main.c: 118:     TMR1L = 0xDC;
  1768  04C1  30DC               	movlw	220
  1769  04C2  008E               	movwf	14	;volatile
  1770  04C3                     l1628:
  1771                           
  1772                           ;main.c: 120:     T1CONbits.TMR1ON = 0;
  1773  04C3  1010               	bcf	16,0	;volatile
  1774  04C4                     l1630:
  1775                           
  1776                           ;main.c: 124:     setupNewVolumeFlow(200);
  1777  04C4  30C8               	movlw	200
  1778  04C5  00AB               	movwf	setupNewVolumeFlow@new_ml
  1779  04C6  3000               	movlw	0
  1780  04C7  00AC               	movwf	setupNewVolumeFlow@new_ml+1
  1781  04C8  120A  118A  2460  120A  118A  	fcall	_setupNewVolumeFlow
  1782  04CD                     l112:
  1783  04CD  0008               	return
  1784  04CE                     __end_of_setupTimer:
  1785                           
  1786                           	psect	text10
  1787  0460                     __ptext10:	
  1788 ;; *************** function _setupNewVolumeFlow *****************
  1789 ;; Defined at:
  1790 ;;		line 88 in file "main.c"
  1791 ;; Parameters:    Size  Location     Type
  1792 ;;  new_ml          2   11[BANK0 ] int 
  1793 ;; Auto vars:     Size  Location     Type
  1794 ;;  new_ms          2   13[BANK0 ] int 
  1795 ;; Return value:  Size  Location     Type
  1796 ;;                  1    wreg      void 
  1797 ;; Registers used:
  1798 ;;		wreg, status,2, status,0, pclath, cstack
  1799 ;; Tracked objects:
  1800 ;;		On entry : 0/0
  1801 ;;		On exit  : 0/0
  1802 ;;		Unchanged: 0/0
  1803 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1804 ;;      Params:         0       2       0       0       0
  1805 ;;      Locals:         0       2       0       0       0
  1806 ;;      Temps:          0       0       0       0       0
  1807 ;;      Totals:         0       4       0       0       0
  1808 ;;Total ram usage:        4 bytes
  1809 ;; Hardware stack levels used: 1
  1810 ;; Hardware stack levels required when called: 5
  1811 ;; This function calls:
  1812 ;;		___wmul
  1813 ;;		_changeTimerMaxConter
  1814 ;; This function is called by:
  1815 ;;		_setupTimer
  1816 ;; This function uses a non-reentrant model
  1817 ;;
  1818                           
  1819  0460                     _setupNewVolumeFlow:	
  1820                           ;psect for function _setupNewVolumeFlow
  1821                           
  1822  0460                     l1570:	
  1823                           ;incstack = 0
  1824                           ; Regs used in _setupNewVolumeFlow: [wreg+status,2+status,0+pclath+cstack]
  1825                           
  1826                           
  1827                           ;main.c: 88: void setupNewVolumeFlow(int new_ml);main.c: 89: {;main.c: 91:     int new_m
      +                          s = new_ml*MLxMS;
  1828  0460  1283               	bcf	3,5	;RP0=0, select bank0
  1829  0461  1303               	bcf	3,6	;RP1=0, select bank0
  1830  0462  082C               	movf	setupNewVolumeFlow@new_ml+1,w
  1831  0463  00F4               	movwf	___wmul@multiplier+1
  1832  0464  082B               	movf	setupNewVolumeFlow@new_ml,w
  1833  0465  00F3               	movwf	___wmul@multiplier
  1834  0466  3019               	movlw	25
  1835  0467  00F5               	movwf	___wmul@multiplicand
  1836  0468  3000               	movlw	0
  1837  0469  00F6               	movwf	___wmul@multiplicand+1
  1838  046A  120A  118A  2419  120A  118A  	fcall	___wmul
  1839  046F  0874               	movf	?___wmul+1,w
  1840  0470  1283               	bcf	3,5	;RP0=0, select bank0
  1841  0471  1303               	bcf	3,6	;RP1=0, select bank0
  1842  0472  00AE               	movwf	setupNewVolumeFlow@new_ms+1
  1843  0473  0873               	movf	?___wmul,w
  1844  0474  00AD               	movwf	setupNewVolumeFlow@new_ms
  1845                           
  1846                           ;main.c: 93:     changeTimerMaxConter(new_ms);
  1847  0475  082E               	movf	setupNewVolumeFlow@new_ms+1,w
  1848  0476  00AA               	movwf	changeTimerMaxConter@mili_s+1
  1849  0477  082D               	movf	setupNewVolumeFlow@new_ms,w
  1850  0478  00A9               	movwf	changeTimerMaxConter@mili_s
  1851  0479  120A  118A  24E5  120A  118A  	fcall	_changeTimerMaxConter
  1852  047E                     l109:
  1853  047E  0008               	return
  1854  047F                     __end_of_setupNewVolumeFlow:
  1855                           
  1856                           	psect	text11
  1857  04E5                     __ptext11:	
  1858 ;; *************** function _changeTimerMaxConter *****************
  1859 ;; Defined at:
  1860 ;;		line 79 in file "main.c"
  1861 ;; Parameters:    Size  Location     Type
  1862 ;;  mili_s          2    9[BANK0 ] int 
  1863 ;; Auto vars:     Size  Location     Type
  1864 ;;		None
  1865 ;; Return value:  Size  Location     Type
  1866 ;;                  1    wreg      void 
  1867 ;; Registers used:
  1868 ;;		wreg, status,2, status,0, pclath, cstack
  1869 ;; Tracked objects:
  1870 ;;		On entry : 0/0
  1871 ;;		On exit  : 0/0
  1872 ;;		Unchanged: 0/0
  1873 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1874 ;;      Params:         0       2       0       0       0
  1875 ;;      Locals:         0       0       0       0       0
  1876 ;;      Temps:          0       0       0       0       0
  1877 ;;      Totals:         0       2       0       0       0
  1878 ;;Total ram usage:        2 bytes
  1879 ;; Hardware stack levels used: 1
  1880 ;; Hardware stack levels required when called: 4
  1881 ;; This function calls:
  1882 ;;		___awdiv
  1883 ;; This function is called by:
  1884 ;;		_setupNewVolumeFlow
  1885 ;; This function uses a non-reentrant model
  1886 ;;
  1887                           
  1888  04E5                     _changeTimerMaxConter:	
  1889                           ;psect for function _changeTimerMaxConter
  1890                           
  1891  04E5                     l1536:	
  1892                           ;incstack = 0
  1893                           ; Regs used in _changeTimerMaxConter: [wreg+status,2+status,0+pclath+cstack]
  1894                           
  1895                           
  1896                           ;main.c: 81:     timer_counter_max = (mili_s/500);
  1897  04E5  30F4               	movlw	244
  1898  04E6  1283               	bcf	3,5	;RP0=0, select bank0
  1899  04E7  1303               	bcf	3,6	;RP1=0, select bank0
  1900  04E8  00A0               	movwf	___awdiv@divisor
  1901  04E9  3001               	movlw	1
  1902  04EA  00A1               	movwf	___awdiv@divisor+1
  1903  04EB  082A               	movf	changeTimerMaxConter@mili_s+1,w
  1904  04EC  00A3               	movwf	___awdiv@dividend+1
  1905  04ED  0829               	movf	changeTimerMaxConter@mili_s,w
  1906  04EE  00A2               	movwf	___awdiv@dividend
  1907  04EF  120A  118A  21E2  120A  118A  	fcall	___awdiv
  1908  04F4  1283               	bcf	3,5	;RP0=0, select bank0
  1909  04F5  1303               	bcf	3,6	;RP1=0, select bank0
  1910  04F6  0821               	movf	?___awdiv+1,w
  1911  04F7  00C7               	movwf	_timer_counter_max+1
  1912  04F8  0820               	movf	?___awdiv,w
  1913  04F9  00C6               	movwf	_timer_counter_max
  1914  04FA                     l106:
  1915  04FA  0008               	return
  1916  04FB                     __end_of_changeTimerMaxConter:
  1917                           
  1918                           	psect	text12
  1919  01E2                     __ptext12:	
  1920 ;; *************** function ___awdiv *****************
  1921 ;; Defined at:
  1922 ;;		line 5 in file "D:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\awdiv.c"
  1923 ;; Parameters:    Size  Location     Type
  1924 ;;  divisor         2    0[BANK0 ] int 
  1925 ;;  dividend        2    2[BANK0 ] int 
  1926 ;; Auto vars:     Size  Location     Type
  1927 ;;  quotient        2    7[BANK0 ] int 
  1928 ;;  sign            1    6[BANK0 ] unsigned char 
  1929 ;;  counter         1    5[BANK0 ] unsigned char 
  1930 ;; Return value:  Size  Location     Type
  1931 ;;                  2    0[BANK0 ] int 
  1932 ;; Registers used:
  1933 ;;		wreg, status,2, status,0
  1934 ;; Tracked objects:
  1935 ;;		On entry : 0/0
  1936 ;;		On exit  : 0/0
  1937 ;;		Unchanged: 0/0
  1938 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1939 ;;      Params:         0       4       0       0       0
  1940 ;;      Locals:         0       4       0       0       0
  1941 ;;      Temps:          0       1       0       0       0
  1942 ;;      Totals:         0       9       0       0       0
  1943 ;;Total ram usage:        9 bytes
  1944 ;; Hardware stack levels used: 1
  1945 ;; Hardware stack levels required when called: 3
  1946 ;; This function calls:
  1947 ;;		Nothing
  1948 ;; This function is called by:
  1949 ;;		_changeTimerMaxConter
  1950 ;;		_getADConverterValue
  1951 ;; This function uses a non-reentrant model
  1952 ;;
  1953                           
  1954  01E2                     ___awdiv:	
  1955                           ;psect for function ___awdiv
  1956                           
  1957  01E2                     l1482:	
  1958                           ;incstack = 0
  1959                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1960                           
  1961  01E2  1283               	bcf	3,5	;RP0=0, select bank0
  1962  01E3  1303               	bcf	3,6	;RP1=0, select bank0
  1963  01E4  01A6               	clrf	___awdiv@sign
  1964  01E5                     l1484:
  1965  01E5  1FA1               	btfss	___awdiv@divisor+1,7
  1966  01E6  29E8               	goto	u1101
  1967  01E7  29E9               	goto	u1100
  1968  01E8                     u1101:
  1969  01E8  29F0               	goto	l1490
  1970  01E9                     u1100:
  1971  01E9                     l1486:
  1972  01E9  09A0               	comf	___awdiv@divisor,f
  1973  01EA  09A1               	comf	___awdiv@divisor+1,f
  1974  01EB  0AA0               	incf	___awdiv@divisor,f
  1975  01EC  1903               	skipnz
  1976  01ED  0AA1               	incf	___awdiv@divisor+1,f
  1977  01EE                     l1488:
  1978  01EE  01A6               	clrf	___awdiv@sign
  1979  01EF  0AA6               	incf	___awdiv@sign,f
  1980  01F0                     l1490:
  1981  01F0  1FA3               	btfss	___awdiv@dividend+1,7
  1982  01F1  29F3               	goto	u1111
  1983  01F2  29F4               	goto	u1110
  1984  01F3                     u1111:
  1985  01F3  29FD               	goto	l1496
  1986  01F4                     u1110:
  1987  01F4                     l1492:
  1988  01F4  09A2               	comf	___awdiv@dividend,f
  1989  01F5  09A3               	comf	___awdiv@dividend+1,f
  1990  01F6  0AA2               	incf	___awdiv@dividend,f
  1991  01F7  1903               	skipnz
  1992  01F8  0AA3               	incf	___awdiv@dividend+1,f
  1993  01F9                     l1494:
  1994  01F9  3001               	movlw	1
  1995  01FA  00A4               	movwf	??___awdiv
  1996  01FB  0824               	movf	??___awdiv,w
  1997  01FC  06A6               	xorwf	___awdiv@sign,f
  1998  01FD                     l1496:
  1999  01FD  01A7               	clrf	___awdiv@quotient
  2000  01FE  01A8               	clrf	___awdiv@quotient+1
  2001  01FF                     l1498:
  2002  01FF  0820               	movf	___awdiv@divisor,w
  2003  0200  0421               	iorwf	___awdiv@divisor+1,w
  2004  0201  1903               	btfsc	3,2
  2005  0202  2A04               	goto	u1121
  2006  0203  2A05               	goto	u1120
  2007  0204                     u1121:
  2008  0204  2A3C               	goto	l1518
  2009  0205                     u1120:
  2010  0205                     l1500:
  2011  0205  01A5               	clrf	___awdiv@counter
  2012  0206  0AA5               	incf	___awdiv@counter,f
  2013  0207  2A13               	goto	l1506
  2014  0208                     l1502:
  2015  0208  3001               	movlw	1
  2016  0209                     u1135:
  2017  0209  1003               	clrc
  2018  020A  0DA0               	rlf	___awdiv@divisor,f
  2019  020B  0DA1               	rlf	___awdiv@divisor+1,f
  2020  020C  3EFF               	addlw	-1
  2021  020D  1D03               	skipz
  2022  020E  2A09               	goto	u1135
  2023  020F                     l1504:
  2024  020F  3001               	movlw	1
  2025  0210  00A4               	movwf	??___awdiv
  2026  0211  0824               	movf	??___awdiv,w
  2027  0212  07A5               	addwf	___awdiv@counter,f
  2028  0213                     l1506:
  2029  0213  1FA1               	btfss	___awdiv@divisor+1,7
  2030  0214  2A16               	goto	u1141
  2031  0215  2A17               	goto	u1140
  2032  0216                     u1141:
  2033  0216  2A08               	goto	l1502
  2034  0217                     u1140:
  2035  0217                     l1508:
  2036  0217  3001               	movlw	1
  2037  0218                     u1155:
  2038  0218  1003               	clrc
  2039  0219  0DA7               	rlf	___awdiv@quotient,f
  2040  021A  0DA8               	rlf	___awdiv@quotient+1,f
  2041  021B  3EFF               	addlw	-1
  2042  021C  1D03               	skipz
  2043  021D  2A18               	goto	u1155
  2044  021E  0821               	movf	___awdiv@divisor+1,w
  2045  021F  0223               	subwf	___awdiv@dividend+1,w
  2046  0220  1D03               	skipz
  2047  0221  2A24               	goto	u1165
  2048  0222  0820               	movf	___awdiv@divisor,w
  2049  0223  0222               	subwf	___awdiv@dividend,w
  2050  0224                     u1165:
  2051  0224  1C03               	skipc
  2052  0225  2A27               	goto	u1161
  2053  0226  2A28               	goto	u1160
  2054  0227                     u1161:
  2055  0227  2A2F               	goto	l1514
  2056  0228                     u1160:
  2057  0228                     l1510:
  2058  0228  0820               	movf	___awdiv@divisor,w
  2059  0229  02A2               	subwf	___awdiv@dividend,f
  2060  022A  0821               	movf	___awdiv@divisor+1,w
  2061  022B  1C03               	skipc
  2062  022C  03A3               	decf	___awdiv@dividend+1,f
  2063  022D  02A3               	subwf	___awdiv@dividend+1,f
  2064  022E                     l1512:
  2065  022E  1427               	bsf	___awdiv@quotient,0
  2066  022F                     l1514:
  2067  022F  3001               	movlw	1
  2068  0230                     u1175:
  2069  0230  1003               	clrc
  2070  0231  0CA1               	rrf	___awdiv@divisor+1,f
  2071  0232  0CA0               	rrf	___awdiv@divisor,f
  2072  0233  3EFF               	addlw	-1
  2073  0234  1D03               	skipz
  2074  0235  2A30               	goto	u1175
  2075  0236                     l1516:
  2076  0236  3001               	movlw	1
  2077  0237  02A5               	subwf	___awdiv@counter,f
  2078  0238  1D03               	btfss	3,2
  2079  0239  2A3B               	goto	u1181
  2080  023A  2A3C               	goto	u1180
  2081  023B                     u1181:
  2082  023B  2A17               	goto	l1508
  2083  023C                     u1180:
  2084  023C                     l1518:
  2085  023C  0826               	movf	___awdiv@sign,w
  2086  023D  1903               	btfsc	3,2
  2087  023E  2A40               	goto	u1191
  2088  023F  2A41               	goto	u1190
  2089  0240                     u1191:
  2090  0240  2A46               	goto	l1522
  2091  0241                     u1190:
  2092  0241                     l1520:
  2093  0241  09A7               	comf	___awdiv@quotient,f
  2094  0242  09A8               	comf	___awdiv@quotient+1,f
  2095  0243  0AA7               	incf	___awdiv@quotient,f
  2096  0244  1903               	skipnz
  2097  0245  0AA8               	incf	___awdiv@quotient+1,f
  2098  0246                     l1522:
  2099  0246  0828               	movf	___awdiv@quotient+1,w
  2100  0247  00A1               	movwf	?___awdiv+1
  2101  0248  0827               	movf	___awdiv@quotient,w
  2102  0249  00A0               	movwf	?___awdiv
  2103  024A                     l403:
  2104  024A  0008               	return
  2105  024B                     __end_of___awdiv:
  2106                           
  2107                           	psect	text13
  2108  0419                     __ptext13:	
  2109 ;; *************** function ___wmul *****************
  2110 ;; Defined at:
  2111 ;;		line 15 in file "D:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\Umul16.c"
  2112 ;; Parameters:    Size  Location     Type
  2113 ;;  multiplier      2    3[COMMON] unsigned int 
  2114 ;;  multiplicand    2    5[COMMON] unsigned int 
  2115 ;; Auto vars:     Size  Location     Type
  2116 ;;  product         2    7[COMMON] unsigned int 
  2117 ;; Return value:  Size  Location     Type
  2118 ;;                  2    3[COMMON] unsigned int 
  2119 ;; Registers used:
  2120 ;;		wreg, status,2, status,0
  2121 ;; Tracked objects:
  2122 ;;		On entry : 0/0
  2123 ;;		On exit  : 0/0
  2124 ;;		Unchanged: 0/0
  2125 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2126 ;;      Params:         4       0       0       0       0
  2127 ;;      Locals:         2       0       0       0       0
  2128 ;;      Temps:          0       0       0       0       0
  2129 ;;      Totals:         6       0       0       0       0
  2130 ;;Total ram usage:        6 bytes
  2131 ;; Hardware stack levels used: 1
  2132 ;; Hardware stack levels required when called: 3
  2133 ;; This function calls:
  2134 ;;		Nothing
  2135 ;; This function is called by:
  2136 ;;		_setupNewVolumeFlow
  2137 ;;		_getADConverterValue
  2138 ;; This function uses a non-reentrant model
  2139 ;;
  2140                           
  2141  0419                     ___wmul:	
  2142                           ;psect for function ___wmul
  2143                           
  2144  0419                     l1190:	
  2145                           ;incstack = 0
  2146                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2147                           
  2148  0419  01F7               	clrf	___wmul@product
  2149  041A  01F8               	clrf	___wmul@product+1
  2150  041B                     l1192:
  2151  041B  1C73               	btfss	___wmul@multiplier,0
  2152  041C  2C1E               	goto	u701
  2153  041D  2C1F               	goto	u700
  2154  041E                     u701:
  2155  041E  2C25               	goto	l250
  2156  041F                     u700:
  2157  041F                     l1194:
  2158  041F  0875               	movf	___wmul@multiplicand,w
  2159  0420  07F7               	addwf	___wmul@product,f
  2160  0421  1803               	skipnc
  2161  0422  0AF8               	incf	___wmul@product+1,f
  2162  0423  0876               	movf	___wmul@multiplicand+1,w
  2163  0424  07F8               	addwf	___wmul@product+1,f
  2164  0425                     l250:
  2165  0425  3001               	movlw	1
  2166  0426                     u715:
  2167  0426  1003               	clrc
  2168  0427  0DF5               	rlf	___wmul@multiplicand,f
  2169  0428  0DF6               	rlf	___wmul@multiplicand+1,f
  2170  0429  3EFF               	addlw	-1
  2171  042A  1D03               	skipz
  2172  042B  2C26               	goto	u715
  2173  042C                     l1196:
  2174  042C  3001               	movlw	1
  2175  042D                     u725:
  2176  042D  1003               	clrc
  2177  042E  0CF4               	rrf	___wmul@multiplier+1,f
  2178  042F  0CF3               	rrf	___wmul@multiplier,f
  2179  0430  3EFF               	addlw	-1
  2180  0431  1D03               	skipz
  2181  0432  2C2D               	goto	u725
  2182  0433                     l1198:
  2183  0433  0873               	movf	___wmul@multiplier,w
  2184  0434  0474               	iorwf	___wmul@multiplier+1,w
  2185  0435  1D03               	btfss	3,2
  2186  0436  2C38               	goto	u731
  2187  0437  2C39               	goto	u730
  2188  0438                     u731:
  2189  0438  2C1B               	goto	l1192
  2190  0439                     u730:
  2191  0439                     l1200:
  2192  0439  0878               	movf	___wmul@product+1,w
  2193  043A  00F4               	movwf	?___wmul+1
  2194  043B  0877               	movf	___wmul@product,w
  2195  043C  00F3               	movwf	?___wmul
  2196  043D                     l252:
  2197  043D  0008               	return
  2198  043E                     __end_of___wmul:
  2199                           
  2200                           	psect	text14
  2201  0550                     __ptext14:	
  2202 ;; *************** function _setupExternalInterruption *****************
  2203 ;; Defined at:
  2204 ;;		line 191 in file "main.c"
  2205 ;; Parameters:    Size  Location     Type
  2206 ;;		None
  2207 ;; Auto vars:     Size  Location     Type
  2208 ;;		None
  2209 ;; Return value:  Size  Location     Type
  2210 ;;                  1    wreg      void 
  2211 ;; Registers used:
  2212 ;;		None
  2213 ;; Tracked objects:
  2214 ;;		On entry : 0/0
  2215 ;;		On exit  : 0/0
  2216 ;;		Unchanged: 0/0
  2217 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2218 ;;      Params:         0       0       0       0       0
  2219 ;;      Locals:         0       0       0       0       0
  2220 ;;      Temps:          0       0       0       0       0
  2221 ;;      Totals:         0       0       0       0       0
  2222 ;;Total ram usage:        0 bytes
  2223 ;; Hardware stack levels used: 1
  2224 ;; Hardware stack levels required when called: 3
  2225 ;; This function calls:
  2226 ;;		Nothing
  2227 ;; This function is called by:
  2228 ;;		_main
  2229 ;; This function uses a non-reentrant model
  2230 ;;
  2231                           
  2232  0550                     _setupExternalInterruption:	
  2233                           ;psect for function _setupExternalInterruption
  2234                           
  2235  0550                     l1056:	
  2236                           ;incstack = 0
  2237                           ; Regs used in _setupExternalInterruption: []
  2238                           
  2239                           
  2240                           ;main.c: 193:     OPTION_REGbits.INTEDG = 1;
  2241  0550  1683               	bsf	3,5	;RP0=1, select bank1
  2242  0551  1303               	bcf	3,6	;RP1=0, select bank1
  2243  0552  1701               	bsf	1,6	;volatile
  2244                           
  2245                           ;main.c: 194:  INTCONbits.GIE = 1;
  2246  0553  178B               	bsf	11,7	;volatile
  2247                           
  2248                           ;main.c: 195:  INTCONbits.INTE = 1;
  2249  0554  160B               	bsf	11,4	;volatile
  2250  0555                     l135:	
  2251                           ;main.c: 196:     return;
  2252                           
  2253  0555  0008               	return
  2254  0556                     __end_of_setupExternalInterruption:
  2255                           
  2256                           	psect	text15
  2257  04CE                     __ptext15:	
  2258 ;; *************** function _setupADC *****************
  2259 ;; Defined at:
  2260 ;;		line 243 in file "main.c"
  2261 ;; Parameters:    Size  Location     Type
  2262 ;;		None
  2263 ;; Auto vars:     Size  Location     Type
  2264 ;;		None
  2265 ;; Return value:  Size  Location     Type
  2266 ;;                  1    wreg      void 
  2267 ;; Registers used:
  2268 ;;		status,2
  2269 ;; Tracked objects:
  2270 ;;		On entry : 0/0
  2271 ;;		On exit  : 0/0
  2272 ;;		Unchanged: 0/0
  2273 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2274 ;;      Params:         0       0       0       0       0
  2275 ;;      Locals:         0       0       0       0       0
  2276 ;;      Temps:          0       0       0       0       0
  2277 ;;      Totals:         0       0       0       0       0
  2278 ;;Total ram usage:        0 bytes
  2279 ;; Hardware stack levels used: 1
  2280 ;; Hardware stack levels required when called: 3
  2281 ;; This function calls:
  2282 ;;		Nothing
  2283 ;; This function is called by:
  2284 ;;		_main
  2285 ;; This function uses a non-reentrant model
  2286 ;;
  2287                           
  2288  04CE                     _setupADC:	
  2289                           ;psect for function _setupADC
  2290                           
  2291  04CE                     l1074:	
  2292                           ;incstack = 0
  2293                           ; Regs used in _setupADC: [status,2]
  2294                           
  2295                           
  2296                           ;main.c: 248:     ADCON1bits.PCFG0 = 1;
  2297  04CE  1683               	bsf	3,5	;RP0=1, select bank1
  2298  04CF  1303               	bcf	3,6	;RP1=0, select bank1
  2299  04D0  141F               	bsf	31,0	;volatile
  2300                           
  2301                           ;main.c: 249:     ADCON1bits.PCFG1 = 1;
  2302  04D1  149F               	bsf	31,1	;volatile
  2303                           
  2304                           ;main.c: 250:     ADCON1bits.PCFG2 = 1;
  2305  04D2  151F               	bsf	31,2	;volatile
  2306                           
  2307                           ;main.c: 251:     ADCON1bits.PCFG3 = 1;
  2308  04D3  159F               	bsf	31,3	;volatile
  2309                           
  2310                           ;main.c: 254:     ADCON1bits.ADCS2 = 1;
  2311  04D4  171F               	bsf	31,6	;volatile
  2312                           
  2313                           ;main.c: 255:     ADCON0bits.ADCS1 = 1;
  2314  04D5  1283               	bcf	3,5	;RP0=0, select bank0
  2315  04D6  1303               	bcf	3,6	;RP1=0, select bank0
  2316  04D7  179F               	bsf	31,7	;volatile
  2317                           
  2318                           ;main.c: 256:     ADCON0bits.ADCS0 = 0;
  2319  04D8  131F               	bcf	31,6	;volatile
  2320                           
  2321                           ;main.c: 259:     ADCON1bits.ADFM = 0;
  2322  04D9  1683               	bsf	3,5	;RP0=1, select bank1
  2323  04DA  1303               	bcf	3,6	;RP1=0, select bank1
  2324  04DB  139F               	bcf	31,7	;volatile
  2325  04DC                     l1076:
  2326                           
  2327                           ;main.c: 262:     ADRESL = 0;
  2328  04DC  019E               	clrf	30	;volatile
  2329                           
  2330                           ;main.c: 263:     ADRESH = 0;
  2331  04DD  1283               	bcf	3,5	;RP0=0, select bank0
  2332  04DE  1303               	bcf	3,6	;RP1=0, select bank0
  2333  04DF  019E               	clrf	30	;volatile
  2334  04E0                     l1078:
  2335                           
  2336                           ;main.c: 267:     ADCON0bits.ADON = 1;
  2337  04E0  141F               	bsf	31,0	;volatile
  2338  04E1                     l1080:
  2339                           
  2340                           ;main.c: 270:     ADCON0bits.CHS0 = 0;
  2341  04E1  119F               	bcf	31,3	;volatile
  2342  04E2                     l1082:
  2343                           
  2344                           ;main.c: 271:     ADCON0bits.CHS1 = 0;
  2345  04E2  121F               	bcf	31,4	;volatile
  2346  04E3                     l1084:
  2347                           
  2348                           ;main.c: 272:     ADCON0bits.CHS2 = 0;
  2349  04E3  129F               	bcf	31,5	;volatile
  2350  04E4                     l156:
  2351  04E4  0008               	return
  2352  04E5                     __end_of_setupADC:
  2353                           
  2354                           	psect	text16
  2355  03F0                     __ptext16:	
  2356 ;; *************** function _Lcd_Write_String *****************
  2357 ;; Defined at:
  2358 ;;		line 97 in file "./lcd.h"
  2359 ;; Parameters:    Size  Location     Type
  2360 ;;  a               1    wreg     PTR unsigned char 
  2361 ;;		 -> STR_2(12), STR_1(10), 
  2362 ;; Auto vars:     Size  Location     Type
  2363 ;;  a               1    2[BANK0 ] PTR unsigned char 
  2364 ;;		 -> STR_2(12), STR_1(10), 
  2365 ;;  i               2    0[BANK0 ] int 
  2366 ;; Return value:  Size  Location     Type
  2367 ;;                  1    wreg      void 
  2368 ;; Registers used:
  2369 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2370 ;; Tracked objects:
  2371 ;;		On entry : 0/0
  2372 ;;		On exit  : 0/0
  2373 ;;		Unchanged: 0/0
  2374 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2375 ;;      Params:         0       0       0       0       0
  2376 ;;      Locals:         0       3       0       0       0
  2377 ;;      Temps:          0       0       0       0       0
  2378 ;;      Totals:         0       3       0       0       0
  2379 ;;Total ram usage:        3 bytes
  2380 ;; Hardware stack levels used: 1
  2381 ;; Hardware stack levels required when called: 5
  2382 ;; This function calls:
  2383 ;;		_Lcd_Write_Char
  2384 ;; This function is called by:
  2385 ;;		_main
  2386 ;; This function uses a non-reentrant model
  2387 ;;
  2388                           
  2389  03F0                     _Lcd_Write_String:	
  2390                           ;psect for function _Lcd_Write_String
  2391                           
  2392                           
  2393                           ;incstack = 0
  2394                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2395                           ;Lcd_Write_String@a stored from wreg
  2396  03F0  1283               	bcf	3,5	;RP0=0, select bank0
  2397  03F1  1303               	bcf	3,6	;RP1=0, select bank0
  2398  03F2  00A2               	movwf	Lcd_Write_String@a
  2399  03F3                     l1616:
  2400                           
  2401                           ;./lcd.h: 97: void Lcd_Write_String(char *a);./lcd.h: 98: {;./lcd.h: 99:  int i;;./lcd.h
      +                          : 100:  for(i=0;a[i]!='\0';i++)
  2402  03F3  01A0               	clrf	Lcd_Write_String@i
  2403  03F4  01A1               	clrf	Lcd_Write_String@i+1
  2404  03F5  2C0B               	goto	l1622
  2405  03F6                     l1618:
  2406                           
  2407                           ;./lcd.h: 101:     Lcd_Write_Char(a[i]);
  2408  03F6  0820               	movf	Lcd_Write_String@i,w
  2409  03F7  0722               	addwf	Lcd_Write_String@a,w
  2410  03F8  0084               	movwf	4
  2411  03F9  120A  118A  247F  120A  118A  	fcall	stringdir
  2412  03FE  120A  118A  235A  120A  118A  	fcall	_Lcd_Write_Char
  2413  0403                     l1620:
  2414  0403  3001               	movlw	1
  2415  0404  1283               	bcf	3,5	;RP0=0, select bank0
  2416  0405  1303               	bcf	3,6	;RP1=0, select bank0
  2417  0406  07A0               	addwf	Lcd_Write_String@i,f
  2418  0407  1803               	skipnc
  2419  0408  0AA1               	incf	Lcd_Write_String@i+1,f
  2420  0409  3000               	movlw	0
  2421  040A  07A1               	addwf	Lcd_Write_String@i+1,f
  2422  040B                     l1622:
  2423  040B  0820               	movf	Lcd_Write_String@i,w
  2424  040C  0722               	addwf	Lcd_Write_String@a,w
  2425  040D  0084               	movwf	4
  2426  040E  120A  118A  247F  120A  118A  	fcall	stringdir
  2427  0413  3A00               	xorlw	0
  2428  0414  1D03               	skipz
  2429  0415  2C17               	goto	u1291
  2430  0416  2C18               	goto	u1290
  2431  0417                     u1291:
  2432  0417  2BF6               	goto	l1618
  2433  0418                     u1290:
  2434  0418                     l87:
  2435  0418  0008               	return
  2436  0419                     __end_of_Lcd_Write_String:
  2437                           
  2438                           	psect	text17
  2439  035A                     __ptext17:	
  2440 ;; *************** function _Lcd_Write_Char *****************
  2441 ;; Defined at:
  2442 ;;		line 81 in file "./lcd.h"
  2443 ;; Parameters:    Size  Location     Type
  2444 ;;  a               1    wreg     unsigned char 
  2445 ;; Auto vars:     Size  Location     Type
  2446 ;;  a               1    7[COMMON] unsigned char 
  2447 ;;  y               1    6[COMMON] unsigned char 
  2448 ;;  temp            1    5[COMMON] unsigned char 
  2449 ;; Return value:  Size  Location     Type
  2450 ;;                  1    wreg      void 
  2451 ;; Registers used:
  2452 ;;		wreg, status,2, status,0, pclath, cstack
  2453 ;; Tracked objects:
  2454 ;;		On entry : 0/0
  2455 ;;		On exit  : 0/0
  2456 ;;		Unchanged: 0/0
  2457 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2458 ;;      Params:         0       0       0       0       0
  2459 ;;      Locals:         3       0       0       0       0
  2460 ;;      Temps:          1       0       0       0       0
  2461 ;;      Totals:         4       0       0       0       0
  2462 ;;Total ram usage:        4 bytes
  2463 ;; Hardware stack levels used: 1
  2464 ;; Hardware stack levels required when called: 4
  2465 ;; This function calls:
  2466 ;;		_Lcd_Port
  2467 ;; This function is called by:
  2468 ;;		_Lcd_Write_String
  2469 ;; This function uses a non-reentrant model
  2470 ;;
  2471                           
  2472  035A                     _Lcd_Write_Char:	
  2473                           ;psect for function _Lcd_Write_Char
  2474                           
  2475                           
  2476                           ;incstack = 0
  2477                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  2478                           ;Lcd_Write_Char@a stored from wreg
  2479  035A  00F7               	movwf	Lcd_Write_Char@a
  2480  035B                     l1550:
  2481                           
  2482                           ;./lcd.h: 81: void Lcd_Write_Char(char a);./lcd.h: 82: {;./lcd.h: 83:    char temp,y;;./
      +                          lcd.h: 84:    temp = a&0x0F;
  2483  035B  0877               	movf	Lcd_Write_Char@a,w
  2484  035C  390F               	andlw	15
  2485  035D  00F4               	movwf	??_Lcd_Write_Char
  2486  035E  0874               	movf	??_Lcd_Write_Char,w
  2487  035F  00F5               	movwf	Lcd_Write_Char@temp
  2488                           
  2489                           ;./lcd.h: 85:    y = a&0xF0;
  2490  0360  0877               	movf	Lcd_Write_Char@a,w
  2491  0361  39F0               	andlw	240
  2492  0362  00F4               	movwf	??_Lcd_Write_Char
  2493  0363  0874               	movf	??_Lcd_Write_Char,w
  2494  0364  00F6               	movwf	Lcd_Write_Char@y
  2495  0365                     l1552:
  2496                           
  2497                           ;./lcd.h: 86:    RD2 = 1;
  2498  0365  1283               	bcf	3,5	;RP0=0, select bank0
  2499  0366  1303               	bcf	3,6	;RP1=0, select bank0
  2500  0367  1508               	bsf	8,2	;volatile
  2501  0368                     l1554:
  2502                           
  2503                           ;./lcd.h: 87:    Lcd_Port(y>>4);
  2504  0368  0876               	movf	Lcd_Write_Char@y,w
  2505  0369  00F4               	movwf	??_Lcd_Write_Char
  2506  036A  3004               	movlw	4
  2507  036B                     u1245:
  2508  036B  1003               	clrc
  2509  036C  0CF4               	rrf	??_Lcd_Write_Char,f
  2510  036D  3EFF               	addlw	-1
  2511  036E  1D03               	skipz
  2512  036F  2B6B               	goto	u1245
  2513  0370  0874               	movf	??_Lcd_Write_Char,w
  2514  0371  120A  118A  243E  120A  118A  	fcall	_Lcd_Port
  2515  0376                     l1556:
  2516                           
  2517                           ;./lcd.h: 88:    RD3 = 1;
  2518  0376  1283               	bcf	3,5	;RP0=0, select bank0
  2519  0377  1303               	bcf	3,6	;RP1=0, select bank0
  2520  0378  1588               	bsf	8,3	;volatile
  2521  0379                     l1558:
  2522                           
  2523                           ;./lcd.h: 89:    _delay((unsigned long)((40)*(4000000/4000000.0)));
  2524  0379  300D               	movlw	13
  2525  037A  00F4               	movwf	??_Lcd_Write_Char
  2526  037B                     u1347:
  2527  037B  0BF4               	decfsz	??_Lcd_Write_Char,f
  2528  037C  2B7B               	goto	u1347
  2529  037D                     l1560:
  2530                           
  2531                           ;./lcd.h: 90:    RD3 = 0;
  2532  037D  1283               	bcf	3,5	;RP0=0, select bank0
  2533  037E  1303               	bcf	3,6	;RP1=0, select bank0
  2534  037F  1188               	bcf	8,3	;volatile
  2535  0380                     l1562:
  2536                           
  2537                           ;./lcd.h: 91:    Lcd_Port(temp);
  2538  0380  0875               	movf	Lcd_Write_Char@temp,w
  2539  0381  120A  118A  243E  120A  118A  	fcall	_Lcd_Port
  2540  0386                     l1564:
  2541                           
  2542                           ;./lcd.h: 92:    RD3 = 1;
  2543  0386  1283               	bcf	3,5	;RP0=0, select bank0
  2544  0387  1303               	bcf	3,6	;RP1=0, select bank0
  2545  0388  1588               	bsf	8,3	;volatile
  2546  0389                     l1566:
  2547                           
  2548                           ;./lcd.h: 93:    _delay((unsigned long)((40)*(4000000/4000000.0)));
  2549  0389  300D               	movlw	13
  2550  038A  00F4               	movwf	??_Lcd_Write_Char
  2551  038B                     u1357:
  2552  038B  0BF4               	decfsz	??_Lcd_Write_Char,f
  2553  038C  2B8B               	goto	u1357
  2554  038D                     l1568:
  2555                           
  2556                           ;./lcd.h: 94:    RD3 = 0;
  2557  038D  1283               	bcf	3,5	;RP0=0, select bank0
  2558  038E  1303               	bcf	3,6	;RP1=0, select bank0
  2559  038F  1188               	bcf	8,3	;volatile
  2560  0390                     l81:
  2561  0390  0008               	return
  2562  0391                     __end_of_Lcd_Write_Char:
  2563                           
  2564                           	psect	text18
  2565  0302                     __ptext18:	
  2566 ;; *************** function _Lcd_Set_Cursor *****************
  2567 ;; Defined at:
  2568 ;;		line 41 in file "./lcd.h"
  2569 ;; Parameters:    Size  Location     Type
  2570 ;;  a               1    wreg     unsigned char 
  2571 ;;  b               1    7[COMMON] unsigned char 
  2572 ;; Auto vars:     Size  Location     Type
  2573 ;;  a               1    2[BANK0 ] unsigned char 
  2574 ;;  temp            1    5[BANK0 ] unsigned char 
  2575 ;;  y               1    4[BANK0 ] unsigned char 
  2576 ;;  z               1    3[BANK0 ] unsigned char 
  2577 ;; Return value:  Size  Location     Type
  2578 ;;                  1    wreg      void 
  2579 ;; Registers used:
  2580 ;;		wreg, status,2, status,0, pclath, cstack
  2581 ;; Tracked objects:
  2582 ;;		On entry : 0/0
  2583 ;;		On exit  : 0/0
  2584 ;;		Unchanged: 0/0
  2585 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2586 ;;      Params:         1       0       0       0       0
  2587 ;;      Locals:         0       4       0       0       0
  2588 ;;      Temps:          0       2       0       0       0
  2589 ;;      Totals:         1       6       0       0       0
  2590 ;;Total ram usage:        7 bytes
  2591 ;; Hardware stack levels used: 1
  2592 ;; Hardware stack levels required when called: 5
  2593 ;; This function calls:
  2594 ;;		_Lcd_Cmd
  2595 ;; This function is called by:
  2596 ;;		_main
  2597 ;; This function uses a non-reentrant model
  2598 ;;
  2599                           
  2600  0302                     _Lcd_Set_Cursor:	
  2601                           ;psect for function _Lcd_Set_Cursor
  2602                           
  2603                           
  2604                           ;incstack = 0
  2605                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  2606                           ;Lcd_Set_Cursor@a stored from wreg
  2607  0302  1283               	bcf	3,5	;RP0=0, select bank0
  2608  0303  1303               	bcf	3,6	;RP1=0, select bank0
  2609  0304  00A2               	movwf	Lcd_Set_Cursor@a
  2610  0305                     l1586:
  2611                           
  2612                           ;./lcd.h: 41: void Lcd_Set_Cursor(char a, char b);./lcd.h: 42: {;./lcd.h: 43:  char temp
      +                          ,z,y;;./lcd.h: 44:  if(a == 1)
  2613  0305  0322               	decf	Lcd_Set_Cursor@a,w
  2614  0306  1D03               	btfss	3,2
  2615  0307  2B09               	goto	u1251
  2616  0308  2B0A               	goto	u1250
  2617  0309                     u1251:
  2618  0309  2B2F               	goto	l1596
  2619  030A                     u1250:
  2620  030A                     l1588:
  2621                           
  2622                           ;./lcd.h: 45:  {;./lcd.h: 46:    temp = 0x80 + b - 1;
  2623  030A  0877               	movf	Lcd_Set_Cursor@b,w
  2624  030B  3E7F               	addlw	127
  2625  030C  00A0               	movwf	??_Lcd_Set_Cursor
  2626  030D  0820               	movf	??_Lcd_Set_Cursor,w
  2627  030E  00A5               	movwf	Lcd_Set_Cursor@temp
  2628                           
  2629                           ;./lcd.h: 47:   z = temp>>4;
  2630  030F  0825               	movf	Lcd_Set_Cursor@temp,w
  2631  0310  00A0               	movwf	??_Lcd_Set_Cursor
  2632  0311  3004               	movlw	4
  2633  0312                     u1265:
  2634  0312  1003               	clrc
  2635  0313  0CA0               	rrf	??_Lcd_Set_Cursor,f
  2636  0314  3EFF               	addlw	-1
  2637  0315  1D03               	skipz
  2638  0316  2B12               	goto	u1265
  2639  0317  0820               	movf	??_Lcd_Set_Cursor,w
  2640  0318  00A1               	movwf	??_Lcd_Set_Cursor+1
  2641  0319  0821               	movf	??_Lcd_Set_Cursor+1,w
  2642  031A  00A3               	movwf	Lcd_Set_Cursor@z
  2643  031B                     l1590:
  2644                           
  2645                           ;./lcd.h: 48:   y = temp & 0x0F;
  2646  031B  0825               	movf	Lcd_Set_Cursor@temp,w
  2647  031C  390F               	andlw	15
  2648  031D  00A0               	movwf	??_Lcd_Set_Cursor
  2649  031E  0820               	movf	??_Lcd_Set_Cursor,w
  2650  031F  00A4               	movwf	Lcd_Set_Cursor@y
  2651  0320                     l1592:
  2652                           
  2653                           ;./lcd.h: 49:   Lcd_Cmd(z);
  2654  0320  0823               	movf	Lcd_Set_Cursor@z,w
  2655  0321  120A  118A  249B  120A  118A  	fcall	_Lcd_Cmd
  2656  0326                     l1594:
  2657                           
  2658                           ;./lcd.h: 50:   Lcd_Cmd(y);
  2659  0326  1283               	bcf	3,5	;RP0=0, select bank0
  2660  0327  1303               	bcf	3,6	;RP1=0, select bank0
  2661  0328  0824               	movf	Lcd_Set_Cursor@y,w
  2662  0329  120A  118A  249B  120A  118A  	fcall	_Lcd_Cmd
  2663                           
  2664                           ;./lcd.h: 51:  }
  2665  032E  2B59               	goto	l75
  2666  032F                     l1596:
  2667  032F  3002               	movlw	2
  2668  0330  0622               	xorwf	Lcd_Set_Cursor@a,w
  2669  0331  1D03               	btfss	3,2
  2670  0332  2B34               	goto	u1271
  2671  0333  2B35               	goto	u1270
  2672  0334                     u1271:
  2673  0334  2B59               	goto	l75
  2674  0335                     u1270:
  2675  0335                     l1598:
  2676                           
  2677                           ;./lcd.h: 53:  {;./lcd.h: 54:   temp = 0xC0 + b - 1;
  2678  0335  0877               	movf	Lcd_Set_Cursor@b,w
  2679  0336  3EBF               	addlw	191
  2680  0337  00A0               	movwf	??_Lcd_Set_Cursor
  2681  0338  0820               	movf	??_Lcd_Set_Cursor,w
  2682  0339  00A5               	movwf	Lcd_Set_Cursor@temp
  2683                           
  2684                           ;./lcd.h: 55:   z = temp>>4;
  2685  033A  0825               	movf	Lcd_Set_Cursor@temp,w
  2686  033B  00A0               	movwf	??_Lcd_Set_Cursor
  2687  033C  3004               	movlw	4
  2688  033D                     u1285:
  2689  033D  1003               	clrc
  2690  033E  0CA0               	rrf	??_Lcd_Set_Cursor,f
  2691  033F  3EFF               	addlw	-1
  2692  0340  1D03               	skipz
  2693  0341  2B3D               	goto	u1285
  2694  0342  0820               	movf	??_Lcd_Set_Cursor,w
  2695  0343  00A1               	movwf	??_Lcd_Set_Cursor+1
  2696  0344  0821               	movf	??_Lcd_Set_Cursor+1,w
  2697  0345  00A3               	movwf	Lcd_Set_Cursor@z
  2698  0346                     l1600:
  2699                           
  2700                           ;./lcd.h: 56:   y = temp & 0x0F;
  2701  0346  0825               	movf	Lcd_Set_Cursor@temp,w
  2702  0347  390F               	andlw	15
  2703  0348  00A0               	movwf	??_Lcd_Set_Cursor
  2704  0349  0820               	movf	??_Lcd_Set_Cursor,w
  2705  034A  00A4               	movwf	Lcd_Set_Cursor@y
  2706  034B                     l1602:
  2707                           
  2708                           ;./lcd.h: 57:   Lcd_Cmd(z);
  2709  034B  0823               	movf	Lcd_Set_Cursor@z,w
  2710  034C  120A  118A  249B  120A  118A  	fcall	_Lcd_Cmd
  2711  0351                     l1604:
  2712                           
  2713                           ;./lcd.h: 58:   Lcd_Cmd(y);
  2714  0351  1283               	bcf	3,5	;RP0=0, select bank0
  2715  0352  1303               	bcf	3,6	;RP1=0, select bank0
  2716  0353  0824               	movf	Lcd_Set_Cursor@y,w
  2717  0354  120A  118A  249B  120A  118A  	fcall	_Lcd_Cmd
  2718  0359                     l75:
  2719  0359  0008               	return
  2720  035A                     __end_of_Lcd_Set_Cursor:
  2721                           
  2722                           	psect	text19
  2723  024B                     __ptext19:	
  2724 ;; *************** function _Lcd_Init *****************
  2725 ;; Defined at:
  2726 ;;		line 62 in file "./lcd.h"
  2727 ;; Parameters:    Size  Location     Type
  2728 ;;		None
  2729 ;; Auto vars:     Size  Location     Type
  2730 ;;		None
  2731 ;; Return value:  Size  Location     Type
  2732 ;;                  1    wreg      void 
  2733 ;; Registers used:
  2734 ;;		wreg, status,2, status,0, pclath, cstack
  2735 ;; Tracked objects:
  2736 ;;		On entry : 0/0
  2737 ;;		On exit  : 0/0
  2738 ;;		Unchanged: 0/0
  2739 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2740 ;;      Params:         0       0       0       0       0
  2741 ;;      Locals:         0       0       0       0       0
  2742 ;;      Temps:          2       0       0       0       0
  2743 ;;      Totals:         2       0       0       0       0
  2744 ;;Total ram usage:        2 bytes
  2745 ;; Hardware stack levels used: 1
  2746 ;; Hardware stack levels required when called: 5
  2747 ;; This function calls:
  2748 ;;		_Lcd_Cmd
  2749 ;;		_Lcd_Port
  2750 ;; This function is called by:
  2751 ;;		_main
  2752 ;; This function uses a non-reentrant model
  2753 ;;
  2754                           
  2755  024B                     _Lcd_Init:	
  2756                           ;psect for function _Lcd_Init
  2757                           
  2758  024B                     l1606:	
  2759                           ;incstack = 0
  2760                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  2761                           
  2762                           
  2763                           ;./lcd.h: 64:   Lcd_Port(0x00);
  2764  024B  3000               	movlw	0
  2765  024C  120A  118A  243E  120A  118A  	fcall	_Lcd_Port
  2766  0251                     l1608:
  2767                           
  2768                           ;./lcd.h: 65:    _delay((unsigned long)((20)*(4000000/4000.0)));
  2769  0251  301A               	movlw	26
  2770  0252  00F8               	movwf	??_Lcd_Init+1
  2771  0253  30F8               	movlw	248
  2772  0254  00F7               	movwf	??_Lcd_Init
  2773  0255                     u1367:
  2774  0255  0BF7               	decfsz	??_Lcd_Init,f
  2775  0256  2A55               	goto	u1367
  2776  0257  0BF8               	decfsz	??_Lcd_Init+1,f
  2777  0258  2A55               	goto	u1367
  2778  0259  0000               	nop
  2779  025A                     l1610:
  2780                           
  2781                           ;./lcd.h: 66:   Lcd_Cmd(0x03);
  2782  025A  3003               	movlw	3
  2783  025B  120A  118A  249B  120A  118A  	fcall	_Lcd_Cmd
  2784                           
  2785                           ;./lcd.h: 67:  _delay((unsigned long)((5)*(4000000/4000.0)));
  2786  0260  3007               	movlw	7
  2787  0261  00F8               	movwf	??_Lcd_Init+1
  2788  0262  307D               	movlw	125
  2789  0263  00F7               	movwf	??_Lcd_Init
  2790  0264                     u1377:
  2791  0264  0BF7               	decfsz	??_Lcd_Init,f
  2792  0265  2A64               	goto	u1377
  2793  0266  0BF8               	decfsz	??_Lcd_Init+1,f
  2794  0267  2A64               	goto	u1377
  2795  0268                     l1612:
  2796                           
  2797                           ;./lcd.h: 68:   Lcd_Cmd(0x03);
  2798  0268  3003               	movlw	3
  2799  0269  120A  118A  249B  120A  118A  	fcall	_Lcd_Cmd
  2800  026E                     l1614:
  2801                           
  2802                           ;./lcd.h: 69:  _delay((unsigned long)((11)*(4000000/4000.0)));
  2803  026E  300F               	movlw	15
  2804  026F  00F8               	movwf	??_Lcd_Init+1
  2805  0270  3047               	movlw	71
  2806  0271  00F7               	movwf	??_Lcd_Init
  2807  0272                     u1387:
  2808  0272  0BF7               	decfsz	??_Lcd_Init,f
  2809  0273  2A72               	goto	u1387
  2810  0274  0BF8               	decfsz	??_Lcd_Init+1,f
  2811  0275  2A72               	goto	u1387
  2812  0276  2A77               	nop2
  2813                           
  2814                           ;./lcd.h: 70:   Lcd_Cmd(0x03);
  2815  0277  3003               	movlw	3
  2816  0278  120A  118A  249B  120A  118A  	fcall	_Lcd_Cmd
  2817                           
  2818                           ;./lcd.h: 72:   Lcd_Cmd(0x02);
  2819  027D  3002               	movlw	2
  2820  027E  120A  118A  249B  120A  118A  	fcall	_Lcd_Cmd
  2821                           
  2822                           ;./lcd.h: 73:   Lcd_Cmd(0x02);
  2823  0283  3002               	movlw	2
  2824  0284  120A  118A  249B  120A  118A  	fcall	_Lcd_Cmd
  2825                           
  2826                           ;./lcd.h: 74:   Lcd_Cmd(0x08);
  2827  0289  3008               	movlw	8
  2828  028A  120A  118A  249B  120A  118A  	fcall	_Lcd_Cmd
  2829                           
  2830                           ;./lcd.h: 75:   Lcd_Cmd(0x00);
  2831  028F  3000               	movlw	0
  2832  0290  120A  118A  249B  120A  118A  	fcall	_Lcd_Cmd
  2833                           
  2834                           ;./lcd.h: 76:   Lcd_Cmd(0x0C);
  2835  0295  300C               	movlw	12
  2836  0296  120A  118A  249B  120A  118A  	fcall	_Lcd_Cmd
  2837                           
  2838                           ;./lcd.h: 77:   Lcd_Cmd(0x00);
  2839  029B  3000               	movlw	0
  2840  029C  120A  118A  249B  120A  118A  	fcall	_Lcd_Cmd
  2841                           
  2842                           ;./lcd.h: 78:   Lcd_Cmd(0x06);
  2843  02A1  3006               	movlw	6
  2844  02A2  120A  118A  249B  120A  118A  	fcall	_Lcd_Cmd
  2845  02A7                     l78:
  2846  02A7  0008               	return
  2847  02A8                     __end_of_Lcd_Init:
  2848                           
  2849                           	psect	text20
  2850  051D                     __ptext20:	
  2851 ;; *************** function _Lcd_Clear *****************
  2852 ;; Defined at:
  2853 ;;		line 35 in file "./lcd.h"
  2854 ;; Parameters:    Size  Location     Type
  2855 ;;		None
  2856 ;; Auto vars:     Size  Location     Type
  2857 ;;		None
  2858 ;; Return value:  Size  Location     Type
  2859 ;;                  1    wreg      void 
  2860 ;; Registers used:
  2861 ;;		wreg, status,2, status,0, pclath, cstack
  2862 ;; Tracked objects:
  2863 ;;		On entry : 0/0
  2864 ;;		On exit  : 0/0
  2865 ;;		Unchanged: 0/0
  2866 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2867 ;;      Params:         0       0       0       0       0
  2868 ;;      Locals:         0       0       0       0       0
  2869 ;;      Temps:          0       0       0       0       0
  2870 ;;      Totals:         0       0       0       0       0
  2871 ;;Total ram usage:        0 bytes
  2872 ;; Hardware stack levels used: 1
  2873 ;; Hardware stack levels required when called: 5
  2874 ;; This function calls:
  2875 ;;		_Lcd_Cmd
  2876 ;; This function is called by:
  2877 ;;		_main
  2878 ;; This function uses a non-reentrant model
  2879 ;;
  2880                           
  2881  051D                     _Lcd_Clear:	
  2882                           ;psect for function _Lcd_Clear
  2883                           
  2884  051D                     l1584:	
  2885                           ;incstack = 0
  2886                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  2887                           
  2888                           
  2889                           ;./lcd.h: 37:  Lcd_Cmd(0);
  2890  051D  3000               	movlw	0
  2891  051E  120A  118A  249B  120A  118A  	fcall	_Lcd_Cmd
  2892                           
  2893                           ;./lcd.h: 38:  Lcd_Cmd(1);
  2894  0523  3001               	movlw	1
  2895  0524  120A  118A  249B  120A  118A  	fcall	_Lcd_Cmd
  2896  0529                     l69:
  2897  0529  0008               	return
  2898  052A                     __end_of_Lcd_Clear:
  2899                           
  2900                           	psect	text21
  2901  049B                     __ptext21:	
  2902 ;; *************** function _Lcd_Cmd *****************
  2903 ;; Defined at:
  2904 ;;		line 26 in file "./lcd.h"
  2905 ;; Parameters:    Size  Location     Type
  2906 ;;  a               1    wreg     unsigned char 
  2907 ;; Auto vars:     Size  Location     Type
  2908 ;;  a               1    6[COMMON] unsigned char 
  2909 ;; Return value:  Size  Location     Type
  2910 ;;                  1    wreg      void 
  2911 ;; Registers used:
  2912 ;;		wreg, status,2, status,0, pclath, cstack
  2913 ;; Tracked objects:
  2914 ;;		On entry : 0/0
  2915 ;;		On exit  : 0/0
  2916 ;;		Unchanged: 0/0
  2917 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2918 ;;      Params:         0       0       0       0       0
  2919 ;;      Locals:         1       0       0       0       0
  2920 ;;      Temps:          2       0       0       0       0
  2921 ;;      Totals:         3       0       0       0       0
  2922 ;;Total ram usage:        3 bytes
  2923 ;; Hardware stack levels used: 1
  2924 ;; Hardware stack levels required when called: 4
  2925 ;; This function calls:
  2926 ;;		_Lcd_Port
  2927 ;; This function is called by:
  2928 ;;		_Lcd_Clear
  2929 ;;		_Lcd_Set_Cursor
  2930 ;;		_Lcd_Init
  2931 ;;		_Lcd_Shift_Right
  2932 ;;		_Lcd_Shift_Left
  2933 ;; This function uses a non-reentrant model
  2934 ;;
  2935                           
  2936  049B                     _Lcd_Cmd:	
  2937                           ;psect for function _Lcd_Cmd
  2938                           
  2939                           
  2940                           ;incstack = 0
  2941                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  2942                           ;Lcd_Cmd@a stored from wreg
  2943  049B  00F6               	movwf	Lcd_Cmd@a
  2944  049C                     l1540:
  2945                           
  2946                           ;./lcd.h: 26: void Lcd_Cmd(char a);./lcd.h: 27: {;./lcd.h: 28:  RD2 = 0;
  2947  049C  1283               	bcf	3,5	;RP0=0, select bank0
  2948  049D  1303               	bcf	3,6	;RP1=0, select bank0
  2949  049E  1108               	bcf	8,2	;volatile
  2950  049F                     l1542:
  2951                           
  2952                           ;./lcd.h: 29:  Lcd_Port(a);
  2953  049F  0876               	movf	Lcd_Cmd@a,w
  2954  04A0  120A  118A  243E  120A  118A  	fcall	_Lcd_Port
  2955  04A5                     l1544:
  2956                           
  2957                           ;./lcd.h: 30:  RD3 = 1;
  2958  04A5  1283               	bcf	3,5	;RP0=0, select bank0
  2959  04A6  1303               	bcf	3,6	;RP1=0, select bank0
  2960  04A7  1588               	bsf	8,3	;volatile
  2961  04A8                     l1546:
  2962                           
  2963                           ;./lcd.h: 31:         _delay((unsigned long)((4)*(4000000/4000.0)));
  2964  04A8  3006               	movlw	6
  2965  04A9  00F5               	movwf	??_Lcd_Cmd+1
  2966  04AA  3030               	movlw	48
  2967  04AB  00F4               	movwf	??_Lcd_Cmd
  2968  04AC                     u1397:
  2969  04AC  0BF4               	decfsz	??_Lcd_Cmd,f
  2970  04AD  2CAC               	goto	u1397
  2971  04AE  0BF5               	decfsz	??_Lcd_Cmd+1,f
  2972  04AF  2CAC               	goto	u1397
  2973  04B0  0000               	nop
  2974  04B1                     l1548:
  2975                           
  2976                           ;./lcd.h: 32:         RD3 = 0;
  2977  04B1  1283               	bcf	3,5	;RP0=0, select bank0
  2978  04B2  1303               	bcf	3,6	;RP1=0, select bank0
  2979  04B3  1188               	bcf	8,3	;volatile
  2980  04B4                     l66:
  2981  04B4  0008               	return
  2982  04B5                     __end_of_Lcd_Cmd:
  2983                           
  2984                           	psect	text22
  2985  043E                     __ptext22:	
  2986 ;; *************** function _Lcd_Port *****************
  2987 ;; Defined at:
  2988 ;;		line 4 in file "./lcd.h"
  2989 ;; Parameters:    Size  Location     Type
  2990 ;;  a               1    wreg     unsigned char 
  2991 ;; Auto vars:     Size  Location     Type
  2992 ;;  a               1    3[COMMON] unsigned char 
  2993 ;; Return value:  Size  Location     Type
  2994 ;;                  1    wreg      void 
  2995 ;; Registers used:
  2996 ;;		wreg
  2997 ;; Tracked objects:
  2998 ;;		On entry : 0/0
  2999 ;;		On exit  : 0/0
  3000 ;;		Unchanged: 0/0
  3001 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3002 ;;      Params:         0       0       0       0       0
  3003 ;;      Locals:         1       0       0       0       0
  3004 ;;      Temps:          0       0       0       0       0
  3005 ;;      Totals:         1       0       0       0       0
  3006 ;;Total ram usage:        1 bytes
  3007 ;; Hardware stack levels used: 1
  3008 ;; Hardware stack levels required when called: 3
  3009 ;; This function calls:
  3010 ;;		Nothing
  3011 ;; This function is called by:
  3012 ;;		_Lcd_Cmd
  3013 ;;		_Lcd_Init
  3014 ;;		_Lcd_Write_Char
  3015 ;; This function uses a non-reentrant model
  3016 ;;
  3017                           
  3018  043E                     _Lcd_Port:	
  3019                           ;psect for function _Lcd_Port
  3020                           
  3021                           
  3022                           ;incstack = 0
  3023                           ; Regs used in _Lcd_Port: [wreg]
  3024                           ;Lcd_Port@a stored from wreg
  3025  043E  00F3               	movwf	Lcd_Port@a
  3026  043F                     l1526:
  3027                           
  3028                           ;./lcd.h: 4: void Lcd_Port(char a);./lcd.h: 5: {;./lcd.h: 6:  if(a & 1)
  3029  043F  1C73               	btfss	Lcd_Port@a,0
  3030  0440  2C42               	goto	u1201
  3031  0441  2C43               	goto	u1200
  3032  0442                     u1201:
  3033  0442  2C47               	goto	l55
  3034  0443                     u1200:
  3035  0443                     l1528:
  3036                           
  3037                           ;./lcd.h: 7:   RD4 = 1;
  3038  0443  1283               	bcf	3,5	;RP0=0, select bank0
  3039  0444  1303               	bcf	3,6	;RP1=0, select bank0
  3040  0445  1608               	bsf	8,4	;volatile
  3041  0446  2C4A               	goto	l56
  3042  0447                     l55:	
  3043                           ;./lcd.h: 8:  else
  3044                           
  3045                           
  3046                           ;./lcd.h: 9:   RD4 = 0;
  3047  0447  1283               	bcf	3,5	;RP0=0, select bank0
  3048  0448  1303               	bcf	3,6	;RP1=0, select bank0
  3049  0449  1208               	bcf	8,4	;volatile
  3050  044A                     l56:
  3051                           
  3052                           ;./lcd.h: 11:  if(a & 2)
  3053  044A  1CF3               	btfss	Lcd_Port@a,1
  3054  044B  2C4D               	goto	u1211
  3055  044C  2C4E               	goto	u1210
  3056  044D                     u1211:
  3057  044D  2C50               	goto	l57
  3058  044E                     u1210:
  3059  044E                     l1530:
  3060                           
  3061                           ;./lcd.h: 12:   RD5 = 1;
  3062  044E  1688               	bsf	8,5	;volatile
  3063  044F  2C51               	goto	l58
  3064  0450                     l57:	
  3065                           ;./lcd.h: 13:  else
  3066                           
  3067                           
  3068                           ;./lcd.h: 14:   RD5 = 0;
  3069  0450  1288               	bcf	8,5	;volatile
  3070  0451                     l58:
  3071                           
  3072                           ;./lcd.h: 16:  if(a & 4)
  3073  0451  1D73               	btfss	Lcd_Port@a,2
  3074  0452  2C54               	goto	u1221
  3075  0453  2C55               	goto	u1220
  3076  0454                     u1221:
  3077  0454  2C57               	goto	l59
  3078  0455                     u1220:
  3079  0455                     l1532:
  3080                           
  3081                           ;./lcd.h: 17:   RD6 = 1;
  3082  0455  1708               	bsf	8,6	;volatile
  3083  0456  2C58               	goto	l60
  3084  0457                     l59:	
  3085                           ;./lcd.h: 18:  else
  3086                           
  3087                           
  3088                           ;./lcd.h: 19:   RD6 = 0;
  3089  0457  1308               	bcf	8,6	;volatile
  3090  0458                     l60:
  3091                           
  3092                           ;./lcd.h: 21:  if(a & 8)
  3093  0458  1DF3               	btfss	Lcd_Port@a,3
  3094  0459  2C5B               	goto	u1231
  3095  045A  2C5C               	goto	u1230
  3096  045B                     u1231:
  3097  045B  2C5E               	goto	l61
  3098  045C                     u1230:
  3099  045C                     l1534:
  3100                           
  3101                           ;./lcd.h: 22:   RD7 = 1;
  3102  045C  1788               	bsf	8,7	;volatile
  3103  045D  2C5F               	goto	l63
  3104  045E                     l61:	
  3105                           ;./lcd.h: 23:  else
  3106                           
  3107                           
  3108                           ;./lcd.h: 24:   RD7 = 0;
  3109  045E  1388               	bcf	8,7	;volatile
  3110  045F                     l63:
  3111  045F  0008               	return
  3112  0460                     __end_of_Lcd_Port:
  3113                           
  3114                           	psect	text23
  3115  04FB                     __ptext23:	
  3116 ;; *************** function _interrupcao *****************
  3117 ;; Defined at:
  3118 ;;		line 184 in file "main.c"
  3119 ;; Parameters:    Size  Location     Type
  3120 ;;		None
  3121 ;; Auto vars:     Size  Location     Type
  3122 ;;		None
  3123 ;; Return value:  Size  Location     Type
  3124 ;;                  1    wreg      void 
  3125 ;; Registers used:
  3126 ;;		wreg, status,2, status,0, pclath, cstack
  3127 ;; Tracked objects:
  3128 ;;		On entry : 0/0
  3129 ;;		On exit  : 0/0
  3130 ;;		Unchanged: 0/0
  3131 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3132 ;;      Params:         0       0       0       0       0
  3133 ;;      Locals:         0       0       0       0       0
  3134 ;;      Temps:          2       0       0       0       0
  3135 ;;      Totals:         2       0       0       0       0
  3136 ;;Total ram usage:        2 bytes
  3137 ;; Hardware stack levels used: 1
  3138 ;; Hardware stack levels required when called: 2
  3139 ;; This function calls:
  3140 ;;		_handleExternalInterruption
  3141 ;;		_handleTimerInterruption
  3142 ;; This function is called by:
  3143 ;;		Interrupt level 1
  3144 ;; This function uses a non-reentrant model
  3145 ;;
  3146                           
  3147  04FB                     _interrupcao:	
  3148                           ;psect for function _interrupcao
  3149                           
  3150  04FB                     i1l1442:
  3151                           
  3152                           ;main.c: 186:     handleTimerInterruption();
  3153  04FB  120A  118A  2391  120A  118A  	fcall	_handleTimerInterruption
  3154                           
  3155                           ;main.c: 187:     handleExternalInterruption();
  3156  0500  120A  118A  250C  120A  118A  	fcall	_handleExternalInterruption
  3157  0505                     i1l132:
  3158  0505  0872               	movf	??_interrupcao+1,w
  3159  0506  008A               	movwf	10
  3160  0507  0E71               	swapf	??_interrupcao,w
  3161  0508  0083               	movwf	3
  3162  0509  0EFE               	swapf	btemp,f
  3163  050A  0E7E               	swapf	btemp,w
  3164  050B  0009               	retfie
  3165  050C                     __end_of_interrupcao:
  3166                           
  3167                           	psect	intentry
  3168  0004                     __pintentry:	
  3169                           ;incstack = 0
  3170                           ; Regs used in _interrupcao: [wreg+status,2+status,0+pclath+cstack]
  3171                           
  3172  0004                     interrupt_function:
  3173  007E                     saved_w	set	btemp
  3174  0004  00FE               	movwf	btemp
  3175  0005  0E03               	swapf	3,w
  3176  0006  00F1               	movwf	??_interrupcao
  3177  0007  080A               	movf	10,w
  3178  0008  00F2               	movwf	??_interrupcao+1
  3179  0009  120A  118A  2CFB   	ljmp	_interrupcao
  3180                           
  3181                           	psect	text24
  3182  0391                     __ptext24:	
  3183 ;; *************** function _handleTimerInterruption *****************
  3184 ;; Defined at:
  3185 ;;		line 131 in file "main.c"
  3186 ;; Parameters:    Size  Location     Type
  3187 ;;		None
  3188 ;; Auto vars:     Size  Location     Type
  3189 ;;		None
  3190 ;; Return value:  Size  Location     Type
  3191 ;;                  1    wreg      void 
  3192 ;; Registers used:
  3193 ;;		wreg, status,2, status,0
  3194 ;; Tracked objects:
  3195 ;;		On entry : 0/0
  3196 ;;		On exit  : 0/0
  3197 ;;		Unchanged: 0/0
  3198 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3199 ;;      Params:         0       0       0       0       0
  3200 ;;      Locals:         0       0       0       0       0
  3201 ;;      Temps:          1       0       0       0       0
  3202 ;;      Totals:         1       0       0       0       0
  3203 ;;Total ram usage:        1 bytes
  3204 ;; Hardware stack levels used: 1
  3205 ;; This function calls:
  3206 ;;		Nothing
  3207 ;; This function is called by:
  3208 ;;		_interrupcao
  3209 ;; This function uses a non-reentrant model
  3210 ;;
  3211                           
  3212  0391                     _handleTimerInterruption:	
  3213                           ;psect for function _handleTimerInterruption
  3214                           
  3215  0391                     i1l1390:	
  3216                           ;incstack = 0
  3217                           ; Regs used in _handleTimerInterruption: [wreg+status,2+status,0]
  3218                           
  3219                           
  3220                           ;main.c: 133:     if(TMR1IF){
  3221  0391  1283               	bcf	3,5	;RP0=0, select bank0
  3222  0392  1303               	bcf	3,6	;RP1=0, select bank0
  3223  0393  1C0C               	btfss	12,0	;volatile
  3224  0394  2B96               	goto	u104_21
  3225  0395  2B97               	goto	u104_20
  3226  0396                     u104_21:
  3227  0396  2BC5               	goto	i1l119
  3228  0397                     u104_20:
  3229  0397                     i1l1392:
  3230                           
  3231                           ;main.c: 134:         if(irrigacao_ativa){
  3232  0397  0879               	movf	_irrigacao_ativa,w
  3233  0398  047A               	iorwf	_irrigacao_ativa+1,w
  3234  0399  1903               	btfsc	3,2
  3235  039A  2B9C               	goto	u105_21
  3236  039B  2B9D               	goto	u105_20
  3237  039C                     u105_21:
  3238  039C  2BBB               	goto	i1l1408
  3239  039D                     u105_20:
  3240  039D                     i1l1394:
  3241                           
  3242                           ;main.c: 135:             timer_counter++;
  3243  039D  3001               	movlw	1
  3244  039E  07C8               	addwf	_timer_counter,f
  3245  039F  1803               	skipnc
  3246  03A0  0AC9               	incf	_timer_counter+1,f
  3247  03A1  3000               	movlw	0
  3248  03A2  07C9               	addwf	_timer_counter+1,f
  3249  03A3                     i1l1396:
  3250                           
  3251                           ;main.c: 136:             PORTBbits.RB1 = 1;
  3252  03A3  1486               	bsf	6,1	;volatile
  3253  03A4                     i1l1398:
  3254                           
  3255                           ;main.c: 137:             PORTBbits.RB6 = 1;
  3256  03A4  1706               	bsf	6,6	;volatile
  3257                           
  3258                           ;main.c: 138:             if(timer_counter_max <= timer_counter){
  3259  03A5  0849               	movf	_timer_counter+1,w
  3260  03A6  3A80               	xorlw	128
  3261  03A7  00F0               	movwf	??_handleTimerInterruption
  3262  03A8  0847               	movf	_timer_counter_max+1,w
  3263  03A9  3A80               	xorlw	128
  3264  03AA  0270               	subwf	??_handleTimerInterruption,w
  3265  03AB  1D03               	skipz
  3266  03AC  2BAF               	goto	u106_25
  3267  03AD  0846               	movf	_timer_counter_max,w
  3268  03AE  0248               	subwf	_timer_counter,w
  3269  03AF                     u106_25:
  3270  03AF  1C03               	skipc
  3271  03B0  2BB2               	goto	u106_21
  3272  03B1  2BB3               	goto	u106_20
  3273  03B2                     u106_21:
  3274  03B2  2BBE               	goto	i1l1412
  3275  03B3                     u106_20:
  3276  03B3                     i1l1400:
  3277                           
  3278                           ;main.c: 139:                 PORTBbits.RB1 = 0;
  3279  03B3  1283               	bcf	3,5	;RP0=0, select bank0
  3280  03B4  1303               	bcf	3,6	;RP1=0, select bank0
  3281  03B5  1086               	bcf	6,1	;volatile
  3282  03B6                     i1l1402:
  3283                           
  3284                           ;main.c: 140:                 irrigacao_ativa = 0;
  3285  03B6  01F9               	clrf	_irrigacao_ativa
  3286  03B7  01FA               	clrf	_irrigacao_ativa+1
  3287  03B8                     i1l1404:
  3288                           
  3289                           ;main.c: 141:                 PORTBbits.RB6 = 0;
  3290  03B8  1306               	bcf	6,6	;volatile
  3291  03B9                     i1l1406:
  3292                           
  3293                           ;main.c: 144:                 T1CONbits.TMR1ON = 0;
  3294  03B9  1010               	bcf	16,0	;volatile
  3295  03BA  2BBE               	goto	i1l1412
  3296  03BB                     i1l1408:
  3297                           
  3298                           ;main.c: 148:             timer_counter = 0;
  3299  03BB  01C8               	clrf	_timer_counter
  3300  03BC  01C9               	clrf	_timer_counter+1
  3301  03BD                     i1l1410:
  3302                           
  3303                           ;main.c: 149:             PORTBbits.RB1 = 0;
  3304  03BD  1086               	bcf	6,1	;volatile
  3305  03BE                     i1l1412:
  3306                           
  3307                           ;main.c: 151:         PIR1bits.TMR1IF = 0;
  3308  03BE  1283               	bcf	3,5	;RP0=0, select bank0
  3309  03BF  1303               	bcf	3,6	;RP1=0, select bank0
  3310  03C0  100C               	bcf	12,0	;volatile
  3311  03C1                     i1l1414:
  3312                           
  3313                           ;main.c: 152:         TMR1H = 0x0B;
  3314  03C1  300B               	movlw	11
  3315  03C2  008F               	movwf	15	;volatile
  3316  03C3                     i1l1416:
  3317                           
  3318                           ;main.c: 153:         TMR1L = 0xDC;
  3319  03C3  30DC               	movlw	220
  3320  03C4  008E               	movwf	14	;volatile
  3321  03C5                     i1l119:
  3322  03C5  0008               	return
  3323  03C6                     __end_of_handleTimerInterruption:
  3324                           
  3325                           	psect	text25
  3326  050C                     __ptext25:	
  3327 ;; *************** function _handleExternalInterruption *****************
  3328 ;; Defined at:
  3329 ;;		line 173 in file "main.c"
  3330 ;; Parameters:    Size  Location     Type
  3331 ;;		None
  3332 ;; Auto vars:     Size  Location     Type
  3333 ;;		None
  3334 ;; Return value:  Size  Location     Type
  3335 ;;                  1    wreg      void 
  3336 ;; Registers used:
  3337 ;;		wreg, status,2, status,0, pclath, cstack
  3338 ;; Tracked objects:
  3339 ;;		On entry : 0/0
  3340 ;;		On exit  : 0/0
  3341 ;;		Unchanged: 0/0
  3342 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3343 ;;      Params:         0       0       0       0       0
  3344 ;;      Locals:         0       0       0       0       0
  3345 ;;      Temps:          0       0       0       0       0
  3346 ;;      Totals:         0       0       0       0       0
  3347 ;;Total ram usage:        0 bytes
  3348 ;; Hardware stack levels used: 1
  3349 ;; Hardware stack levels required when called: 1
  3350 ;; This function calls:
  3351 ;;		i1_irrigar
  3352 ;; This function is called by:
  3353 ;;		_interrupcao
  3354 ;; This function uses a non-reentrant model
  3355 ;;
  3356                           
  3357  050C                     _handleExternalInterruption:	
  3358                           ;psect for function _handleExternalInterruption
  3359                           
  3360  050C                     i1l1420:	
  3361                           ;incstack = 0
  3362                           ; Regs used in _handleExternalInterruption: [wreg+status,2+status,0+pclath+cstack]
  3363                           
  3364                           
  3365                           ;main.c: 175:     if(INTF){
  3366  050C  1C8B               	btfss	11,1	;volatile
  3367  050D  2D0F               	goto	u107_21
  3368  050E  2D10               	goto	u107_20
  3369  050F                     u107_21:
  3370  050F  2D1C               	goto	i1l127
  3371  0510                     u107_20:
  3372  0510                     i1l1422:
  3373                           
  3374                           ;main.c: 176:         if(!irrigacao_ativa){
  3375  0510  0879               	movf	_irrigacao_ativa,w
  3376  0511  047A               	iorwf	_irrigacao_ativa+1,w
  3377  0512  1D03               	btfss	3,2
  3378  0513  2D15               	goto	u108_21
  3379  0514  2D16               	goto	u108_20
  3380  0515                     u108_21:
  3381  0515  2D1B               	goto	i1l1426
  3382  0516                     u108_20:
  3383  0516                     i1l1424:
  3384                           
  3385                           ;main.c: 177:             irrigar();
  3386  0516  120A  118A  2540  120A  118A  	fcall	i1_irrigar
  3387  051B                     i1l1426:
  3388                           
  3389                           ;main.c: 179:         INTCONbits.INTF = 0;
  3390  051B  108B               	bcf	11,1	;volatile
  3391  051C                     i1l127:
  3392  051C  0008               	return
  3393  051D                     __end_of_handleExternalInterruption:
  3394                           
  3395                           	psect	text26
  3396  0540                     __ptext26:	
  3397 ;; *************** function i1_irrigar *****************
  3398 ;; Defined at:
  3399 ;;		line 159 in file "main.c"
  3400 ;; Parameters:    Size  Location     Type
  3401 ;;		None
  3402 ;; Auto vars:     Size  Location     Type
  3403 ;;		None
  3404 ;; Return value:  Size  Location     Type
  3405 ;;                  1    wreg      void 
  3406 ;; Registers used:
  3407 ;;		wreg, status,2
  3408 ;; Tracked objects:
  3409 ;;		On entry : 0/0
  3410 ;;		On exit  : 0/0
  3411 ;;		Unchanged: 0/0
  3412 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3413 ;;      Params:         0       0       0       0       0
  3414 ;;      Locals:         0       0       0       0       0
  3415 ;;      Temps:          0       0       0       0       0
  3416 ;;      Totals:         0       0       0       0       0
  3417 ;;Total ram usage:        0 bytes
  3418 ;; Hardware stack levels used: 1
  3419 ;; This function calls:
  3420 ;;		Nothing
  3421 ;; This function is called by:
  3422 ;;		_handleExternalInterruption
  3423 ;; This function uses a non-reentrant model
  3424 ;;
  3425                           
  3426  0540                     i1_irrigar:	
  3427                           ;psect for function i1_irrigar
  3428                           
  3429  0540                     i1l1334:	
  3430                           ;incstack = 0
  3431                           ; Regs used in i1_irrigar: [wreg+status,2]
  3432                           
  3433                           
  3434                           ;main.c: 160:     irrigacao_ativa = 1;
  3435  0540  3001               	movlw	1
  3436  0541  00F9               	movwf	_irrigacao_ativa
  3437  0542  3000               	movlw	0
  3438  0543  00FA               	movwf	_irrigacao_ativa+1
  3439  0544                     i1l1336:
  3440                           
  3441                           ;main.c: 161:     timer_counter = 0;
  3442  0544  1283               	bcf	3,5	;RP0=0, select bank0
  3443  0545  1303               	bcf	3,6	;RP1=0, select bank0
  3444  0546  01C8               	clrf	_timer_counter
  3445  0547  01C9               	clrf	_timer_counter+1
  3446  0548                     i1l1338:
  3447                           
  3448                           ;main.c: 164:     T1CONbits.TMR1ON = 1;
  3449  0548  1410               	bsf	16,0	;volatile
  3450  0549                     i1l122:
  3451  0549  0008               	return
  3452  054A                     __end_ofi1_irrigar:
  3453  007E                     btemp	set	126	;btemp
  3454  007E                     wtemp0	set	126

Data Sizes:
    Strings     22
    Constant    0
    Data        6
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      11
    BANK0            80     34      42
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 12
		 -> STR_2(CODE[12]), STR_1(CODE[10]), 


Critical Paths under _main in COMMON

    _main->_Lcd_Init
    _getADConverterValue->___fltol
    _getADConverterValue->___wmul
    ___xxtofl->___wmul
    _setupNewVolumeFlow->___wmul
    ___awdiv->___wmul
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _interrupcao in COMMON

    _interrupcao->_handleTimerInterruption

Critical Paths under _main in BANK0

    _verifySensor->_getADConverterValue
    _getADConverterValue->___xxtofl
    ___xxtofl->___awdiv
    _setupTimer->_setupNewVolumeFlow
    _setupNewVolumeFlow->_changeTimerMaxConter
    _changeTimerMaxConter->___awdiv

Critical Paths under _interrupcao in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _interrupcao in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _interrupcao in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _interrupcao in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0    5033
                                             31 BANK0      3     3      0
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                           _setupADC
          _setupExternalInterruption
                         _setupTimer
                 _setupWatchdogTimer
                         _verifyMenu
                       _verifySensor
 ---------------------------------------------------------------------------------
 (1) _verifySensor                                         0     0      0    1938
                _getADConverterValue
                            _irrigar
 ---------------------------------------------------------------------------------
 (2) _irrigar                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _getADConverterValue                                  8     6      2    1938
                                             23 BANK0      8     6      2
                            ___awdiv
                            ___fltol
                             ___wmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     398
                                              9 BANK0     14    10      4
                            ___awdiv (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             11     7      4     305
                                              3 COMMON     6     2      4
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (1) _verifyMenu                                           0     0      0       0
                         _handleMenu
 ---------------------------------------------------------------------------------
 (2) _handleMenu                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setupWatchdogTimer                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setupTimer                                           0     0      0    1477
                 _setupNewVolumeFlow
 ---------------------------------------------------------------------------------
 (2) _setupNewVolumeFlow                                   4     2      2    1477
                                             11 BANK0      4     2      2
                             ___wmul
               _changeTimerMaxConter
 ---------------------------------------------------------------------------------
 (3) _changeTimerMaxConter                                 2     0      2     926
                                              9 BANK0      2     0      2
                            ___awdiv
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     805
                                              0 BANK0      9     5      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     396
                                              3 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) _setupExternalInterruption                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setupADC                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     3     3      0     456
                                              0 BANK0      3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0     254
                                              4 COMMON     4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       7     6      1     725
                                              7 COMMON     1     0      1
                                              0 BANK0      6     6      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     279
                                              7 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     155
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     155
                                              4 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0     124
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _interrupcao                                          2     2      0       0
                                              1 COMMON     2     2      0
         _handleExternalInterruption
            _handleTimerInterruption
 ---------------------------------------------------------------------------------
 (6) _handleTimerInterruption                              1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (6) _handleExternalInterruption                           0     0      0       0
                          i1_irrigar
 ---------------------------------------------------------------------------------
 (7) i1_irrigar                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _setupADC
   _setupExternalInterruption
   _setupTimer
     _setupNewVolumeFlow
       ___wmul
       _changeTimerMaxConter
         ___awdiv
           ___wmul (ARG)
   _setupWatchdogTimer
   _verifyMenu
     _handleMenu
   _verifySensor
     _getADConverterValue
       ___awdiv
       ___fltol
       ___wmul
       ___xxtofl
         ___awdiv (ARG)
         ___wmul (ARG)
     _irrigar

 _interrupcao (ROOT)
   _handleExternalInterruption
     i1_irrigar
   _handleTimerInterruption

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     22      2A       5       52.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      9       B       1       78.6%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      35      12        0.0%
ABS                  0      0      35       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Fri Mar 04 17:31:35 2022

                                 pc 0002                                  l60 0458  
                                l61 045E                                  l63 045F  
                                l55 0447                                  l56 044A  
                                l57 0450                                  l81 0390  
                                l58 0451                                  l66 04B4  
                                l59 0457                                  l75 0359  
                                l69 0529                                  l78 02A7  
                                l87 0418                        ___awdiv@sign 0026  
                                fsr 0004                 ___wmul@multiplicand 0075  
                   _irrigacao_ativa 0079                                 l112 04CD  
                               l106 04FA                                 l122 053F  
                               l109 047E                                 l142 0535  
                               l150 03EF                                 l135 0555  
                               l153 0557                                 l145 0301  
                               l250 0425                                 l138 0556  
                               l403 024A                                 l156 04E4  
                               l252 043D                                 l148 03EC  
                               l443 015D                                 l436 0172  
                               l446 0172                                 l683 005F  
                               l685 00F6                                 l696 00C0  
                               l697 00CC                                 l689 00A4  
                               l948 0556                                 _RD2 0042  
                               _RD3 0043                                 _RD4 0044  
                               _RD5 0045                                 _RD6 0046  
                               _RD7 0047                                 u700 041F  
                               u540 0530                                 u701 041E  
                               u541 052F                                 u800 0151  
                               u801 0150                                 u730 0439  
                               u731 0438                                 u715 0426  
                               u820 0162                                 u740 0104  
                               u900 00AA                                 u725 042D  
                               u821 0161                                 u741 0103  
                               u901 00A9                                 u830 0167  
                               u750 011B                                 u831 0166  
                               u815 0154                                 u760 0131  
                               u920 00BA                                 u840 0043  
                               u761 0130                                 u921 00B9  
                               u841 0042                                 u770 0138  
                               u930 00C0                                 u850 0047  
                               u771 0137                                 u755 0116  
                               u931 00BF                                 u915 00AF  
                               u851 0046                                 u940 00C4  
                               u860 0067                                 u941 00C3  
                               u861 0066                                 u790 014A  
                               u950 00D9                                 u791 0149  
                               u960 00E9                                 u880 0088  
                               u785 013A                                 u961 00E8  
                               u881 0087                                 u970 00ED  
                               u971 00EC                                 u955 00D4  
                               u875 007A                                 u895 009C  
                               fsr0 0004        ??_handleExternalInterruption 0070  
                      ___fltol@exp1 0078                                l1200 0439  
                              l1210 010D                                l1060 0530  
                              l1220 0131                                l1212 0122  
                              l1204 00F7                                l1214 0123  
                              l1206 0104                                l1080 04E1  
                              l1056 0550                                l1072 0557  
                              l1216 012B                                l1240 003E  
                              l1320 053A                                l1082 04E2  
                              l1074 04CE                                l1058 052A  
                              l1234 0152                                l1226 0139  
                              l1218 012D                                l1242 0043  
                              l1322 053E                                l1084 04E3  
                              l1076 04DC                                l1500 0205  
                              l1236 0162                                l1228 014B  
                              l1260 008D                                l1252 0070  
                              l1244 0047                                l1078 04E0  
                              l1190 0419                                l1510 0228  
                              l1502 0208                                l1238 0167  
                              l1270 00C4                                l1262 009B  
                              l1254 0075                                l1246 0057  
                              l1318 0536                                l1600 0346  
                              l1192 041B                                l1520 0241  
                              l1512 022E                                l1504 020F  
                              l1280 00EE                                l1272 00CE  
                              l1264 00AB                                l1256 0082  
                              l1248 0067                                l1530 044E  
                              l1610 025A                                l1602 034B  
                              l1194 041F                                l1522 0246  
                              l1514 022F                                l1506 0213  
                              l1274 00E4                                l1266 00B6  
                              l1258 0089                                l1532 0455  
                              l1540 049C                                l1612 0268  
                              l1604 0351                                l1620 0403  
                              l1196 042C                                l1516 0236  
                              l1508 0217                                l1276 00E9  
                              l1268 00BA                                l1534 045C  
                              l1526 043F                                l1542 049F  
                              l1614 026E                                l1606 024B  
                              l1550 035B                                l1622 040B  
                              l1198 0433                                l1518 023C  
                              l1630 04C4                                l1278 00ED  
                              l1528 0443                                l1544 04A5  
                              l1608 0251                                l1560 037D  
                              l1552 0365                                l1616 03F3  
                              l1536 04E5                                l1624 04B5  
                              l1640 03E6                                l1546 04A8  
                              l1562 0380                                l1554 0368  
                              l1618 03F6                                l1490 01F0  
                              l1482 01E2                                l1570 0460  
                              l1626 04BF                                l1634 03C6  
                              l1650 017A                                l1548 04B1  
                              l1564 0386                                l1556 0376  
                              l1492 01F4                                l1484 01E5  
                              l1628 04C3                                l1580 02EE  
                              l1636 03CF                                l1660 0192  
                              l1652 017B                                l1590 031B  
                              l1566 0389                                l1558 0379  
                              l1494 01F9                                l1486 01E9  
                              l1574 02A8                                l1638 03E3  
                              l1670 01A6                                l1662 0197  
                              l1654 017E                                l1646 0173  
                              l1584 051D                                l1592 0320  
                              l1568 038D                                l1496 01FD  
                              l1488 01EE                                l1576 02AB  
                              l1680 01D0                                l1672 01AE  
                              l1664 0197                                l1656 0183  
                              l1648 0179                                l1594 0326  
                              l1586 0305                                l1498 01FF  
                              l1578 02B2                                l1674 01B4  
                              l1666 019C                                l1658 0188  
                              l1588 030A                                l1596 032F  
                              l1676 01C2                                l1668 01A1  
                              l1598 0335                                l1678 01CA  
        __end_of_setupNewVolumeFlow 047F                                STR_1 0491  
                              STR_2 0485                                u1100 01E9  
                              u1101 01E8                                u1110 01F4  
                              u1111 01F3                                u1200 0443  
                              u1120 0205                                u1201 0442  
                              u1121 0204                                u1210 044E  
                              u1211 044D                                u1220 0455  
                              u1140 0217                                u1300 03E3  
                              u1221 0454                                u1141 0216  
                              u1301 03E2                                u1230 045C  
                              u1231 045B                                u1135 0209  
                              u1160 0228                                u1161 0227  
                              u1305 03DF                                u1250 030A  
                              u1251 0309                                u1155 0218  
                              u1180 023C                                u1245 036B  
                              u1181 023B                                u1165 0224  
                              u1317 01BC                                u1270 0335  
                              u1190 0241                                u1271 0334  
                              u1191 0240                                u1175 0230  
                              u1327 01D8                                u1265 0312  
                              u1337 02AF                                u1290 0418  
                              u1347 037B                                u1291 0417  
                              u1285 033D                                u1357 038B  
                              u1367 0255                                u1377 0264  
                              u1387 0272                                u1397 04AC  
                              _INTF 0059               ??_getADConverterValue 0039  
                 ?_Lcd_Write_String 0070                                _main 0173  
                              btemp 007E                                start 000C  
                ??_Lcd_Write_String 0078                     __end_of_Lcd_Cmd 04B5  
       ?_handleExternalInterruption 0070                       ___fltol@sign1 0077  
                             ?_main 0070                     __end_of___awdiv 024B  
                   __end_of___fltol 0173                     ___awdiv@divisor 0020  
                             i1l122 0549                               i1l132 0505  
                             i1l127 051C                               i1l119 03C5  
                   ___awdiv@counter 0025                               _TMR1H 000F  
                             _TMR1L 000E                               _PORTB 0006  
                             _PORTD 0008                               _TRISA 0085  
                             _TRISB 0086                               _TRISD 0088  
                             _MLxMS 0042                   _timer_counter_max 0046  
                   __end_of_irrigar 0540                               pclath 000A  
                             status 0003                               wtemp0 007E  
                  __end_of_Lcd_Init 02A8                    __end_of_Lcd_Port 0460  
                   __initialization 000F                        ?_interrupcao 0070  
                      __end_of_main 01E2                              ??_main 003F  
          setupNewVolumeFlow@new_ml 002B            setupNewVolumeFlow@new_ms 002D  
          ?_handleTimerInterruption 0070                              _ADRESH 001E  
                            _ADRESL 009E                    ___awdiv@dividend 0022  
                            i1l1400 03B3                              i1l1410 03BD  
                            i1l1402 03B6                              i1l1420 050C  
                            i1l1404 03B8                              i1l1412 03BE  
                            i1l1334 0540                              i1l1422 0510  
                            i1l1414 03C1                              i1l1406 03B9  
                            i1l1336 0544                              i1l1424 0516  
                            i1l1416 03C3                              i1l1408 03BB  
                            u104_20 0397                              u104_21 0396  
                            i1l1338 0548                              i1l1426 051B  
                            i1l1442 04FB                              i1l1390 0391  
                            u105_20 039D                              i1l1392 0397  
                            u105_21 039C                              i1l1394 039D  
                            i1l1396 03A3                              i1l1398 03A4  
                            u106_20 03B3                              u106_21 03B2  
                            u106_25 03AF                              u107_20 0510  
                            u107_21 050F                              u108_20 0516  
                            u108_21 0515                           ??_Lcd_Cmd 0074  
                            _TMR1IF 0060                    __end_of___xxtofl 00F7  
 __end_of_setupExternalInterruption 0556                              ___wmul 0419  
                         ??___awdiv 0024                           ??___fltol 0020  
                  ___awdiv@quotient 0027                    __end_of_setupADC 04E5  
                         ??_irrigar 0073                              saved_w 007E  
                   Lcd_Set_Cursor@a 0022                     Lcd_Set_Cursor@b 0077  
                   Lcd_Set_Cursor@y 0024                     Lcd_Set_Cursor@z 0023  
                 __end_ofi1_irrigar 054A                        ___xxtofl@arg 0033  
                      ___xxtofl@exp 0032                        ___xxtofl@val 0029  
           __end_of__initialization 0037                   __end_of_Lcd_Clear 052A  
                        ___fltol@f1 0073                      __pcstackCOMMON 0070  
                      __pidataBANK0 054A                      _Lcd_Set_Cursor 0302  
                    _OPTION_REGbits 0081                           ?_Lcd_Init 0070  
                         ?_Lcd_Port 0070                          __pbssBANK0 0048  
                        __pmaintext 0173                  _setupNewVolumeFlow 0460  
                           ?___wmul 0073        __end_of_changeTimerMaxConter 04FB  
                        __pintentry 0004                          _handleMenu 0556  
            __end_of_Lcd_Set_Cursor 035A                 ?_setupNewVolumeFlow 002B  
                         ?___xxtofl 0029         __end_of_getADConverterValue 0302  
                        ??_Lcd_Init 0077                          ??_Lcd_Port 0073  
                        __stringtab 047F                      _Lcd_Write_Char 035A  
                           _Lcd_Cmd 049B                ??_setupNewVolumeFlow 0079  
                         ?_setupADC 0070                             ___awdiv 01E2  
                           ___fltol 00F7                     ?_Lcd_Set_Cursor 0077  
                           __ptext1 03C6                             __ptext2 0536  
                           __ptext3 02A8                             __ptext4 003B  
                           __ptext5 00F7                             __ptext6 052A  
                           __ptext7 0556                             __ptext8 0557  
                           __ptext9 04B5                           _T1CONbits 0010  
                        ??___xxtofl 002D                             _irrigar 0536  
            __end_of_Lcd_Write_Char 0391                end_of_initialization 0037  
                        ??_setupADC 0073                           Lcd_Port@a 0073  
                       ?_handleMenu 0070                           _PORTBbits 0006  
                        _setupTimer 04B5                          _verifyMenu 052A  
                     ___xxtofl@sign 0031                     ?_Lcd_Write_Char 0070  
                 Lcd_Write_String@a 0022                   Lcd_Write_String@i 0020  
              _changeTimerMaxConter 04E5          __end_of_setupWatchdogTimer 0558  
                     ?_verifySensor 0070                           i1_irrigar 0540  
        ?_setupExternalInterruption 0070                           _Lcd_Clear 051D  
                    __end_of___wmul 043E                    _Lcd_Write_String 03F0  
               start_initialization 000F               ?_changeTimerMaxConter 0029  
                    ??_verifySensor 0079                          ?i1_irrigar 0070  
                        ?_Lcd_Clear 0070                            ??___wmul 0077  
                       __pdataBANK0 0042          getADConverterValue@leitura 003B  
                   Lcd_Write_Char@a 0077                     Lcd_Write_Char@y 0076  
                       ?_setupTimer 0070                         __pbssCOMMON 0079  
                       ?_verifyMenu 0070                           ___latbits 0002  
                     __pcstackBANK0 0020                            ?_Lcd_Cmd 0070  
           _handleTimerInterruption 0391                       ??_interrupcao 0071  
                  ??_Lcd_Set_Cursor 0020                            ?___awdiv 0020  
                          ?___fltol 0073                           __pstrings 047F  
                          ?_irrigar 0070              ??_changeTimerMaxConter 0079  
                 interrupt_function 0004                      ___wmul@product 0077  
                          _PIE1bits 008C                         ??i1_irrigar 0070  
                          Lcd_Cmd@a 0076                            _PIR1bits 000C  
                       ??_Lcd_Clear 0077                        ??_handleMenu 0073  
               __end_of_interrupcao 050C                          _ADCON0bits 001F  
                       __stringbase 0484                          _ADCON1bits 009F  
                 ___wmul@multiplier 0073                __end_of_verifySensor 03F0  
                  ??_Lcd_Write_Char 0074                            _Lcd_Init 024B  
                          _Lcd_Port 043E           ??_handleTimerInterruption 0070  
          __end_of_Lcd_Write_String 0419                  __end_of_handleMenu 0557  
       ??_setupExternalInterruption 0073                  _setupWatchdogTimer 0557  
__end_of_handleExternalInterruption 051D          _handleExternalInterruption 050C  
                __end_of__stringtab 0485                            ___xxtofl 003B  
               ?_setupWatchdogTimer 0070                            __ptext10 0460  
                          __ptext11 04E5                            __ptext20 051D  
                          __ptext12 01E2                            __ptext21 049B  
                          __ptext13 0419                            __ptext22 043E  
                          __ptext14 0550                            __ptext23 04FB  
                          __ptext15 04CE                            __ptext24 0391  
                          __ptext16 03F0                            __ptext25 050C  
                          __ptext17 035A                            __ptext26 0540  
                          __ptext18 0302                            __ptext19 024B  
        changeTimerMaxConter@mili_s 0029                ??_setupWatchdogTimer 0073  
                          _setupADC 04CE                         _interrupcao 04FB  
   __end_of_handleTimerInterruption 03C6                      _umidade_minima 0044  
                     _timer_counter 0048                        ??_setupTimer 0079  
                        _INTCONbits 000B                        ??_verifyMenu 0073  
         _setupExternalInterruption 0550                  Lcd_Write_Char@temp 0075  
                          intlevel1 0000                  __end_of_setupTimer 04CE  
                         stringcode 047F                  __end_of_verifyMenu 0536  
                Lcd_Set_Cursor@temp 0025                 _getADConverterValue 02A8  
                          stringdir 047F                            stringtab 047F  
              ?_getADConverterValue 0037                        _verifySensor 03C6  
