

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Fri Mar 04 18:58:25 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	inittext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2
    31                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    32                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    33                           	psect	text20,local,class=CODE,merge=1,delta=2
    34                           	psect	text21,local,class=CODE,merge=1,delta=2
    35                           	psect	text22,local,class=CODE,merge=1,delta=2
    36                           	psect	text23,local,class=CODE,merge=1,delta=2
    37                           	psect	text24,local,class=CODE,merge=1,delta=2
    38                           	psect	text25,local,class=CODE,merge=1,delta=2
    39                           	psect	intentry,global,class=CODE,delta=2
    40                           	psect	text26,local,class=CODE,merge=1,delta=2
    41                           	psect	text27,local,class=CODE,merge=1,delta=2
    42                           	psect	text28,local,class=CODE,merge=1,delta=2
    43                           	dabs	1,0x7E,2
    44  0000                     
    45                           ; Version 2.20
    46                           ; Generated 12/02/2020 GMT
    47                           ; 
    48                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    49                           ; All rights reserved.
    50                           ; 
    51                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    52                           ; 
    53                           ; Redistribution and use in source and binary forms, with or without modification, are
    54                           ; permitted provided that the following conditions are met:
    55                           ; 
    56                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    57                           ;        conditions and the following disclaimer.
    58                           ; 
    59                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    60                           ;        of conditions and the following disclaimer in the documentation and/or other
    61                           ;        materials provided with the distribution.
    62                           ; 
    63                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    64                           ;        software without specific prior written permission.
    65                           ; 
    66                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    67                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    68                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    69                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    70                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    71                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    72                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    73                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    74                           ; 
    75                           ; 
    76                           ; Code-generator required, PIC16F877A Definitions
    77                           ; 
    78                           ; SFR Addresses
    79  0000                     	;# 
    80  0001                     	;# 
    81  0002                     	;# 
    82  0003                     	;# 
    83  0004                     	;# 
    84  0005                     	;# 
    85  0006                     	;# 
    86  0007                     	;# 
    87  0008                     	;# 
    88  0009                     	;# 
    89  000A                     	;# 
    90  000B                     	;# 
    91  000C                     	;# 
    92  000D                     	;# 
    93  000E                     	;# 
    94  000E                     	;# 
    95  000F                     	;# 
    96  0010                     	;# 
    97  0011                     	;# 
    98  0012                     	;# 
    99  0013                     	;# 
   100  0014                     	;# 
   101  0015                     	;# 
   102  0015                     	;# 
   103  0016                     	;# 
   104  0017                     	;# 
   105  0018                     	;# 
   106  0019                     	;# 
   107  001A                     	;# 
   108  001B                     	;# 
   109  001B                     	;# 
   110  001C                     	;# 
   111  001D                     	;# 
   112  001E                     	;# 
   113  001F                     	;# 
   114  0081                     	;# 
   115  0085                     	;# 
   116  0086                     	;# 
   117  0087                     	;# 
   118  0088                     	;# 
   119  0089                     	;# 
   120  008C                     	;# 
   121  008D                     	;# 
   122  008E                     	;# 
   123  0091                     	;# 
   124  0092                     	;# 
   125  0093                     	;# 
   126  0094                     	;# 
   127  0098                     	;# 
   128  0099                     	;# 
   129  009C                     	;# 
   130  009D                     	;# 
   131  009E                     	;# 
   132  009F                     	;# 
   133  010C                     	;# 
   134  010D                     	;# 
   135  010E                     	;# 
   136  010F                     	;# 
   137  018C                     	;# 
   138  018D                     	;# 
   139  0000                     	;# 
   140  0001                     	;# 
   141  0002                     	;# 
   142  0003                     	;# 
   143  0004                     	;# 
   144  0005                     	;# 
   145  0006                     	;# 
   146  0007                     	;# 
   147  0008                     	;# 
   148  0009                     	;# 
   149  000A                     	;# 
   150  000B                     	;# 
   151  000C                     	;# 
   152  000D                     	;# 
   153  000E                     	;# 
   154  000E                     	;# 
   155  000F                     	;# 
   156  0010                     	;# 
   157  0011                     	;# 
   158  0012                     	;# 
   159  0013                     	;# 
   160  0014                     	;# 
   161  0015                     	;# 
   162  0015                     	;# 
   163  0016                     	;# 
   164  0017                     	;# 
   165  0018                     	;# 
   166  0019                     	;# 
   167  001A                     	;# 
   168  001B                     	;# 
   169  001B                     	;# 
   170  001C                     	;# 
   171  001D                     	;# 
   172  001E                     	;# 
   173  001F                     	;# 
   174  0081                     	;# 
   175  0085                     	;# 
   176  0086                     	;# 
   177  0087                     	;# 
   178  0088                     	;# 
   179  0089                     	;# 
   180  008C                     	;# 
   181  008D                     	;# 
   182  008E                     	;# 
   183  0091                     	;# 
   184  0092                     	;# 
   185  0093                     	;# 
   186  0094                     	;# 
   187  0098                     	;# 
   188  0099                     	;# 
   189  009C                     	;# 
   190  009D                     	;# 
   191  009E                     	;# 
   192  009F                     	;# 
   193  010C                     	;# 
   194  010D                     	;# 
   195  010E                     	;# 
   196  010F                     	;# 
   197  018C                     	;# 
   198  018D                     	;# 
   199                           
   200                           	psect	idataBANK0
   201  0775                     __pidataBANK0:
   202                           
   203                           ;initializer for _MLxMS
   204  0775  3419               	retlw	25
   205  0776  3400               	retlw	0
   206                           
   207                           ;initializer for _water_volume
   208  0777  34C8               	retlw	200
   209  0778  3400               	retlw	0
   210                           
   211                           ;initializer for _umidade_minima
   212  0779  340A               	retlw	10
   213  077A  3400               	retlw	0
   214                           
   215                           ;initializer for _timer_counter_max
   216  077B  340A               	retlw	10
   217  077C  3400               	retlw	0
   218  0006                     _PORTB	set	6
   219  001F                     _ADCON0bits	set	31
   220  000C                     _PIR1bits	set	12
   221  0006                     _PORTBbits	set	6
   222  000E                     _TMR1L	set	14
   223  000F                     _TMR1H	set	15
   224  0010                     _T1CONbits	set	16
   225  000B                     _INTCONbits	set	11
   226  0007                     _PORTC	set	7
   227  001E                     _ADRESH	set	30
   228  0059                     _INTF	set	89
   229  0060                     _TMR1IF	set	96
   230  0043                     _RD3	set	67
   231  0042                     _RD2	set	66
   232  0047                     _RD7	set	71
   233  0046                     _RD6	set	70
   234  0045                     _RD5	set	69
   235  0044                     _RD4	set	68
   236  0088                     _TRISD	set	136
   237  0087                     _TRISC	set	135
   238  0086                     _TRISB	set	134
   239  0085                     _TRISA	set	133
   240  009E                     _ADRESL	set	158
   241  009F                     _ADCON1bits	set	159
   242  0081                     _OPTION_REGbits	set	129
   243  008C                     _PIE1bits	set	140
   244                           
   245                           	psect	strings
   246  065A                     __pstrings:
   247  065A                     stringtab:
   248  065A                     __stringtab:
   249  065A                     stringcode:	
   250                           ;	String table - string pointers are 1 byte each
   251                           
   252  065A                     stringdir:
   253  065A  3006               	movlw	high stringdir
   254  065B  008A               	movwf	10
   255  065C  0804               	movf	4,w
   256  065D  0A84               	incf	4,f
   257  065E  0782               	addwf	2,f
   258  065F                     __stringbase:
   259  065F  3400               	retlw	0
   260  0660                     __end_of__stringtab:
   261  0660                     STR_1:
   262  0660  344E               	retlw	78	;'N'
   263  0661  3445               	retlw	69	;'E'
   264  0662  3457               	retlw	87	;'W'
   265  0663  3420               	retlw	32	;' '
   266  0664  3454               	retlw	84	;'T'
   267  0665  3448               	retlw	72	;'H'
   268  0666  3452               	retlw	82	;'R'
   269  0667  3445               	retlw	69	;'E'
   270  0668  3453               	retlw	83	;'S'
   271  0669  3448               	retlw	72	;'H'
   272  066A  344F               	retlw	79	;'O'
   273  066B  344C               	retlw	76	;'L'
   274  066C  3444               	retlw	68	;'D'
   275  066D  343A               	retlw	58	;':'
   276  066E  3400               	retlw	0
   277  066F                     STR_2:
   278  066F  344E               	retlw	78	;'N'
   279  0670  3445               	retlw	69	;'E'
   280  0671  3457               	retlw	87	;'W'
   281  0672  3420               	retlw	32	;' '
   282  0673  3456               	retlw	86	;'V'
   283  0674  344F               	retlw	79	;'O'
   284  0675  344C               	retlw	76	;'L'
   285  0676  3455               	retlw	85	;'U'
   286  0677  344D               	retlw	77	;'M'
   287  0678  3445               	retlw	69	;'E'
   288  0679  343A               	retlw	58	;':'
   289  067A  3400               	retlw	0
   290                           
   291                           	psect	cinit
   292  000F                     start_initialization:	
   293                           ; #config settings
   294                           
   295  000F                     __initialization:
   296                           
   297                           ; Initialize objects allocated to BANK0
   298  000F  1383               	bcf	3,7	;select IRP bank0
   299  0010  304C               	movlw	low (__pdataBANK0+8)
   300  0011  00FD               	movwf	btemp+-1
   301  0012  3007               	movlw	high __pidataBANK0
   302  0013  00FE               	movwf	btemp
   303  0014  3075               	movlw	low __pidataBANK0
   304  0015  00FF               	movwf	btemp+1
   305  0016  3044               	movlw	low __pdataBANK0
   306  0017  0084               	movwf	4
   307  0018  120A  118A  2734  120A  118A  	fcall	init_ram0
   308                           
   309                           ; Clear objects allocated to BANK0
   310  001D  01CC               	clrf	__pbssBANK0& (0+127)
   311  001E  01CD               	clrf	(__pbssBANK0+1)& (0+127)
   312  001F  01CE               	clrf	(__pbssBANK0+2)& (0+127)
   313  0020  01CF               	clrf	(__pbssBANK0+3)& (0+127)
   314  0021  01D0               	clrf	(__pbssBANK0+4)& (0+127)
   315  0022  01D1               	clrf	(__pbssBANK0+5)& (0+127)
   316                           
   317                           ; Clear objects allocated to COMMON
   318  0023  01F9               	clrf	__pbssCOMMON& (0+127)
   319  0024  01FA               	clrf	(__pbssCOMMON+1)& (0+127)
   320  0025                     end_of_initialization:	
   321                           ;End of C runtime variable initialization code
   322                           
   323  0025                     __end_of__initialization:
   324  0025  0183               	clrf	3
   325  0026  120A  118A  2D13   	ljmp	_main	;jump to C main() function
   326                           
   327                           	psect	bssCOMMON
   328  0079                     __pbssCOMMON:
   329  0079                     _irrigacao_ativa:
   330  0079                     	ds	2
   331                           
   332                           	psect	bssBANK0
   333  004C                     __pbssBANK0:
   334  004C                     _ext_int_ativa:
   335  004C                     	ds	2
   336  004E                     _setup_menu:
   337  004E                     	ds	2
   338  0050                     _timer_counter:
   339  0050                     	ds	2
   340                           
   341                           	psect	dataBANK0
   342  0044                     __pdataBANK0:
   343  0044                     _MLxMS:
   344  0044                     	ds	2
   345  0046                     _water_volume:
   346  0046                     	ds	2
   347  0048                     _umidade_minima:
   348  0048                     	ds	2
   349  004A                     _timer_counter_max:
   350  004A                     	ds	2
   351                           
   352                           	psect	inittext
   353  0730                     init_fetch0:	
   354                           ;	Called with low address in FSR and high address in W
   355                           
   356  0730  087E               	movf	btemp,w
   357  0731  008A               	movwf	10
   358  0732  087F               	movf	btemp+1,w
   359  0733  0082               	movwf	2
   360  0734                     init_ram0:	
   361                           ;Called with:
   362                           ;	high address of idata address in btemp 
   363                           ;	low address of idata address in btemp+1 
   364                           ;	low address of data in FSR
   365                           ;	high address + 1 of data in btemp-1
   366                           
   367  0734  120A  118A  2730  120A  118A  	fcall	init_fetch0
   368  0739  0080               	movwf	0
   369  073A  0A84               	incf	4,f
   370  073B  0804               	movf	4,w
   371  073C  067D               	xorwf	btemp+-1,w
   372  073D  1903               	btfsc	3,2
   373  073E  3400               	retlw	0
   374  073F  0AFF               	incf	btemp+1,f
   375  0740  1903               	btfsc	3,2
   376  0741  0AFE               	incf	btemp,f
   377  0742  2F34               	goto	init_ram0
   378                           
   379                           	psect	cstackCOMMON
   380  0070                     __pcstackCOMMON:
   381  0070                     ?_Lcd_Port:
   382  0070                     ?_Lcd_Cmd:	
   383                           ; 1 bytes @ 0x0
   384                           
   385  0070                     ?_Lcd_Clear:	
   386                           ; 1 bytes @ 0x0
   387                           
   388  0070                     ?_Lcd_Init:	
   389                           ; 1 bytes @ 0x0
   390                           
   391  0070                     ?_Lcd_Write_Char:	
   392                           ; 1 bytes @ 0x0
   393                           
   394  0070                     ?_Lcd_Write_String:	
   395                           ; 1 bytes @ 0x0
   396                           
   397  0070                     ?_setupNewVolumeFlow:	
   398                           ; 1 bytes @ 0x0
   399                           
   400  0070                     ?_setupTimer:	
   401                           ; 1 bytes @ 0x0
   402                           
   403  0070                     ?_handleTimerInterruption:	
   404                           ; 1 bytes @ 0x0
   405                           
   406  0070                     ??_handleTimerInterruption:	
   407                           ; 1 bytes @ 0x0
   408                           
   409  0070                     ?_irrigar:	
   410                           ; 1 bytes @ 0x0
   411                           
   412  0070                     ?_handleExternalInterruption:	
   413                           ; 1 bytes @ 0x0
   414                           
   415  0070                     ??_handleExternalInterruption:	
   416                           ; 1 bytes @ 0x0
   417                           
   418  0070                     ?_interrupcao:	
   419                           ; 1 bytes @ 0x0
   420                           
   421  0070                     ?_setupExternalInterruption:	
   422                           ; 1 bytes @ 0x0
   423                           
   424  0070                     ?_handleMenu:	
   425                           ; 1 bytes @ 0x0
   426                           
   427  0070                     ?_verifyMenu:	
   428                           ; 1 bytes @ 0x0
   429                           
   430  0070                     ?_verifySensor:	
   431                           ; 1 bytes @ 0x0
   432                           
   433  0070                     ?_setupWatchdogTimer:	
   434                           ; 1 bytes @ 0x0
   435                           
   436  0070                     ?_setupADC:	
   437                           ; 1 bytes @ 0x0
   438                           
   439  0070                     ?_main:	
   440                           ; 1 bytes @ 0x0
   441                           
   442  0070                     ?i1_irrigar:	
   443                           ; 1 bytes @ 0x0
   444                           
   445  0070                     ??i1_irrigar:	
   446                           ; 1 bytes @ 0x0
   447                           
   448                           
   449                           ; 1 bytes @ 0x0
   450  0070                     	ds	1
   451  0071                     ??_interrupcao:
   452                           
   453                           ; 1 bytes @ 0x1
   454  0071                     	ds	2
   455  0073                     ??_Lcd_Port:
   456  0073                     ??_irrigar:	
   457                           ; 1 bytes @ 0x3
   458                           
   459  0073                     ??_setupExternalInterruption:	
   460                           ; 1 bytes @ 0x3
   461                           
   462  0073                     ??_setupWatchdogTimer:	
   463                           ; 1 bytes @ 0x3
   464                           
   465  0073                     ??_setupADC:	
   466                           ; 1 bytes @ 0x3
   467                           
   468  0073                     ?___wmul:	
   469                           ; 1 bytes @ 0x3
   470                           
   471  0073                     ?___awmod:	
   472                           ; 2 bytes @ 0x3
   473                           
   474  0073                     ?___fltol:	
   475                           ; 2 bytes @ 0x3
   476                           
   477  0073                     Lcd_Port@a:	
   478                           ; 4 bytes @ 0x3
   479                           
   480  0073                     ___wmul@multiplier:	
   481                           ; 1 bytes @ 0x3
   482                           
   483  0073                     ___awmod@divisor:	
   484                           ; 2 bytes @ 0x3
   485                           
   486  0073                     ___fltol@f1:	
   487                           ; 2 bytes @ 0x3
   488                           
   489                           
   490                           ; 4 bytes @ 0x3
   491  0073                     	ds	1
   492  0074                     ??_Lcd_Cmd:
   493  0074                     ??_Lcd_Write_Char:	
   494                           ; 1 bytes @ 0x4
   495                           
   496                           
   497                           ; 1 bytes @ 0x4
   498  0074                     	ds	1
   499  0075                     Lcd_Write_Char@temp:
   500  0075                     ___wmul@multiplicand:	
   501                           ; 1 bytes @ 0x5
   502                           
   503  0075                     ___awmod@dividend:	
   504                           ; 2 bytes @ 0x5
   505                           
   506                           
   507                           ; 2 bytes @ 0x5
   508  0075                     	ds	1
   509  0076                     Lcd_Cmd@a:
   510  0076                     Lcd_Write_Char@y:	
   511                           ; 1 bytes @ 0x6
   512                           
   513                           
   514                           ; 1 bytes @ 0x6
   515  0076                     	ds	1
   516  0077                     ??_Lcd_Clear:
   517  0077                     ?_Lcd_Set_Cursor:	
   518                           ; 1 bytes @ 0x7
   519                           
   520  0077                     ??_Lcd_Init:	
   521                           ; 1 bytes @ 0x7
   522                           
   523  0077                     ??___wmul:	
   524                           ; 1 bytes @ 0x7
   525                           
   526  0077                     ??___awmod:	
   527                           ; 1 bytes @ 0x7
   528                           
   529  0077                     Lcd_Set_Cursor@b:	
   530                           ; 1 bytes @ 0x7
   531                           
   532  0077                     Lcd_Write_Char@a:	
   533                           ; 1 bytes @ 0x7
   534                           
   535  0077                     ___fltol@sign1:	
   536                           ; 1 bytes @ 0x7
   537                           
   538  0077                     ___wmul@product:	
   539                           ; 1 bytes @ 0x7
   540                           
   541                           
   542                           ; 2 bytes @ 0x7
   543  0077                     	ds	1
   544  0078                     ??_Lcd_Write_String:
   545  0078                     ___fltol@exp1:	
   546                           ; 1 bytes @ 0x8
   547                           
   548                           
   549                           ; 1 bytes @ 0x8
   550  0078                     	ds	1
   551  0079                     ??_changeTimerMaxConter:
   552  0079                     ??_setupNewVolumeFlow:	
   553                           ; 1 bytes @ 0x9
   554                           
   555  0079                     ??_setupTimer:	
   556                           ; 1 bytes @ 0x9
   557                           
   558                           
   559                           	psect	cstackBANK0
   560  0020                     __pcstackBANK0:	
   561                           ; 1 bytes @ 0x9
   562                           
   563  0020                     ??_Lcd_Set_Cursor:
   564  0020                     ??___fltol:	
   565                           ; 1 bytes @ 0x0
   566                           
   567  0020                     ___awmod@counter:	
   568                           ; 1 bytes @ 0x0
   569                           
   570  0020                     Lcd_Write_String@i:	
   571                           ; 1 bytes @ 0x0
   572                           
   573                           
   574                           ; 2 bytes @ 0x0
   575  0020                     	ds	1
   576  0021                     ___awmod@sign:
   577                           
   578                           ; 1 bytes @ 0x1
   579  0021                     	ds	1
   580  0022                     ?___awdiv:
   581  0022                     Lcd_Set_Cursor@a:	
   582                           ; 2 bytes @ 0x2
   583                           
   584  0022                     Lcd_Write_String@a:	
   585                           ; 1 bytes @ 0x2
   586                           
   587  0022                     ___awdiv@divisor:	
   588                           ; 1 bytes @ 0x2
   589                           
   590                           
   591                           ; 2 bytes @ 0x2
   592  0022                     	ds	1
   593  0023                     Lcd_Set_Cursor@z:
   594                           
   595                           ; 1 bytes @ 0x3
   596  0023                     	ds	1
   597  0024                     Lcd_Set_Cursor@y:
   598  0024                     ___awdiv@dividend:	
   599                           ; 1 bytes @ 0x4
   600                           
   601                           
   602                           ; 2 bytes @ 0x4
   603  0024                     	ds	1
   604  0025                     Lcd_Set_Cursor@temp:
   605                           
   606                           ; 1 bytes @ 0x5
   607  0025                     	ds	1
   608  0026                     ??___awdiv:
   609                           
   610                           ; 1 bytes @ 0x6
   611  0026                     	ds	1
   612  0027                     ___awdiv@counter:
   613                           
   614                           ; 1 bytes @ 0x7
   615  0027                     	ds	1
   616  0028                     ___awdiv@sign:
   617                           
   618                           ; 1 bytes @ 0x8
   619  0028                     	ds	1
   620  0029                     ___awdiv@quotient:
   621                           
   622                           ; 2 bytes @ 0x9
   623  0029                     	ds	2
   624  002B                     ?_changeTimerMaxConter:
   625  002B                     ?_writeValor:	
   626                           ; 1 bytes @ 0xB
   627                           
   628  002B                     ?___xxtofl:	
   629                           ; 1 bytes @ 0xB
   630                           
   631  002B                     changeTimerMaxConter@mili_s:	
   632                           ; 4 bytes @ 0xB
   633                           
   634  002B                     writeValor@valor:	
   635                           ; 2 bytes @ 0xB
   636                           
   637  002B                     ___xxtofl@val:	
   638                           ; 2 bytes @ 0xB
   639                           
   640                           
   641                           ; 4 bytes @ 0xB
   642  002B                     	ds	2
   643  002D                     ??_writeValor:
   644  002D                     setupNewVolumeFlow@new_ms:	
   645                           ; 1 bytes @ 0xD
   646                           
   647                           
   648                           ; 2 bytes @ 0xD
   649  002D                     	ds	1
   650  002E                     writeValor@centena:
   651                           
   652                           ; 1 bytes @ 0xE
   653  002E                     	ds	1
   654  002F                     ??___xxtofl:
   655  002F                     writeValor@dezena:	
   656                           ; 1 bytes @ 0xF
   657                           
   658                           
   659                           ; 1 bytes @ 0xF
   660  002F                     	ds	1
   661  0030                     writeValor@unidade:
   662                           
   663                           ; 1 bytes @ 0x10
   664  0030                     	ds	1
   665  0031                     ??_handleMenu:
   666                           
   667                           ; 1 bytes @ 0x11
   668  0031                     	ds	2
   669  0033                     ___xxtofl@sign:
   670                           
   671                           ; 1 bytes @ 0x13
   672  0033                     	ds	1
   673  0034                     ___xxtofl@exp:
   674  0034                     handleMenu@volume:	
   675                           ; 1 bytes @ 0x14
   676                           
   677                           
   678                           ; 2 bytes @ 0x14
   679  0034                     	ds	1
   680  0035                     ___xxtofl@arg:
   681                           
   682                           ; 4 bytes @ 0x15
   683  0035                     	ds	1
   684  0036                     handleMenu@umidade:
   685                           
   686                           ; 2 bytes @ 0x16
   687  0036                     	ds	2
   688  0038                     ??_verifyMenu:
   689                           
   690                           ; 1 bytes @ 0x18
   691  0038                     	ds	1
   692  0039                     ?_getADConverterValue:
   693                           
   694                           ; 2 bytes @ 0x19
   695  0039                     	ds	2
   696  003B                     ??_getADConverterValue:
   697                           
   698                           ; 1 bytes @ 0x1B
   699  003B                     	ds	2
   700  003D                     getADConverterValue@leitura:
   701                           
   702                           ; 4 bytes @ 0x1D
   703  003D                     	ds	4
   704  0041                     ??_verifySensor:
   705                           
   706                           ; 1 bytes @ 0x21
   707  0041                     	ds	1
   708  0042                     ??_main:
   709                           
   710                           ; 1 bytes @ 0x22
   711  0042                     	ds	2
   712                           
   713                           	psect	maintext
   714  0513                     __pmaintext:	
   715 ;;
   716 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   717 ;;
   718 ;; *************** function _main *****************
   719 ;; Defined at:
   720 ;;		line 361 in file "main.c"
   721 ;; Parameters:    Size  Location     Type
   722 ;;		None
   723 ;; Auto vars:     Size  Location     Type
   724 ;;		None
   725 ;; Return value:  Size  Location     Type
   726 ;;                  1    wreg      void 
   727 ;; Registers used:
   728 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   729 ;; Tracked objects:
   730 ;;		On entry : B00/0
   731 ;;		On exit  : 0/0
   732 ;;		Unchanged: 0/0
   733 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   734 ;;      Params:         0       0       0       0       0
   735 ;;      Locals:         0       0       0       0       0
   736 ;;      Temps:          0       2       0       0       0
   737 ;;      Totals:         0       2       0       0       0
   738 ;;Total ram usage:        2 bytes
   739 ;; Hardware stack levels required when called: 9
   740 ;; This function calls:
   741 ;;		_Lcd_Init
   742 ;;		_setupADC
   743 ;;		_setupExternalInterruption
   744 ;;		_setupTimer
   745 ;;		_setupWatchdogTimer
   746 ;;		_verifyMenu
   747 ;;		_verifySensor
   748 ;; This function is called by:
   749 ;;		Startup code after reset
   750 ;; This function uses a non-reentrant model
   751 ;;
   752                           
   753  0513                     _main:	
   754                           ;psect for function _main
   755                           
   756  0513                     l2104:	
   757                           ;incstack = 0
   758 ;; hardware stack exceeded
   759                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   760                           
   761                           
   762                           ;main.c: 364:     TRISA = 0b00000001;
   763  0513  3001               	movlw	1
   764  0514  1683               	bsf	3,5	;RP0=1, select bank1
   765  0515  1303               	bcf	3,6	;RP1=0, select bank1
   766  0516  0085               	movwf	5	;volatile
   767                           
   768                           ;main.c: 365:     TRISB = 0b00011101;
   769  0517  301D               	movlw	29
   770  0518  0086               	movwf	6	;volatile
   771  0519                     l2106:
   772                           
   773                           ;main.c: 366:     TRISC = 0;
   774  0519  0187               	clrf	7	;volatile
   775  051A                     l2108:
   776                           
   777                           ;main.c: 367:     PORTC = 0;
   778  051A  1283               	bcf	3,5	;RP0=0, select bank0
   779  051B  1303               	bcf	3,6	;RP1=0, select bank0
   780  051C  0187               	clrf	7	;volatile
   781  051D                     l2110:
   782                           
   783                           ;main.c: 368:     TRISD = 0b00000000;
   784  051D  1683               	bsf	3,5	;RP0=1, select bank1
   785  051E  1303               	bcf	3,6	;RP1=0, select bank1
   786  051F  0188               	clrf	8	;volatile
   787  0520                     l2112:
   788                           
   789                           ;main.c: 369:     OPTION_REGbits.nRBPU = 0;
   790  0520  1381               	bcf	1,7	;volatile
   791  0521                     l2114:
   792                           
   793                           ;main.c: 370:     PORTB = 0;
   794  0521  1283               	bcf	3,5	;RP0=0, select bank0
   795  0522  1303               	bcf	3,6	;RP1=0, select bank0
   796  0523  0186               	clrf	6	;volatile
   797  0524                     l2116:
   798                           
   799                           ;main.c: 372:     setupExternalInterruption();
   800  0524  120A  118A  2785  120A  118A  	fcall	_setupExternalInterruption
   801  0529                     l2118:
   802                           
   803                           ;main.c: 373:     setupWatchdogTimer();
   804  0529  120A  118A  277D  120A  118A  	fcall	_setupWatchdogTimer
   805  052E                     l2120:
   806                           
   807                           ;main.c: 374:     setupTimer();
   808  052E  120A  118A  271B  120A  118A  	fcall	_setupTimer
   809                           
   810                           ;main.c: 375:     setupADC();
   811  0533  120A  118A  2704  120A  118A  	fcall	_setupADC
   812  0538                     l2122:
   813                           
   814                           ;main.c: 376:     Lcd_Init();
   815  0538  120A  118A  23A9  120A  118A  	fcall	_Lcd_Init
   816                           
   817                           ;main.c: 378:     _delay((unsigned long)((100)*(4000000/4000.0)));
   818  053D  3082               	movlw	130
   819  053E  1283               	bcf	3,5	;RP0=0, select bank0
   820  053F  1303               	bcf	3,6	;RP1=0, select bank0
   821  0540  00C3               	movwf	??_main+1
   822  0541  30DD               	movlw	221
   823  0542  00C2               	movwf	??_main
   824  0543                     u2017:
   825  0543  0BC2               	decfsz	??_main,f
   826  0544  2D43               	goto	u2017
   827  0545  0BC3               	decfsz	??_main+1,f
   828  0546  2D43               	goto	u2017
   829                           
   830                           ;main.c: 379:     ext_int_ativa = 1;
   831  0547  3001               	movlw	1
   832  0548  1283               	bcf	3,5	;RP0=0, select bank0
   833  0549  1303               	bcf	3,6	;RP1=0, select bank0
   834  054A  00CC               	movwf	_ext_int_ativa
   835  054B  3000               	movlw	0
   836  054C  00CD               	movwf	_ext_int_ativa+1
   837  054D                     l2124:
   838                           
   839                           ;main.c: 382:     {;main.c: 383:         verifySensor();
   840  054D  120A  118A  2616  120A  118A  	fcall	_verifySensor
   841  0552                     l2126:
   842                           
   843                           ;main.c: 384:         verifyMenu();
   844  0552  120A  118A  267B  120A  118A  	fcall	_verifyMenu
   845  0557  0064               	clrwdt	;# 
   846  0558  2D4D               	goto	l2124
   847  0559  120A  118A  280C   	ljmp	start
   848  055C                     __end_of_main:
   849                           
   850                           	psect	text1
   851  0616                     __ptext1:	
   852 ;; *************** function _verifySensor *****************
   853 ;; Defined at:
   854 ;;		line 301 in file "main.c"
   855 ;; Parameters:    Size  Location     Type
   856 ;;		None
   857 ;; Auto vars:     Size  Location     Type
   858 ;;		None
   859 ;; Return value:  Size  Location     Type
   860 ;;                  1    wreg      void 
   861 ;; Registers used:
   862 ;;		wreg, status,2, status,0, pclath, cstack
   863 ;; Tracked objects:
   864 ;;		On entry : 0/0
   865 ;;		On exit  : 0/0
   866 ;;		Unchanged: 0/0
   867 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   868 ;;      Params:         0       0       0       0       0
   869 ;;      Locals:         0       0       0       0       0
   870 ;;      Temps:          0       1       0       0       0
   871 ;;      Totals:         0       1       0       0       0
   872 ;;Total ram usage:        1 bytes
   873 ;; Hardware stack levels used: 1
   874 ;; Hardware stack levels required when called: 5
   875 ;; This function calls:
   876 ;;		_getADConverterValue
   877 ;;		_irrigar
   878 ;; This function is called by:
   879 ;;		_main
   880 ;; This function uses a non-reentrant model
   881 ;;
   882                           
   883  0616                     _verifySensor:	
   884                           ;psect for function _verifySensor
   885                           
   886  0616                     l2094:	
   887                           ;incstack = 0
   888                           ; Regs used in _verifySensor: [wreg+status,2+status,0+pclath+cstack]
   889                           
   890                           
   891                           ;main.c: 304:     if(getADConverterValue()<umidade_minima){
   892  0616  120A  118A  2461  120A  118A  	fcall	_getADConverterValue
   893  061B  1283               	bcf	3,5	;RP0=0, select bank0
   894  061C  1303               	bcf	3,6	;RP1=0, select bank0
   895  061D  083A               	movf	?_getADConverterValue+1,w
   896  061E  3A80               	xorlw	128
   897  061F  00C1               	movwf	??_verifySensor
   898  0620  0849               	movf	_umidade_minima+1,w
   899  0621  3A80               	xorlw	128
   900  0622  0241               	subwf	??_verifySensor,w
   901  0623  1D03               	skipz
   902  0624  2E27               	goto	u2005
   903  0625  0848               	movf	_umidade_minima,w
   904  0626  0239               	subwf	?_getADConverterValue,w
   905  0627                     u2005:
   906  0627  1803               	skipnc
   907  0628  2E2A               	goto	u2001
   908  0629  2E2B               	goto	u2000
   909  062A                     u2001:
   910  062A  2E34               	goto	l178
   911  062B                     u2000:
   912  062B                     l2096:
   913                           
   914                           ;main.c: 305:         PORTBbits.RB7 = 1;
   915  062B  1283               	bcf	3,5	;RP0=0, select bank0
   916  062C  1303               	bcf	3,6	;RP1=0, select bank0
   917  062D  1786               	bsf	6,7	;volatile
   918  062E                     l2098:
   919                           
   920                           ;main.c: 306:         irrigar();
   921  062E  120A  118A  2761  120A  118A  	fcall	_irrigar
   922                           
   923                           ;main.c: 307:     }
   924  0633  2E37               	goto	l180
   925  0634                     l178:	
   926                           ;main.c: 308:     else{
   927                           
   928                           
   929                           ;main.c: 309:         PORTBbits.RB7 = 0;
   930  0634  1283               	bcf	3,5	;RP0=0, select bank0
   931  0635  1303               	bcf	3,6	;RP1=0, select bank0
   932  0636  1386               	bcf	6,7	;volatile
   933  0637                     l180:
   934  0637  0008               	return
   935  0638                     __end_of_verifySensor:
   936                           
   937                           	psect	text2
   938  0761                     __ptext2:	
   939 ;; *************** function _irrigar *****************
   940 ;; Defined at:
   941 ;;		line 164 in file "main.c"
   942 ;; Parameters:    Size  Location     Type
   943 ;;		None
   944 ;; Auto vars:     Size  Location     Type
   945 ;;		None
   946 ;; Return value:  Size  Location     Type
   947 ;;                  1    wreg      void 
   948 ;; Registers used:
   949 ;;		wreg, status,2
   950 ;; Tracked objects:
   951 ;;		On entry : 0/0
   952 ;;		On exit  : 0/0
   953 ;;		Unchanged: 0/0
   954 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   955 ;;      Params:         0       0       0       0       0
   956 ;;      Locals:         0       0       0       0       0
   957 ;;      Temps:          0       0       0       0       0
   958 ;;      Totals:         0       0       0       0       0
   959 ;;Total ram usage:        0 bytes
   960 ;; Hardware stack levels used: 1
   961 ;; Hardware stack levels required when called: 3
   962 ;; This function calls:
   963 ;;		Nothing
   964 ;; This function is called by:
   965 ;;		_verifySensor
   966 ;; This function uses a non-reentrant model
   967 ;;
   968                           
   969  0761                     _irrigar:	
   970                           ;psect for function _irrigar
   971                           
   972  0761                     l1550:	
   973                           ;incstack = 0
   974                           ; Regs used in _irrigar: [wreg+status,2]
   975                           
   976                           
   977                           ;main.c: 165:     irrigacao_ativa = 1;
   978  0761  3001               	movlw	1
   979  0762  00F9               	movwf	_irrigacao_ativa
   980  0763  3000               	movlw	0
   981  0764  00FA               	movwf	_irrigacao_ativa+1
   982  0765                     l1552:
   983                           
   984                           ;main.c: 166:     timer_counter = 0;
   985  0765  1283               	bcf	3,5	;RP0=0, select bank0
   986  0766  1303               	bcf	3,6	;RP1=0, select bank0
   987  0767  01D0               	clrf	_timer_counter
   988  0768  01D1               	clrf	_timer_counter+1
   989  0769                     l1554:
   990                           
   991                           ;main.c: 168:     T1CONbits.TMR1ON = 1;
   992  0769  1410               	bsf	16,0	;volatile
   993  076A                     l130:
   994  076A  0008               	return
   995  076B                     __end_of_irrigar:
   996                           
   997                           	psect	text3
   998  0461                     __ptext3:	
   999 ;; *************** function _getADConverterValue *****************
  1000 ;; Defined at:
  1001 ;;		line 295 in file "main.c"
  1002 ;; Parameters:    Size  Location     Type
  1003 ;;		None
  1004 ;; Auto vars:     Size  Location     Type
  1005 ;;  leitura         4   29[BANK0 ] float 
  1006 ;; Return value:  Size  Location     Type
  1007 ;;                  2   25[BANK0 ] int 
  1008 ;; Registers used:
  1009 ;;		wreg, status,2, status,0, pclath, cstack
  1010 ;; Tracked objects:
  1011 ;;		On entry : 0/0
  1012 ;;		On exit  : 0/0
  1013 ;;		Unchanged: 0/0
  1014 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1015 ;;      Params:         0       2       0       0       0
  1016 ;;      Locals:         0       4       0       0       0
  1017 ;;      Temps:          0       2       0       0       0
  1018 ;;      Totals:         0       8       0       0       0
  1019 ;;Total ram usage:        8 bytes
  1020 ;; Hardware stack levels used: 1
  1021 ;; Hardware stack levels required when called: 4
  1022 ;; This function calls:
  1023 ;;		___awdiv
  1024 ;;		___fltol
  1025 ;;		___wmul
  1026 ;;		___xxtofl
  1027 ;; This function is called by:
  1028 ;;		_verifySensor
  1029 ;; This function uses a non-reentrant model
  1030 ;;
  1031                           
  1032  0461                     _getADConverterValue:	
  1033                           ;psect for function _getADConverterValue
  1034                           
  1035  0461                     l2054:	
  1036                           ;incstack = 0
  1037                           ; Regs used in _getADConverterValue: [wreg+status,2+status,0+pclath+cstack]
  1038                           
  1039                           
  1040                           ;main.c: 296:     ADCON0bits.GO = 1;
  1041  0461  1283               	bcf	3,5	;RP0=0, select bank0
  1042  0462  1303               	bcf	3,6	;RP1=0, select bank0
  1043  0463  151F               	bsf	31,2	;volatile
  1044  0464                     l2056:
  1045                           
  1046                           ;main.c: 297:     _delay((unsigned long)((10)*(4000000/4000000.0)));
  1047  0464  3002               	movlw	2
  1048  0465  1283               	bcf	3,5	;RP0=0, select bank0
  1049  0466  1303               	bcf	3,6	;RP1=0, select bank0
  1050  0467  00BB               	movwf	??_getADConverterValue
  1051  0468                     u2027:
  1052  0468  0BBB               	decfsz	??_getADConverterValue,f
  1053  0469  2C68               	goto	u2027
  1054  046A  0000               	nop
  1055  046B                     l2058:
  1056                           
  1057                           ;main.c: 298:     float leitura = 100*ADRESH/256;
  1058  046B  3064               	movlw	100
  1059  046C  00F5               	movwf	___wmul@multiplicand
  1060  046D  3000               	movlw	0
  1061  046E  00F6               	movwf	___wmul@multiplicand+1
  1062  046F  1283               	bcf	3,5	;RP0=0, select bank0
  1063  0470  1303               	bcf	3,6	;RP1=0, select bank0
  1064  0471  081E               	movf	30,w	;volatile
  1065  0472  00BB               	movwf	??_getADConverterValue
  1066  0473  01BC               	clrf	??_getADConverterValue+1
  1067  0474  083B               	movf	??_getADConverterValue,w
  1068  0475  00F3               	movwf	___wmul@multiplier
  1069  0476  083C               	movf	??_getADConverterValue+1,w
  1070  0477  00F4               	movwf	___wmul@multiplier+1
  1071  0478  120A  118A  25F1  120A  118A  	fcall	___wmul
  1072  047D  0874               	movf	?___wmul+1,w
  1073  047E  1283               	bcf	3,5	;RP0=0, select bank0
  1074  047F  1303               	bcf	3,6	;RP1=0, select bank0
  1075  0480  00A5               	movwf	___awdiv@dividend+1
  1076  0481  0873               	movf	?___wmul,w
  1077  0482  00A4               	movwf	___awdiv@dividend
  1078  0483  3000               	movlw	0
  1079  0484  00A2               	movwf	___awdiv@divisor
  1080  0485  3001               	movlw	1
  1081  0486  00A3               	movwf	___awdiv@divisor+1
  1082  0487  120A  118A  2340  120A  118A  	fcall	___awdiv
  1083  048C  1283               	bcf	3,5	;RP0=0, select bank0
  1084  048D  1303               	bcf	3,6	;RP1=0, select bank0
  1085  048E  0822               	movf	?___awdiv,w
  1086  048F  00AB               	movwf	___xxtofl@val
  1087  0490  0823               	movf	?___awdiv+1,w
  1088  0491  00AC               	movwf	___xxtofl@val+1
  1089  0492  3000               	movlw	0
  1090  0493  1BAC               	btfsc	___xxtofl@val+1,7
  1091  0494  30FF               	movlw	255
  1092  0495  00AD               	movwf	___xxtofl@val+2
  1093  0496  00AE               	movwf	___xxtofl@val+3
  1094  0497  3001               	movlw	1
  1095  0498  120A  118A  219A  120A  118A  	fcall	___xxtofl
  1096  049D  1283               	bcf	3,5	;RP0=0, select bank0
  1097  049E  1303               	bcf	3,6	;RP1=0, select bank0
  1098  049F  082E               	movf	?___xxtofl+3,w
  1099  04A0  00C0               	movwf	getADConverterValue@leitura+3
  1100  04A1  082D               	movf	?___xxtofl+2,w
  1101  04A2  00BF               	movwf	getADConverterValue@leitura+2
  1102  04A3  082C               	movf	?___xxtofl+1,w
  1103  04A4  00BE               	movwf	getADConverterValue@leitura+1
  1104  04A5  082B               	movf	?___xxtofl,w
  1105  04A6  00BD               	movwf	getADConverterValue@leitura
  1106  04A7                     l2060:
  1107                           
  1108                           ;main.c: 299:     return leitura;
  1109  04A7  0840               	movf	getADConverterValue@leitura+3,w
  1110  04A8  00F6               	movwf	___fltol@f1+3
  1111  04A9  083F               	movf	getADConverterValue@leitura+2,w
  1112  04AA  00F5               	movwf	___fltol@f1+2
  1113  04AB  083E               	movf	getADConverterValue@leitura+1,w
  1114  04AC  00F4               	movwf	___fltol@f1+1
  1115  04AD  083D               	movf	getADConverterValue@leitura,w
  1116  04AE  00F3               	movwf	___fltol@f1
  1117  04AF  120A  118A  2256  120A  118A  	fcall	___fltol
  1118  04B4  0874               	movf	?___fltol+1,w
  1119  04B5  1283               	bcf	3,5	;RP0=0, select bank0
  1120  04B6  1303               	bcf	3,6	;RP1=0, select bank0
  1121  04B7  00BA               	movwf	?_getADConverterValue+1
  1122  04B8  0873               	movf	?___fltol,w
  1123  04B9  00B9               	movwf	?_getADConverterValue
  1124  04BA                     l175:
  1125  04BA  0008               	return
  1126  04BB                     __end_of_getADConverterValue:
  1127                           
  1128                           	psect	text4
  1129  019A                     __ptext4:	
  1130 ;; *************** function ___xxtofl *****************
  1131 ;; Defined at:
  1132 ;;		line 10 in file "D:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\xxtofl.c"
  1133 ;; Parameters:    Size  Location     Type
  1134 ;;  sign            1    wreg     unsigned char 
  1135 ;;  val             4   11[BANK0 ] long 
  1136 ;; Auto vars:     Size  Location     Type
  1137 ;;  sign            1   19[BANK0 ] unsigned char 
  1138 ;;  arg             4   21[BANK0 ] unsigned long 
  1139 ;;  exp             1   20[BANK0 ] unsigned char 
  1140 ;; Return value:  Size  Location     Type
  1141 ;;                  4   11[BANK0 ] unsigned char 
  1142 ;; Registers used:
  1143 ;;		wreg, status,2, status,0
  1144 ;; Tracked objects:
  1145 ;;		On entry : 0/0
  1146 ;;		On exit  : 0/0
  1147 ;;		Unchanged: 0/0
  1148 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1149 ;;      Params:         0       4       0       0       0
  1150 ;;      Locals:         0       6       0       0       0
  1151 ;;      Temps:          0       4       0       0       0
  1152 ;;      Totals:         0      14       0       0       0
  1153 ;;Total ram usage:       14 bytes
  1154 ;; Hardware stack levels used: 1
  1155 ;; Hardware stack levels required when called: 3
  1156 ;; This function calls:
  1157 ;;		Nothing
  1158 ;; This function is called by:
  1159 ;;		_getADConverterValue
  1160 ;; This function uses a non-reentrant model
  1161 ;;
  1162                           
  1163  019A                     ___xxtofl:	
  1164                           ;psect for function ___xxtofl
  1165                           
  1166                           
  1167                           ;incstack = 0
  1168                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  1169                           ;___xxtofl@sign stored from wreg
  1170  019A  1283               	bcf	3,5	;RP0=0, select bank0
  1171  019B  1303               	bcf	3,6	;RP1=0, select bank0
  1172  019C  00B3               	movwf	___xxtofl@sign
  1173  019D                     l1506:
  1174  019D  0833               	movf	___xxtofl@sign,w
  1175  019E  1903               	btfsc	3,2
  1176  019F  29A1               	goto	u1221
  1177  01A0  29A2               	goto	u1220
  1178  01A1                     u1221:
  1179  01A1  29B6               	goto	l1512
  1180  01A2                     u1220:
  1181  01A2                     l1508:
  1182  01A2  1FAE               	btfss	___xxtofl@val+3,7
  1183  01A3  29A5               	goto	u1231
  1184  01A4  29A6               	goto	u1230
  1185  01A5                     u1231:
  1186  01A5  29B6               	goto	l1512
  1187  01A6                     u1230:
  1188  01A6                     l1510:
  1189  01A6  092B               	comf	___xxtofl@val,w
  1190  01A7  00B5               	movwf	___xxtofl@arg
  1191  01A8  092C               	comf	___xxtofl@val+1,w
  1192  01A9  00B6               	movwf	___xxtofl@arg+1
  1193  01AA  092D               	comf	___xxtofl@val+2,w
  1194  01AB  00B7               	movwf	___xxtofl@arg+2
  1195  01AC  092E               	comf	___xxtofl@val+3,w
  1196  01AD  00B8               	movwf	___xxtofl@arg+3
  1197  01AE  0AB5               	incf	___xxtofl@arg,f
  1198  01AF  1903               	skipnz
  1199  01B0  0AB6               	incf	___xxtofl@arg+1,f
  1200  01B1  1903               	skipnz
  1201  01B2  0AB7               	incf	___xxtofl@arg+2,f
  1202  01B3  1903               	skipnz
  1203  01B4  0AB8               	incf	___xxtofl@arg+3,f
  1204  01B5  29BE               	goto	l713
  1205  01B6                     l1512:
  1206  01B6  082E               	movf	___xxtofl@val+3,w
  1207  01B7  00B8               	movwf	___xxtofl@arg+3
  1208  01B8  082D               	movf	___xxtofl@val+2,w
  1209  01B9  00B7               	movwf	___xxtofl@arg+2
  1210  01BA  082C               	movf	___xxtofl@val+1,w
  1211  01BB  00B6               	movwf	___xxtofl@arg+1
  1212  01BC  082B               	movf	___xxtofl@val,w
  1213  01BD  00B5               	movwf	___xxtofl@arg
  1214  01BE                     l713:
  1215  01BE  082E               	movf	___xxtofl@val+3,w
  1216  01BF  042D               	iorwf	___xxtofl@val+2,w
  1217  01C0  042C               	iorwf	___xxtofl@val+1,w
  1218  01C1  042B               	iorwf	___xxtofl@val,w
  1219  01C2  1D03               	skipz
  1220  01C3  29C5               	goto	u1241
  1221  01C4  29C6               	goto	u1240
  1222  01C5                     u1241:
  1223  01C5  29CF               	goto	l1518
  1224  01C6                     u1240:
  1225  01C6                     l1514:
  1226  01C6  3000               	movlw	0
  1227  01C7  00AE               	movwf	?___xxtofl+3
  1228  01C8  3000               	movlw	0
  1229  01C9  00AD               	movwf	?___xxtofl+2
  1230  01CA  3000               	movlw	0
  1231  01CB  00AC               	movwf	?___xxtofl+1
  1232  01CC  3000               	movlw	0
  1233  01CD  00AB               	movwf	?___xxtofl
  1234  01CE  2A55               	goto	l715
  1235  01CF                     l1518:
  1236  01CF  3096               	movlw	150
  1237  01D0  00AF               	movwf	??___xxtofl
  1238  01D1  082F               	movf	??___xxtofl,w
  1239  01D2  00B4               	movwf	___xxtofl@exp
  1240  01D3  29E1               	goto	l1522
  1241  01D4                     l1520:
  1242  01D4  3001               	movlw	1
  1243  01D5  00AF               	movwf	??___xxtofl
  1244  01D6  082F               	movf	??___xxtofl,w
  1245  01D7  07B4               	addwf	___xxtofl@exp,f
  1246  01D8  3001               	movlw	1
  1247  01D9                     u1255:
  1248  01D9  1003               	clrc
  1249  01DA  0CB8               	rrf	___xxtofl@arg+3,f
  1250  01DB  0CB7               	rrf	___xxtofl@arg+2,f
  1251  01DC  0CB6               	rrf	___xxtofl@arg+1,f
  1252  01DD  0CB5               	rrf	___xxtofl@arg,f
  1253  01DE  3EFF               	addlw	-1
  1254  01DF  1D03               	skipz
  1255  01E0  29D9               	goto	u1255
  1256  01E1                     l1522:
  1257  01E1  30FE               	movlw	254
  1258  01E2  0538               	andwf	___xxtofl@arg+3,w
  1259  01E3  1D03               	btfss	3,2
  1260  01E4  29E6               	goto	u1261
  1261  01E5  29E7               	goto	u1260
  1262  01E6                     u1261:
  1263  01E6  29D4               	goto	l1520
  1264  01E7                     u1260:
  1265  01E7  2A03               	goto	l719
  1266  01E8                     l1524:
  1267  01E8  3001               	movlw	1
  1268  01E9  00AF               	movwf	??___xxtofl
  1269  01EA  082F               	movf	??___xxtofl,w
  1270  01EB  07B4               	addwf	___xxtofl@exp,f
  1271  01EC                     l1526:
  1272  01EC  3001               	movlw	1
  1273  01ED  07B5               	addwf	___xxtofl@arg,f
  1274  01EE  3000               	movlw	0
  1275  01EF  1803               	skipnc
  1276  01F0  3001               	movlw	1
  1277  01F1  07B6               	addwf	___xxtofl@arg+1,f
  1278  01F2  3000               	movlw	0
  1279  01F3  1803               	skipnc
  1280  01F4  3001               	movlw	1
  1281  01F5  07B7               	addwf	___xxtofl@arg+2,f
  1282  01F6  3000               	movlw	0
  1283  01F7  1803               	skipnc
  1284  01F8  3001               	movlw	1
  1285  01F9  07B8               	addwf	___xxtofl@arg+3,f
  1286  01FA                     l1528:
  1287  01FA  3001               	movlw	1
  1288  01FB                     u1275:
  1289  01FB  1003               	clrc
  1290  01FC  0CB8               	rrf	___xxtofl@arg+3,f
  1291  01FD  0CB7               	rrf	___xxtofl@arg+2,f
  1292  01FE  0CB6               	rrf	___xxtofl@arg+1,f
  1293  01FF  0CB5               	rrf	___xxtofl@arg,f
  1294  0200  3EFF               	addlw	-1
  1295  0201  1D03               	skipz
  1296  0202  29FB               	goto	u1275
  1297  0203                     l719:
  1298  0203  30FF               	movlw	255
  1299  0204  0538               	andwf	___xxtofl@arg+3,w
  1300  0205  1D03               	btfss	3,2
  1301  0206  2A08               	goto	u1281
  1302  0207  2A09               	goto	u1280
  1303  0208                     u1281:
  1304  0208  29E8               	goto	l1524
  1305  0209                     u1280:
  1306  0209  2A15               	goto	l1532
  1307  020A                     l1530:
  1308  020A  3001               	movlw	1
  1309  020B  02B4               	subwf	___xxtofl@exp,f
  1310  020C  3001               	movlw	1
  1311  020D  00AF               	movwf	??___xxtofl
  1312  020E                     u1295:
  1313  020E  1003               	clrc
  1314  020F  0DB5               	rlf	___xxtofl@arg,f
  1315  0210  0DB6               	rlf	___xxtofl@arg+1,f
  1316  0211  0DB7               	rlf	___xxtofl@arg+2,f
  1317  0212  0DB8               	rlf	___xxtofl@arg+3,f
  1318  0213  0BAF               	decfsz	??___xxtofl,f
  1319  0214  2A0E               	goto	u1295
  1320  0215                     l1532:
  1321  0215  1BB7               	btfsc	___xxtofl@arg+2,7
  1322  0216  2A18               	goto	u1301
  1323  0217  2A19               	goto	u1300
  1324  0218                     u1301:
  1325  0218  2A1F               	goto	l726
  1326  0219                     u1300:
  1327  0219                     l1534:
  1328  0219  3002               	movlw	2
  1329  021A  0234               	subwf	___xxtofl@exp,w
  1330  021B  1803               	skipnc
  1331  021C  2A1E               	goto	u1311
  1332  021D  2A1F               	goto	u1310
  1333  021E                     u1311:
  1334  021E  2A0A               	goto	l1530
  1335  021F                     u1310:
  1336  021F                     l726:
  1337  021F  1834               	btfsc	___xxtofl@exp,0
  1338  0220  2A22               	goto	u1321
  1339  0221  2A23               	goto	u1320
  1340  0222                     u1321:
  1341  0222  2A2B               	goto	l727
  1342  0223                     u1320:
  1343  0223                     l1536:
  1344  0223  30FF               	movlw	255
  1345  0224  05B5               	andwf	___xxtofl@arg,f
  1346  0225  30FF               	movlw	255
  1347  0226  05B6               	andwf	___xxtofl@arg+1,f
  1348  0227  307F               	movlw	127
  1349  0228  05B7               	andwf	___xxtofl@arg+2,f
  1350  0229  30FF               	movlw	255
  1351  022A  05B8               	andwf	___xxtofl@arg+3,f
  1352  022B                     l727:
  1353  022B  1003               	clrc
  1354  022C  0CB4               	rrf	___xxtofl@exp,f
  1355  022D                     l1538:
  1356  022D  0834               	movf	___xxtofl@exp,w
  1357  022E  00AF               	movwf	??___xxtofl
  1358  022F  01B0               	clrf	??___xxtofl+1
  1359  0230  01B1               	clrf	??___xxtofl+2
  1360  0231  01B2               	clrf	??___xxtofl+3
  1361  0232  3018               	movlw	24
  1362  0233                     u1335:
  1363  0233  1003               	clrc
  1364  0234  0DAF               	rlf	??___xxtofl,f
  1365  0235  0DB0               	rlf	??___xxtofl+1,f
  1366  0236  0DB1               	rlf	??___xxtofl+2,f
  1367  0237  0DB2               	rlf	??___xxtofl+3,f
  1368  0238                     u1330:
  1369  0238  3EFF               	addlw	-1
  1370  0239  1D03               	skipz
  1371  023A  2A33               	goto	u1335
  1372  023B  082F               	movf	??___xxtofl,w
  1373  023C  04B5               	iorwf	___xxtofl@arg,f
  1374  023D  0830               	movf	??___xxtofl+1,w
  1375  023E  04B6               	iorwf	___xxtofl@arg+1,f
  1376  023F  0831               	movf	??___xxtofl+2,w
  1377  0240  04B7               	iorwf	___xxtofl@arg+2,f
  1378  0241  0832               	movf	??___xxtofl+3,w
  1379  0242  04B8               	iorwf	___xxtofl@arg+3,f
  1380  0243                     l1540:
  1381  0243  0833               	movf	___xxtofl@sign,w
  1382  0244  1903               	btfsc	3,2
  1383  0245  2A47               	goto	u1341
  1384  0246  2A48               	goto	u1340
  1385  0247                     u1341:
  1386  0247  2A4D               	goto	l1546
  1387  0248                     u1340:
  1388  0248                     l1542:
  1389  0248  1FAE               	btfss	___xxtofl@val+3,7
  1390  0249  2A4B               	goto	u1351
  1391  024A  2A4C               	goto	u1350
  1392  024B                     u1351:
  1393  024B  2A4D               	goto	l1546
  1394  024C                     u1350:
  1395  024C                     l1544:
  1396  024C  17B8               	bsf	___xxtofl@arg+3,7
  1397  024D                     l1546:
  1398  024D  0838               	movf	___xxtofl@arg+3,w
  1399  024E  00AE               	movwf	?___xxtofl+3
  1400  024F  0837               	movf	___xxtofl@arg+2,w
  1401  0250  00AD               	movwf	?___xxtofl+2
  1402  0251  0836               	movf	___xxtofl@arg+1,w
  1403  0252  00AC               	movwf	?___xxtofl+1
  1404  0253  0835               	movf	___xxtofl@arg,w
  1405  0254  00AB               	movwf	?___xxtofl
  1406  0255                     l715:
  1407  0255  0008               	return
  1408  0256                     __end_of___xxtofl:
  1409                           
  1410                           	psect	text5
  1411  0256                     __ptext5:	
  1412 ;; *************** function ___fltol *****************
  1413 ;; Defined at:
  1414 ;;		line 43 in file "D:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\fltol.c"
  1415 ;; Parameters:    Size  Location     Type
  1416 ;;  f1              4    3[COMMON] unsigned char 
  1417 ;; Auto vars:     Size  Location     Type
  1418 ;;  exp1            1    8[COMMON] unsigned char 
  1419 ;;  sign1           1    7[COMMON] unsigned char 
  1420 ;; Return value:  Size  Location     Type
  1421 ;;                  4    3[COMMON] long 
  1422 ;; Registers used:
  1423 ;;		wreg, status,2, status,0
  1424 ;; Tracked objects:
  1425 ;;		On entry : 0/0
  1426 ;;		On exit  : 0/0
  1427 ;;		Unchanged: 0/0
  1428 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1429 ;;      Params:         4       0       0       0       0
  1430 ;;      Locals:         2       0       0       0       0
  1431 ;;      Temps:          0       5       0       0       0
  1432 ;;      Totals:         6       5       0       0       0
  1433 ;;Total ram usage:       11 bytes
  1434 ;; Hardware stack levels used: 1
  1435 ;; Hardware stack levels required when called: 3
  1436 ;; This function calls:
  1437 ;;		Nothing
  1438 ;; This function is called by:
  1439 ;;		_getADConverterValue
  1440 ;; This function uses a non-reentrant model
  1441 ;;
  1442                           
  1443  0256                     ___fltol:	
  1444                           ;psect for function ___fltol
  1445                           
  1446  0256                     l1470:	
  1447                           ;incstack = 0
  1448                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  1449                           
  1450  0256  1003               	clrc
  1451  0257  0D75               	rlf	___fltol@f1+2,w
  1452  0258  0D76               	rlf	___fltol@f1+3,w
  1453  0259  1283               	bcf	3,5	;RP0=0, select bank0
  1454  025A  1303               	bcf	3,6	;RP1=0, select bank0
  1455  025B  00A0               	movwf	??___fltol
  1456  025C  0820               	movf	??___fltol,w
  1457  025D  00F8               	movwf	___fltol@exp1
  1458  025E  0878               	movf	___fltol@exp1,w
  1459  025F  1D03               	btfss	3,2
  1460  0260  2A62               	goto	u1121
  1461  0261  2A63               	goto	u1120
  1462  0262                     u1121:
  1463  0262  2A6C               	goto	l1476
  1464  0263                     u1120:
  1465  0263                     l1472:
  1466  0263  3000               	movlw	0
  1467  0264  00F6               	movwf	?___fltol+3
  1468  0265  3000               	movlw	0
  1469  0266  00F5               	movwf	?___fltol+2
  1470  0267  3000               	movlw	0
  1471  0268  00F4               	movwf	?___fltol+1
  1472  0269  3000               	movlw	0
  1473  026A  00F3               	movwf	?___fltol
  1474  026B  2AD1               	goto	l466
  1475  026C                     l1476:
  1476  026C  0873               	movf	___fltol@f1,w
  1477  026D  00A0               	movwf	??___fltol
  1478  026E  0874               	movf	___fltol@f1+1,w
  1479  026F  00A1               	movwf	??___fltol+1
  1480  0270  0875               	movf	___fltol@f1+2,w
  1481  0271  00A2               	movwf	??___fltol+2
  1482  0272  0876               	movf	___fltol@f1+3,w
  1483  0273  00A3               	movwf	??___fltol+3
  1484  0274  301F               	movlw	31
  1485  0275                     u1135:
  1486  0275  1003               	clrc
  1487  0276  0CA3               	rrf	??___fltol+3,f
  1488  0277  0CA2               	rrf	??___fltol+2,f
  1489  0278  0CA1               	rrf	??___fltol+1,f
  1490  0279  0CA0               	rrf	??___fltol,f
  1491  027A                     u1130:
  1492  027A  3EFF               	addlw	-1
  1493  027B  1D03               	skipz
  1494  027C  2A75               	goto	u1135
  1495  027D  0820               	movf	??___fltol,w
  1496  027E  00A4               	movwf	??___fltol+4
  1497  027F  0824               	movf	??___fltol+4,w
  1498  0280  00F7               	movwf	___fltol@sign1
  1499  0281                     l1478:
  1500  0281  17F5               	bsf	___fltol@f1+2,7
  1501  0282                     l1480:
  1502  0282  30FF               	movlw	255
  1503  0283  05F3               	andwf	___fltol@f1,f
  1504  0284  30FF               	movlw	255
  1505  0285  05F4               	andwf	___fltol@f1+1,f
  1506  0286  30FF               	movlw	255
  1507  0287  05F5               	andwf	___fltol@f1+2,f
  1508  0288  3000               	movlw	0
  1509  0289  05F6               	andwf	___fltol@f1+3,f
  1510  028A                     l1482:
  1511  028A  3096               	movlw	150
  1512  028B  02F8               	subwf	___fltol@exp1,f
  1513  028C                     l1484:
  1514  028C  1FF8               	btfss	___fltol@exp1,7
  1515  028D  2A8F               	goto	u1141
  1516  028E  2A90               	goto	u1140
  1517  028F                     u1141:
  1518  028F  2AAA               	goto	l1494
  1519  0290                     u1140:
  1520  0290                     l1486:
  1521  0290  0878               	movf	___fltol@exp1,w
  1522  0291  3A80               	xorlw	128
  1523  0292  3E97               	addlw	151
  1524  0293  1803               	skipnc
  1525  0294  2A96               	goto	u1151
  1526  0295  2A97               	goto	u1150
  1527  0296                     u1151:
  1528  0296  2A98               	goto	l1492
  1529  0297                     u1150:
  1530  0297  2A63               	goto	l1472
  1531  0298                     l1492:
  1532  0298  3001               	movlw	1
  1533  0299                     u1165:
  1534  0299  1003               	clrc
  1535  029A  0CF6               	rrf	___fltol@f1+3,f
  1536  029B  0CF5               	rrf	___fltol@f1+2,f
  1537  029C  0CF4               	rrf	___fltol@f1+1,f
  1538  029D  0CF3               	rrf	___fltol@f1,f
  1539  029E  3EFF               	addlw	-1
  1540  029F  1D03               	skipz
  1541  02A0  2A99               	goto	u1165
  1542  02A1  3001               	movlw	1
  1543  02A2  00A0               	movwf	??___fltol
  1544  02A3  0820               	movf	??___fltol,w
  1545  02A4  07F8               	addwf	___fltol@exp1,f
  1546  02A5  1D03               	btfss	3,2
  1547  02A6  2AA8               	goto	u1171
  1548  02A7  2AA9               	goto	u1170
  1549  02A8                     u1171:
  1550  02A8  2A98               	goto	l1492
  1551  02A9                     u1170:
  1552  02A9  2AC1               	goto	l1502
  1553  02AA                     l1494:
  1554  02AA  3020               	movlw	32
  1555  02AB  0278               	subwf	___fltol@exp1,w
  1556  02AC  1C03               	skipc
  1557  02AD  2AAF               	goto	u1181
  1558  02AE  2AB0               	goto	u1180
  1559  02AF                     u1181:
  1560  02AF  2ABC               	goto	l473
  1561  02B0                     u1180:
  1562  02B0  2A63               	goto	l1472
  1563  02B1                     l1500:
  1564  02B1  3001               	movlw	1
  1565  02B2  00A0               	movwf	??___fltol
  1566  02B3                     u1195:
  1567  02B3  1003               	clrc
  1568  02B4  0DF3               	rlf	___fltol@f1,f
  1569  02B5  0DF4               	rlf	___fltol@f1+1,f
  1570  02B6  0DF5               	rlf	___fltol@f1+2,f
  1571  02B7  0DF6               	rlf	___fltol@f1+3,f
  1572  02B8  0BA0               	decfsz	??___fltol,f
  1573  02B9  2AB3               	goto	u1195
  1574  02BA  3001               	movlw	1
  1575  02BB  02F8               	subwf	___fltol@exp1,f
  1576  02BC                     l473:
  1577  02BC  0878               	movf	___fltol@exp1,w
  1578  02BD  1D03               	btfss	3,2
  1579  02BE  2AC0               	goto	u1201
  1580  02BF  2AC1               	goto	u1200
  1581  02C0                     u1201:
  1582  02C0  2AB1               	goto	l1500
  1583  02C1                     u1200:
  1584  02C1                     l1502:
  1585  02C1  0877               	movf	___fltol@sign1,w
  1586  02C2  1903               	btfsc	3,2
  1587  02C3  2AC5               	goto	u1211
  1588  02C4  2AC6               	goto	u1210
  1589  02C5                     u1211:
  1590  02C5  2AD1               	goto	l476
  1591  02C6                     u1210:
  1592  02C6                     l1504:
  1593  02C6  09F3               	comf	___fltol@f1,f
  1594  02C7  09F4               	comf	___fltol@f1+1,f
  1595  02C8  09F5               	comf	___fltol@f1+2,f
  1596  02C9  09F6               	comf	___fltol@f1+3,f
  1597  02CA  0AF3               	incf	___fltol@f1,f
  1598  02CB  1903               	skipnz
  1599  02CC  0AF4               	incf	___fltol@f1+1,f
  1600  02CD  1903               	skipnz
  1601  02CE  0AF5               	incf	___fltol@f1+2,f
  1602  02CF  1903               	skipnz
  1603  02D0  0AF6               	incf	___fltol@f1+3,f
  1604  02D1                     l476:
  1605  02D1                     l466:
  1606  02D1  0008               	return
  1607  02D2                     __end_of___fltol:
  1608                           
  1609                           	psect	text6
  1610  067B                     __ptext6:	
  1611 ;; *************** function _verifyMenu *****************
  1612 ;; Defined at:
  1613 ;;		line 282 in file "main.c"
  1614 ;; Parameters:    Size  Location     Type
  1615 ;;		None
  1616 ;; Auto vars:     Size  Location     Type
  1617 ;;		None
  1618 ;; Return value:  Size  Location     Type
  1619 ;;                  1    wreg      void 
  1620 ;; Registers used:
  1621 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1622 ;; Tracked objects:
  1623 ;;		On entry : 0/0
  1624 ;;		On exit  : 0/0
  1625 ;;		Unchanged: 0/0
  1626 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1627 ;;      Params:         0       0       0       0       0
  1628 ;;      Locals:         0       0       0       0       0
  1629 ;;      Temps:          0       3       0       0       0
  1630 ;;      Totals:         0       3       0       0       0
  1631 ;;Total ram usage:        3 bytes
  1632 ;; Hardware stack levels used: 1
  1633 ;; Hardware stack levels required when called: 8
  1634 ;; This function calls:
  1635 ;;		_handleMenu
  1636 ;; This function is called by:
  1637 ;;		_main
  1638 ;; This function uses a non-reentrant model
  1639 ;;
  1640                           
  1641  067B                     _verifyMenu:	
  1642                           ;psect for function _verifyMenu
  1643                           
  1644  067B                     l2084:	
  1645                           ;incstack = 0
  1646 ;; hardware stack exceeded
  1647                           ; Regs used in _verifyMenu: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1648                           
  1649                           
  1650                           ;main.c: 284:     if (!PORTBbits.RB2)
  1651  067B  1283               	bcf	3,5	;RP0=0, select bank0
  1652  067C  1303               	bcf	3,6	;RP1=0, select bank0
  1653  067D  1906               	btfsc	6,2	;volatile
  1654  067E  2E80               	goto	u1991
  1655  067F  2E81               	goto	u1990
  1656  0680                     u1991:
  1657  0680  2E99               	goto	l172
  1658  0681                     u1990:
  1659  0681                     l2086:
  1660                           
  1661                           ;main.c: 285:     {;main.c: 286:         setup_menu = 1;
  1662  0681  3001               	movlw	1
  1663  0682  00CE               	movwf	_setup_menu
  1664  0683  3000               	movlw	0
  1665  0684  00CF               	movwf	_setup_menu+1
  1666  0685                     l2088:
  1667                           
  1668                           ;main.c: 287:         PORTBbits.RB5 = 1;
  1669  0685  1686               	bsf	6,5	;volatile
  1670                           
  1671                           ;main.c: 288:         _delay((unsigned long)((500)*(4000000/4000.0)));
  1672  0686  3003               	movlw	3
  1673  0687  1283               	bcf	3,5	;RP0=0, select bank0
  1674  0688  1303               	bcf	3,6	;RP1=0, select bank0
  1675  0689  00BA               	movwf	??_verifyMenu+2
  1676  068A  308A               	movlw	138
  1677  068B  00B9               	movwf	??_verifyMenu+1
  1678  068C  3055               	movlw	85
  1679  068D  00B8               	movwf	??_verifyMenu
  1680  068E                     u2037:
  1681  068E  0BB8               	decfsz	??_verifyMenu,f
  1682  068F  2E8E               	goto	u2037
  1683  0690  0BB9               	decfsz	??_verifyMenu+1,f
  1684  0691  2E8E               	goto	u2037
  1685  0692  0BBA               	decfsz	??_verifyMenu+2,f
  1686  0693  2E8E               	goto	u2037
  1687  0694                     l2090:
  1688                           
  1689                           ;main.c: 289:         handleMenu();
  1690  0694  120A  118A  2029  120A  118A  	fcall	_handleMenu
  1691  0699                     l172:
  1692  0699  0008               	return
  1693  069A                     __end_of_verifyMenu:
  1694                           
  1695                           	psect	text7
  1696  0029                     __ptext7:	
  1697 ;; *************** function _handleMenu *****************
  1698 ;; Defined at:
  1699 ;;		line 218 in file "main.c"
  1700 ;; Parameters:    Size  Location     Type
  1701 ;;		None
  1702 ;; Auto vars:     Size  Location     Type
  1703 ;;  umidade         2   22[BANK0 ] int 
  1704 ;;  volume          2   20[BANK0 ] int 
  1705 ;; Return value:  Size  Location     Type
  1706 ;;                  1    wreg      void 
  1707 ;; Registers used:
  1708 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1709 ;; Tracked objects:
  1710 ;;		On entry : 0/0
  1711 ;;		On exit  : 0/0
  1712 ;;		Unchanged: 0/0
  1713 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1714 ;;      Params:         0       0       0       0       0
  1715 ;;      Locals:         0       4       0       0       0
  1716 ;;      Temps:          0       3       0       0       0
  1717 ;;      Totals:         0       7       0       0       0
  1718 ;;Total ram usage:        7 bytes
  1719 ;; Hardware stack levels used: 1
  1720 ;; Hardware stack levels required when called: 7
  1721 ;; This function calls:
  1722 ;;		_Lcd_Clear
  1723 ;;		_Lcd_Set_Cursor
  1724 ;;		_Lcd_Write_String
  1725 ;;		_setupNewVolumeFlow
  1726 ;;		_writeValor
  1727 ;; This function is called by:
  1728 ;;		_verifyMenu
  1729 ;; This function uses a non-reentrant model
  1730 ;;
  1731                           
  1732  0029                     _handleMenu:	
  1733                           ;psect for function _handleMenu
  1734                           
  1735  0029                     l1960:	
  1736                           ;incstack = 0
  1737 ;; hardware stack exceeded
  1738                           ; Regs used in _handleMenu: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1739                           
  1740                           
  1741                           ;main.c: 220:     int volume = water_volume;
  1742  0029  1283               	bcf	3,5	;RP0=0, select bank0
  1743  002A  1303               	bcf	3,6	;RP1=0, select bank0
  1744  002B  0847               	movf	_water_volume+1,w
  1745  002C  00B5               	movwf	handleMenu@volume+1
  1746  002D  0846               	movf	_water_volume,w
  1747  002E  00B4               	movwf	handleMenu@volume
  1748                           
  1749                           ;main.c: 221:     int umidade = umidade_minima;
  1750  002F  0849               	movf	_umidade_minima+1,w
  1751  0030  00B7               	movwf	handleMenu@umidade+1
  1752  0031  0848               	movf	_umidade_minima,w
  1753  0032  00B6               	movwf	handleMenu@umidade
  1754                           
  1755                           ;main.c: 223:     while(setup_menu == 1){
  1756  0033  28CB               	goto	l1998
  1757  0034                     l150:
  1758  0034  0064               	clrwdt	;# 
  1759  0035                     l1962:
  1760                           
  1761                           ;main.c: 225:         _delay((unsigned long)((100)*(4000000/4000.0)));
  1762  0035  3082               	movlw	130
  1763  0036  1283               	bcf	3,5	;RP0=0, select bank0
  1764  0037  1303               	bcf	3,6	;RP1=0, select bank0
  1765  0038  00B2               	movwf	??_handleMenu+1
  1766  0039  30DD               	movlw	221
  1767  003A  00B1               	movwf	??_handleMenu
  1768  003B                     u2047:
  1769  003B  0BB1               	decfsz	??_handleMenu,f
  1770  003C  283B               	goto	u2047
  1771  003D  0BB2               	decfsz	??_handleMenu+1,f
  1772  003E  283B               	goto	u2047
  1773  003F                     l1964:
  1774                           
  1775                           ;main.c: 226:         Lcd_Set_Cursor(1,1);
  1776  003F  01F7               	clrf	Lcd_Set_Cursor@b
  1777  0040  0AF7               	incf	Lcd_Set_Cursor@b,f
  1778  0041  3001               	movlw	1
  1779  0042  120A  118A  24BB  120A  118A  	fcall	_Lcd_Set_Cursor
  1780  0047                     l1966:
  1781                           
  1782                           ;main.c: 227:         Lcd_Write_String("NEW THRESHOLD:");
  1783  0047  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1784  0048  120A  118A  25C8  120A  118A  	fcall	_Lcd_Write_String
  1785  004D                     l1968:
  1786                           
  1787                           ;main.c: 228:         writeValor(umidade);
  1788  004D  1283               	bcf	3,5	;RP0=0, select bank0
  1789  004E  1303               	bcf	3,6	;RP1=0, select bank0
  1790  004F  0837               	movf	handleMenu@umidade+1,w
  1791  0050  00AC               	movwf	writeValor@valor+1
  1792  0051  0836               	movf	handleMenu@umidade,w
  1793  0052  00AB               	movwf	writeValor@valor
  1794  0053  120A  118A  22D2  120A  118A  	fcall	_writeValor
  1795  0058                     l1970:
  1796                           
  1797                           ;main.c: 229:         if(!PORTBbits.RB2){
  1798  0058  1283               	bcf	3,5	;RP0=0, select bank0
  1799  0059  1303               	bcf	3,6	;RP1=0, select bank0
  1800  005A  1906               	btfsc	6,2	;volatile
  1801  005B  285D               	goto	u1861
  1802  005C  285E               	goto	u1860
  1803  005D                     u1861:
  1804  005D  2874               	goto	l1974
  1805  005E                     u1860:
  1806  005E                     l1972:
  1807                           
  1808                           ;main.c: 230:             umidade_minima = umidade;
  1809  005E  0837               	movf	handleMenu@umidade+1,w
  1810  005F  00C9               	movwf	_umidade_minima+1
  1811  0060  0836               	movf	handleMenu@umidade,w
  1812  0061  00C8               	movwf	_umidade_minima
  1813                           
  1814                           ;main.c: 231:             setup_menu = 2;
  1815  0062  3002               	movlw	2
  1816  0063  00CE               	movwf	_setup_menu
  1817  0064  3000               	movlw	0
  1818  0065  00CF               	movwf	_setup_menu+1
  1819                           
  1820                           ;main.c: 232:             _delay((unsigned long)((500)*(4000000/4000.0)));
  1821  0066  3003               	movlw	3
  1822  0067  1283               	bcf	3,5	;RP0=0, select bank0
  1823  0068  1303               	bcf	3,6	;RP1=0, select bank0
  1824  0069  00B3               	movwf	??_handleMenu+2
  1825  006A  308A               	movlw	138
  1826  006B  00B2               	movwf	??_handleMenu+1
  1827  006C  3055               	movlw	85
  1828  006D  00B1               	movwf	??_handleMenu
  1829  006E                     u2057:
  1830  006E  0BB1               	decfsz	??_handleMenu,f
  1831  006F  286E               	goto	u2057
  1832  0070  0BB2               	decfsz	??_handleMenu+1,f
  1833  0071  286E               	goto	u2057
  1834  0072  0BB3               	decfsz	??_handleMenu+2,f
  1835  0073  286E               	goto	u2057
  1836  0074                     l1974:
  1837                           
  1838                           ;main.c: 234:         if(!PORTBbits.RB3){
  1839  0074  1283               	bcf	3,5	;RP0=0, select bank0
  1840  0075  1303               	bcf	3,6	;RP1=0, select bank0
  1841  0076  1986               	btfsc	6,3	;volatile
  1842  0077  2879               	goto	u1871
  1843  0078  287A               	goto	u1870
  1844  0079                     u1871:
  1845  0079  28A6               	goto	l1986
  1846  007A                     u1870:
  1847  007A                     l1976:
  1848                           
  1849                           ;main.c: 235:             umidade++;
  1850  007A  3001               	movlw	1
  1851  007B  07B6               	addwf	handleMenu@umidade,f
  1852  007C  1803               	skipnc
  1853  007D  0AB7               	incf	handleMenu@umidade+1,f
  1854  007E  3000               	movlw	0
  1855  007F  07B7               	addwf	handleMenu@umidade+1,f
  1856  0080                     l1978:
  1857                           
  1858                           ;main.c: 236:             if(umidade > 999) umidade = 0;
  1859  0080  0837               	movf	handleMenu@umidade+1,w
  1860  0081  3A80               	xorlw	128
  1861  0082  00FF               	movwf	btemp+1
  1862  0083  3083               	movlw	131
  1863  0084  027F               	subwf	btemp+1,w
  1864  0085  1D03               	skipz
  1865  0086  2889               	goto	u1885
  1866  0087  30E8               	movlw	232
  1867  0088  0236               	subwf	handleMenu@umidade,w
  1868  0089                     u1885:
  1869  0089  1C03               	skipc
  1870  008A  288C               	goto	u1881
  1871  008B  288D               	goto	u1880
  1872  008C                     u1881:
  1873  008C  2891               	goto	l1982
  1874  008D                     u1880:
  1875  008D                     l1980:
  1876  008D  1283               	bcf	3,5	;RP0=0, select bank0
  1877  008E  1303               	bcf	3,6	;RP1=0, select bank0
  1878  008F  01B6               	clrf	handleMenu@umidade
  1879  0090  01B7               	clrf	handleMenu@umidade+1
  1880  0091                     l1982:
  1881                           
  1882                           ;main.c: 237:             writeValor(umidade);
  1883  0091  1283               	bcf	3,5	;RP0=0, select bank0
  1884  0092  1303               	bcf	3,6	;RP1=0, select bank0
  1885  0093  0837               	movf	handleMenu@umidade+1,w
  1886  0094  00AC               	movwf	writeValor@valor+1
  1887  0095  0836               	movf	handleMenu@umidade,w
  1888  0096  00AB               	movwf	writeValor@valor
  1889  0097  120A  118A  22D2  120A  118A  	fcall	_writeValor
  1890  009C                     l1984:
  1891                           
  1892                           ;main.c: 238:             _delay((unsigned long)((100)*(4000000/4000.0)));
  1893  009C  3082               	movlw	130
  1894  009D  1283               	bcf	3,5	;RP0=0, select bank0
  1895  009E  1303               	bcf	3,6	;RP1=0, select bank0
  1896  009F  00B2               	movwf	??_handleMenu+1
  1897  00A0  30DD               	movlw	221
  1898  00A1  00B1               	movwf	??_handleMenu
  1899  00A2                     u2067:
  1900  00A2  0BB1               	decfsz	??_handleMenu,f
  1901  00A3  28A2               	goto	u2067
  1902  00A4  0BB2               	decfsz	??_handleMenu+1,f
  1903  00A5  28A2               	goto	u2067
  1904  00A6                     l1986:
  1905                           
  1906                           ;main.c: 240:         if(!PORTBbits.RB4){
  1907  00A6  1283               	bcf	3,5	;RP0=0, select bank0
  1908  00A7  1303               	bcf	3,6	;RP1=0, select bank0
  1909  00A8  1A06               	btfsc	6,4	;volatile
  1910  00A9  28AB               	goto	u1891
  1911  00AA  28AC               	goto	u1890
  1912  00AB                     u1891:
  1913  00AB  28CB               	goto	l1998
  1914  00AC                     u1890:
  1915  00AC                     l1988:
  1916                           
  1917                           ;main.c: 241:             umidade--;
  1918  00AC  30FF               	movlw	255
  1919  00AD  07B6               	addwf	handleMenu@umidade,f
  1920  00AE  1803               	skipnc
  1921  00AF  0AB7               	incf	handleMenu@umidade+1,f
  1922  00B0  30FF               	movlw	255
  1923  00B1  07B7               	addwf	handleMenu@umidade+1,f
  1924  00B2                     l1990:
  1925                           
  1926                           ;main.c: 242:             if(umidade < 0) umidade = 0;
  1927  00B2  1FB7               	btfss	handleMenu@umidade+1,7
  1928  00B3  28B5               	goto	u1901
  1929  00B4  28B6               	goto	u1900
  1930  00B5                     u1901:
  1931  00B5  28B8               	goto	l1994
  1932  00B6                     u1900:
  1933  00B6                     l1992:
  1934  00B6  01B6               	clrf	handleMenu@umidade
  1935  00B7  01B7               	clrf	handleMenu@umidade+1
  1936  00B8                     l1994:
  1937                           
  1938                           ;main.c: 243:             writeValor(umidade);
  1939  00B8  0837               	movf	handleMenu@umidade+1,w
  1940  00B9  00AC               	movwf	writeValor@valor+1
  1941  00BA  0836               	movf	handleMenu@umidade,w
  1942  00BB  00AB               	movwf	writeValor@valor
  1943  00BC  120A  118A  22D2  120A  118A  	fcall	_writeValor
  1944  00C1                     l1996:
  1945                           
  1946                           ;main.c: 244:             _delay((unsigned long)((100)*(4000000/4000.0)));
  1947  00C1  3082               	movlw	130
  1948  00C2  1283               	bcf	3,5	;RP0=0, select bank0
  1949  00C3  1303               	bcf	3,6	;RP1=0, select bank0
  1950  00C4  00B2               	movwf	??_handleMenu+1
  1951  00C5  30DD               	movlw	221
  1952  00C6  00B1               	movwf	??_handleMenu
  1953  00C7                     u2077:
  1954  00C7  0BB1               	decfsz	??_handleMenu,f
  1955  00C8  28C7               	goto	u2077
  1956  00C9  0BB2               	decfsz	??_handleMenu+1,f
  1957  00CA  28C7               	goto	u2077
  1958  00CB                     l1998:
  1959                           
  1960                           ;main.c: 223:     while(setup_menu == 1){
  1961  00CB  1283               	bcf	3,5	;RP0=0, select bank0
  1962  00CC  1303               	bcf	3,6	;RP1=0, select bank0
  1963  00CD  034E               	decf	_setup_menu,w
  1964  00CE  044F               	iorwf	_setup_menu+1,w
  1965  00CF  1903               	btfsc	3,2
  1966  00D0  28D2               	goto	u1911
  1967  00D1  28D3               	goto	u1910
  1968  00D2                     u1911:
  1969  00D2  2834               	goto	l150
  1970  00D3                     u1910:
  1971  00D3                     l2000:
  1972                           
  1973                           ;main.c: 247:     Lcd_Clear();
  1974  00D3  120A  118A  2754  120A  118A  	fcall	_Lcd_Clear
  1975                           
  1976                           ;main.c: 248:     while(setup_menu == 2){
  1977  00D8  2977               	goto	l2044
  1978  00D9                     l158:
  1979  00D9  0064               	clrwdt	;# 
  1980  00DA                     l2002:
  1981                           
  1982                           ;main.c: 250:         _delay((unsigned long)((100)*(4000000/4000.0)));
  1983  00DA  3082               	movlw	130
  1984  00DB  1283               	bcf	3,5	;RP0=0, select bank0
  1985  00DC  1303               	bcf	3,6	;RP1=0, select bank0
  1986  00DD  00B2               	movwf	??_handleMenu+1
  1987  00DE  30DD               	movlw	221
  1988  00DF  00B1               	movwf	??_handleMenu
  1989  00E0                     u2087:
  1990  00E0  0BB1               	decfsz	??_handleMenu,f
  1991  00E1  28E0               	goto	u2087
  1992  00E2  0BB2               	decfsz	??_handleMenu+1,f
  1993  00E3  28E0               	goto	u2087
  1994  00E4                     l2004:
  1995                           
  1996                           ;main.c: 251:         Lcd_Set_Cursor(1,1);
  1997  00E4  01F7               	clrf	Lcd_Set_Cursor@b
  1998  00E5  0AF7               	incf	Lcd_Set_Cursor@b,f
  1999  00E6  3001               	movlw	1
  2000  00E7  120A  118A  24BB  120A  118A  	fcall	_Lcd_Set_Cursor
  2001  00EC                     l2006:
  2002                           
  2003                           ;main.c: 252:         Lcd_Write_String("NEW VOLUME:");
  2004  00EC  3010               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  2005  00ED  120A  118A  25C8  120A  118A  	fcall	_Lcd_Write_String
  2006  00F2                     l2008:
  2007                           
  2008                           ;main.c: 253:         writeValor(volume);
  2009  00F2  1283               	bcf	3,5	;RP0=0, select bank0
  2010  00F3  1303               	bcf	3,6	;RP1=0, select bank0
  2011  00F4  0835               	movf	handleMenu@volume+1,w
  2012  00F5  00AC               	movwf	writeValor@valor+1
  2013  00F6  0834               	movf	handleMenu@volume,w
  2014  00F7  00AB               	movwf	writeValor@valor
  2015  00F8  120A  118A  22D2  120A  118A  	fcall	_writeValor
  2016  00FD                     l2010:
  2017                           
  2018                           ;main.c: 254:         if(!PORTBbits.RB2){
  2019  00FD  1283               	bcf	3,5	;RP0=0, select bank0
  2020  00FE  1303               	bcf	3,6	;RP1=0, select bank0
  2021  00FF  1906               	btfsc	6,2	;volatile
  2022  0100  2902               	goto	u1921
  2023  0101  2903               	goto	u1920
  2024  0102                     u1921:
  2025  0102  2920               	goto	l2020
  2026  0103                     u1920:
  2027  0103                     l2012:
  2028                           
  2029                           ;main.c: 255:             water_volume = volume;
  2030  0103  0835               	movf	handleMenu@volume+1,w
  2031  0104  00C7               	movwf	_water_volume+1
  2032  0105  0834               	movf	handleMenu@volume,w
  2033  0106  00C6               	movwf	_water_volume
  2034  0107                     l2014:
  2035                           
  2036                           ;main.c: 256:             setupNewVolumeFlow();
  2037  0107  120A  118A  269A  120A  118A  	fcall	_setupNewVolumeFlow
  2038  010C                     l2016:
  2039                           
  2040                           ;main.c: 257:             setup_menu = 3;
  2041  010C  3003               	movlw	3
  2042  010D  1283               	bcf	3,5	;RP0=0, select bank0
  2043  010E  1303               	bcf	3,6	;RP1=0, select bank0
  2044  010F  00CE               	movwf	_setup_menu
  2045  0110  3000               	movlw	0
  2046  0111  00CF               	movwf	_setup_menu+1
  2047  0112                     l2018:
  2048                           
  2049                           ;main.c: 258:             _delay((unsigned long)((500)*(4000000/4000.0)));
  2050  0112  3003               	movlw	3
  2051  0113  1283               	bcf	3,5	;RP0=0, select bank0
  2052  0114  1303               	bcf	3,6	;RP1=0, select bank0
  2053  0115  00B3               	movwf	??_handleMenu+2
  2054  0116  308A               	movlw	138
  2055  0117  00B2               	movwf	??_handleMenu+1
  2056  0118  3055               	movlw	85
  2057  0119  00B1               	movwf	??_handleMenu
  2058  011A                     u2097:
  2059  011A  0BB1               	decfsz	??_handleMenu,f
  2060  011B  291A               	goto	u2097
  2061  011C  0BB2               	decfsz	??_handleMenu+1,f
  2062  011D  291A               	goto	u2097
  2063  011E  0BB3               	decfsz	??_handleMenu+2,f
  2064  011F  291A               	goto	u2097
  2065  0120                     l2020:
  2066                           
  2067                           ;main.c: 260:         if(!PORTBbits.RB3){
  2068  0120  1283               	bcf	3,5	;RP0=0, select bank0
  2069  0121  1303               	bcf	3,6	;RP1=0, select bank0
  2070  0122  1986               	btfsc	6,3	;volatile
  2071  0123  2925               	goto	u1931
  2072  0124  2926               	goto	u1930
  2073  0125                     u1931:
  2074  0125  2952               	goto	l2032
  2075  0126                     u1930:
  2076  0126                     l2022:
  2077                           
  2078                           ;main.c: 261:             volume++;
  2079  0126  3001               	movlw	1
  2080  0127  07B4               	addwf	handleMenu@volume,f
  2081  0128  1803               	skipnc
  2082  0129  0AB5               	incf	handleMenu@volume+1,f
  2083  012A  3000               	movlw	0
  2084  012B  07B5               	addwf	handleMenu@volume+1,f
  2085  012C                     l2024:
  2086                           
  2087                           ;main.c: 262:             if(volume > 999) volume = 0;
  2088  012C  0835               	movf	handleMenu@volume+1,w
  2089  012D  3A80               	xorlw	128
  2090  012E  00FF               	movwf	btemp+1
  2091  012F  3083               	movlw	131
  2092  0130  027F               	subwf	btemp+1,w
  2093  0131  1D03               	skipz
  2094  0132  2935               	goto	u1945
  2095  0133  30E8               	movlw	232
  2096  0134  0234               	subwf	handleMenu@volume,w
  2097  0135                     u1945:
  2098  0135  1C03               	skipc
  2099  0136  2938               	goto	u1941
  2100  0137  2939               	goto	u1940
  2101  0138                     u1941:
  2102  0138  293D               	goto	l2028
  2103  0139                     u1940:
  2104  0139                     l2026:
  2105  0139  1283               	bcf	3,5	;RP0=0, select bank0
  2106  013A  1303               	bcf	3,6	;RP1=0, select bank0
  2107  013B  01B4               	clrf	handleMenu@volume
  2108  013C  01B5               	clrf	handleMenu@volume+1
  2109  013D                     l2028:
  2110                           
  2111                           ;main.c: 263:             writeValor(volume);
  2112  013D  1283               	bcf	3,5	;RP0=0, select bank0
  2113  013E  1303               	bcf	3,6	;RP1=0, select bank0
  2114  013F  0835               	movf	handleMenu@volume+1,w
  2115  0140  00AC               	movwf	writeValor@valor+1
  2116  0141  0834               	movf	handleMenu@volume,w
  2117  0142  00AB               	movwf	writeValor@valor
  2118  0143  120A  118A  22D2  120A  118A  	fcall	_writeValor
  2119  0148                     l2030:
  2120                           
  2121                           ;main.c: 264:             _delay((unsigned long)((100)*(4000000/4000.0)));
  2122  0148  3082               	movlw	130
  2123  0149  1283               	bcf	3,5	;RP0=0, select bank0
  2124  014A  1303               	bcf	3,6	;RP1=0, select bank0
  2125  014B  00B2               	movwf	??_handleMenu+1
  2126  014C  30DD               	movlw	221
  2127  014D  00B1               	movwf	??_handleMenu
  2128  014E                     u2107:
  2129  014E  0BB1               	decfsz	??_handleMenu,f
  2130  014F  294E               	goto	u2107
  2131  0150  0BB2               	decfsz	??_handleMenu+1,f
  2132  0151  294E               	goto	u2107
  2133  0152                     l2032:
  2134                           
  2135                           ;main.c: 266:         if(!PORTBbits.RB4){
  2136  0152  1283               	bcf	3,5	;RP0=0, select bank0
  2137  0153  1303               	bcf	3,6	;RP1=0, select bank0
  2138  0154  1A06               	btfsc	6,4	;volatile
  2139  0155  2957               	goto	u1951
  2140  0156  2958               	goto	u1950
  2141  0157                     u1951:
  2142  0157  2977               	goto	l2044
  2143  0158                     u1950:
  2144  0158                     l2034:
  2145                           
  2146                           ;main.c: 267:             volume--;
  2147  0158  30FF               	movlw	255
  2148  0159  07B4               	addwf	handleMenu@volume,f
  2149  015A  1803               	skipnc
  2150  015B  0AB5               	incf	handleMenu@volume+1,f
  2151  015C  30FF               	movlw	255
  2152  015D  07B5               	addwf	handleMenu@volume+1,f
  2153  015E                     l2036:
  2154                           
  2155                           ;main.c: 268:             if(volume < 0) volume = 0;
  2156  015E  1FB5               	btfss	handleMenu@volume+1,7
  2157  015F  2961               	goto	u1961
  2158  0160  2962               	goto	u1960
  2159  0161                     u1961:
  2160  0161  2964               	goto	l2040
  2161  0162                     u1960:
  2162  0162                     l2038:
  2163  0162  01B4               	clrf	handleMenu@volume
  2164  0163  01B5               	clrf	handleMenu@volume+1
  2165  0164                     l2040:
  2166                           
  2167                           ;main.c: 269:             writeValor(volume);
  2168  0164  0835               	movf	handleMenu@volume+1,w
  2169  0165  00AC               	movwf	writeValor@valor+1
  2170  0166  0834               	movf	handleMenu@volume,w
  2171  0167  00AB               	movwf	writeValor@valor
  2172  0168  120A  118A  22D2  120A  118A  	fcall	_writeValor
  2173  016D                     l2042:
  2174                           
  2175                           ;main.c: 270:             _delay((unsigned long)((100)*(4000000/4000.0)));
  2176  016D  3082               	movlw	130
  2177  016E  1283               	bcf	3,5	;RP0=0, select bank0
  2178  016F  1303               	bcf	3,6	;RP1=0, select bank0
  2179  0170  00B2               	movwf	??_handleMenu+1
  2180  0171  30DD               	movlw	221
  2181  0172  00B1               	movwf	??_handleMenu
  2182  0173                     u2117:
  2183  0173  0BB1               	decfsz	??_handleMenu,f
  2184  0174  2973               	goto	u2117
  2185  0175  0BB2               	decfsz	??_handleMenu+1,f
  2186  0176  2973               	goto	u2117
  2187  0177                     l2044:
  2188                           
  2189                           ;main.c: 248:     while(setup_menu == 2){
  2190  0177  3002               	movlw	2
  2191  0178  1283               	bcf	3,5	;RP0=0, select bank0
  2192  0179  1303               	bcf	3,6	;RP1=0, select bank0
  2193  017A  064E               	xorwf	_setup_menu,w
  2194  017B  044F               	iorwf	_setup_menu+1,w
  2195  017C  1903               	btfsc	3,2
  2196  017D  297F               	goto	u1971
  2197  017E  2980               	goto	u1970
  2198  017F                     u1971:
  2199  017F  28D9               	goto	l158
  2200  0180                     u1970:
  2201  0180                     l2046:
  2202                           
  2203                           ;main.c: 273:     Lcd_Clear();
  2204  0180  120A  118A  2754  120A  118A  	fcall	_Lcd_Clear
  2205                           
  2206                           ;main.c: 274:     while(setup_menu == 3){
  2207  0185  298B               	goto	l2048
  2208  0186                     l166:
  2209  0186  0064               	clrwdt	;# 
  2210                           
  2211                           ;main.c: 276:         PORTBbits.RB5 = 0;
  2212  0187  1283               	bcf	3,5	;RP0=0, select bank0
  2213  0188  1303               	bcf	3,6	;RP1=0, select bank0
  2214  0189  1286               	bcf	6,5	;volatile
  2215                           
  2216                           ;main.c: 277:         break;
  2217  018A  2994               	goto	l2050
  2218  018B                     l2048:
  2219                           
  2220                           ;main.c: 274:     while(setup_menu == 3){
  2221  018B  3003               	movlw	3
  2222  018C  1283               	bcf	3,5	;RP0=0, select bank0
  2223  018D  1303               	bcf	3,6	;RP1=0, select bank0
  2224  018E  064E               	xorwf	_setup_menu,w
  2225  018F  044F               	iorwf	_setup_menu+1,w
  2226  0190  1903               	btfsc	3,2
  2227  0191  2993               	goto	u1981
  2228  0192  2994               	goto	u1980
  2229  0193                     u1981:
  2230  0193  2986               	goto	l166
  2231  0194                     u1980:
  2232  0194                     l2050:
  2233                           
  2234                           ;main.c: 279:     Lcd_Clear();
  2235  0194  120A  118A  2754  120A  118A  	fcall	_Lcd_Clear
  2236  0199                     l168:
  2237  0199  0008               	return
  2238  019A                     __end_of_handleMenu:
  2239                           
  2240                           	psect	text8
  2241  02D2                     __ptext8:	
  2242 ;; *************** function _writeValor *****************
  2243 ;; Defined at:
  2244 ;;		line 206 in file "main.c"
  2245 ;; Parameters:    Size  Location     Type
  2246 ;;  valor           2   11[BANK0 ] int 
  2247 ;; Auto vars:     Size  Location     Type
  2248 ;;  unidade         1   16[BANK0 ] unsigned char 
  2249 ;;  dezena          1   15[BANK0 ] unsigned char 
  2250 ;;  centena         1   14[BANK0 ] unsigned char 
  2251 ;; Return value:  Size  Location     Type
  2252 ;;                  1    wreg      void 
  2253 ;; Registers used:
  2254 ;;		wreg, status,2, status,0, pclath, cstack
  2255 ;; Tracked objects:
  2256 ;;		On entry : 0/0
  2257 ;;		On exit  : 0/0
  2258 ;;		Unchanged: 0/0
  2259 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2260 ;;      Params:         0       2       0       0       0
  2261 ;;      Locals:         0       3       0       0       0
  2262 ;;      Temps:          0       1       0       0       0
  2263 ;;      Totals:         0       6       0       0       0
  2264 ;;Total ram usage:        6 bytes
  2265 ;; Hardware stack levels used: 1
  2266 ;; Hardware stack levels required when called: 6
  2267 ;; This function calls:
  2268 ;;		_Lcd_Set_Cursor
  2269 ;;		_Lcd_Write_Char
  2270 ;;		___awdiv
  2271 ;;		___awmod
  2272 ;; This function is called by:
  2273 ;;		_handleMenu
  2274 ;; This function uses a non-reentrant model
  2275 ;;
  2276                           
  2277  02D2                     _writeValor:	
  2278                           ;psect for function _writeValor
  2279                           
  2280  02D2                     l1956:	
  2281                           ;incstack = 0
  2282 ;; hardware stack exceeded
  2283                           ; Regs used in _writeValor: [wreg+status,2+status,0+pclath+cstack]
  2284                           
  2285                           
  2286                           ;main.c: 206: void writeValor(int valor);main.c: 207: {;main.c: 208:     char centena = 
      +                          valor/100 + 48;
  2287  02D2  3064               	movlw	100
  2288  02D3  1283               	bcf	3,5	;RP0=0, select bank0
  2289  02D4  1303               	bcf	3,6	;RP1=0, select bank0
  2290  02D5  00A2               	movwf	___awdiv@divisor
  2291  02D6  3000               	movlw	0
  2292  02D7  00A3               	movwf	___awdiv@divisor+1
  2293  02D8  082C               	movf	writeValor@valor+1,w
  2294  02D9  00A5               	movwf	___awdiv@dividend+1
  2295  02DA  082B               	movf	writeValor@valor,w
  2296  02DB  00A4               	movwf	___awdiv@dividend
  2297  02DC  120A  118A  2340  120A  118A  	fcall	___awdiv
  2298  02E1  1283               	bcf	3,5	;RP0=0, select bank0
  2299  02E2  1303               	bcf	3,6	;RP1=0, select bank0
  2300  02E3  0822               	movf	?___awdiv,w
  2301  02E4  3E30               	addlw	48
  2302  02E5  00AD               	movwf	??_writeValor
  2303  02E6  082D               	movf	??_writeValor,w
  2304  02E7  00AE               	movwf	writeValor@centena
  2305                           
  2306                           ;main.c: 209:     char dezena = (valor%100)/10 + 48;
  2307  02E8  300A               	movlw	10
  2308  02E9  00A2               	movwf	___awdiv@divisor
  2309  02EA  3000               	movlw	0
  2310  02EB  00A3               	movwf	___awdiv@divisor+1
  2311  02EC  082C               	movf	writeValor@valor+1,w
  2312  02ED  00F6               	movwf	___awmod@dividend+1
  2313  02EE  082B               	movf	writeValor@valor,w
  2314  02EF  00F5               	movwf	___awmod@dividend
  2315  02F0  3064               	movlw	100
  2316  02F1  00F3               	movwf	___awmod@divisor
  2317  02F2  3000               	movlw	0
  2318  02F3  00F4               	movwf	___awmod@divisor+1
  2319  02F4  120A  118A  2406  120A  118A  	fcall	___awmod
  2320  02F9  0874               	movf	?___awmod+1,w
  2321  02FA  1283               	bcf	3,5	;RP0=0, select bank0
  2322  02FB  1303               	bcf	3,6	;RP1=0, select bank0
  2323  02FC  00A5               	movwf	___awdiv@dividend+1
  2324  02FD  0873               	movf	?___awmod,w
  2325  02FE  00A4               	movwf	___awdiv@dividend
  2326  02FF  120A  118A  2340  120A  118A  	fcall	___awdiv
  2327  0304  1283               	bcf	3,5	;RP0=0, select bank0
  2328  0305  1303               	bcf	3,6	;RP1=0, select bank0
  2329  0306  0822               	movf	?___awdiv,w
  2330  0307  3E30               	addlw	48
  2331  0308  00AD               	movwf	??_writeValor
  2332  0309  082D               	movf	??_writeValor,w
  2333  030A  00AF               	movwf	writeValor@dezena
  2334                           
  2335                           ;main.c: 210:     char unidade = valor%10 + 48;
  2336  030B  300A               	movlw	10
  2337  030C  00F3               	movwf	___awmod@divisor
  2338  030D  3000               	movlw	0
  2339  030E  00F4               	movwf	___awmod@divisor+1
  2340  030F  082C               	movf	writeValor@valor+1,w
  2341  0310  00F6               	movwf	___awmod@dividend+1
  2342  0311  082B               	movf	writeValor@valor,w
  2343  0312  00F5               	movwf	___awmod@dividend
  2344  0313  120A  118A  2406  120A  118A  	fcall	___awmod
  2345  0318  0873               	movf	?___awmod,w
  2346  0319  3E30               	addlw	48
  2347  031A  1283               	bcf	3,5	;RP0=0, select bank0
  2348  031B  1303               	bcf	3,6	;RP1=0, select bank0
  2349  031C  00AD               	movwf	??_writeValor
  2350  031D  082D               	movf	??_writeValor,w
  2351  031E  00B0               	movwf	writeValor@unidade
  2352                           
  2353                           ;main.c: 211:     Lcd_Set_Cursor(2,1);
  2354  031F  01F7               	clrf	Lcd_Set_Cursor@b
  2355  0320  0AF7               	incf	Lcd_Set_Cursor@b,f
  2356  0321  3002               	movlw	2
  2357  0322  120A  118A  24BB  120A  118A  	fcall	_Lcd_Set_Cursor
  2358                           
  2359                           ;main.c: 212:     Lcd_Write_Char(centena);
  2360  0327  1283               	bcf	3,5	;RP0=0, select bank0
  2361  0328  1303               	bcf	3,6	;RP1=0, select bank0
  2362  0329  082E               	movf	writeValor@centena,w
  2363  032A  120A  118A  255C  120A  118A  	fcall	_Lcd_Write_Char
  2364                           
  2365                           ;main.c: 213:     Lcd_Write_Char(dezena);
  2366  032F  1283               	bcf	3,5	;RP0=0, select bank0
  2367  0330  1303               	bcf	3,6	;RP1=0, select bank0
  2368  0331  082F               	movf	writeValor@dezena,w
  2369  0332  120A  118A  255C  120A  118A  	fcall	_Lcd_Write_Char
  2370                           
  2371                           ;main.c: 214:     Lcd_Write_Char(unidade);
  2372  0337  1283               	bcf	3,5	;RP0=0, select bank0
  2373  0338  1303               	bcf	3,6	;RP1=0, select bank0
  2374  0339  0830               	movf	writeValor@unidade,w
  2375  033A  120A  118A  255C  120A  118A  	fcall	_Lcd_Write_Char
  2376  033F                     l146:
  2377  033F  0008               	return
  2378  0340                     __end_of_writeValor:
  2379                           
  2380                           	psect	text9
  2381  0406                     __ptext9:	
  2382 ;; *************** function ___awmod *****************
  2383 ;; Defined at:
  2384 ;;		line 5 in file "D:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\awmod.c"
  2385 ;; Parameters:    Size  Location     Type
  2386 ;;  divisor         2    3[COMMON] int 
  2387 ;;  dividend        2    5[COMMON] int 
  2388 ;; Auto vars:     Size  Location     Type
  2389 ;;  sign            1    1[BANK0 ] unsigned char 
  2390 ;;  counter         1    0[BANK0 ] unsigned char 
  2391 ;; Return value:  Size  Location     Type
  2392 ;;                  2    3[COMMON] int 
  2393 ;; Registers used:
  2394 ;;		wreg, status,2, status,0
  2395 ;; Tracked objects:
  2396 ;;		On entry : 0/0
  2397 ;;		On exit  : 0/0
  2398 ;;		Unchanged: 0/0
  2399 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2400 ;;      Params:         4       0       0       0       0
  2401 ;;      Locals:         0       2       0       0       0
  2402 ;;      Temps:          1       0       0       0       0
  2403 ;;      Totals:         5       2       0       0       0
  2404 ;;Total ram usage:        7 bytes
  2405 ;; Hardware stack levels used: 1
  2406 ;; Hardware stack levels required when called: 3
  2407 ;; This function calls:
  2408 ;;		Nothing
  2409 ;; This function is called by:
  2410 ;;		_writeValor
  2411 ;; This function uses a non-reentrant model
  2412 ;;
  2413                           
  2414  0406                     ___awmod:	
  2415                           ;psect for function ___awmod
  2416                           
  2417  0406                     l1904:	
  2418                           ;incstack = 0
  2419                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2420                           
  2421  0406  1283               	bcf	3,5	;RP0=0, select bank0
  2422  0407  1303               	bcf	3,6	;RP1=0, select bank0
  2423  0408  01A1               	clrf	___awmod@sign
  2424  0409                     l1906:
  2425  0409  1FF6               	btfss	___awmod@dividend+1,7
  2426  040A  2C0C               	goto	u1761
  2427  040B  2C0D               	goto	u1760
  2428  040C                     u1761:
  2429  040C  2C14               	goto	l1912
  2430  040D                     u1760:
  2431  040D                     l1908:
  2432  040D  09F5               	comf	___awmod@dividend,f
  2433  040E  09F6               	comf	___awmod@dividend+1,f
  2434  040F  0AF5               	incf	___awmod@dividend,f
  2435  0410  1903               	skipnz
  2436  0411  0AF6               	incf	___awmod@dividend+1,f
  2437  0412                     l1910:
  2438  0412  01A1               	clrf	___awmod@sign
  2439  0413  0AA1               	incf	___awmod@sign,f
  2440  0414                     l1912:
  2441  0414  1FF4               	btfss	___awmod@divisor+1,7
  2442  0415  2C17               	goto	u1771
  2443  0416  2C18               	goto	u1770
  2444  0417                     u1771:
  2445  0417  2C1D               	goto	l1916
  2446  0418                     u1770:
  2447  0418                     l1914:
  2448  0418  09F3               	comf	___awmod@divisor,f
  2449  0419  09F4               	comf	___awmod@divisor+1,f
  2450  041A  0AF3               	incf	___awmod@divisor,f
  2451  041B  1903               	skipnz
  2452  041C  0AF4               	incf	___awmod@divisor+1,f
  2453  041D                     l1916:
  2454  041D  0873               	movf	___awmod@divisor,w
  2455  041E  0474               	iorwf	___awmod@divisor+1,w
  2456  041F  1903               	btfsc	3,2
  2457  0420  2C22               	goto	u1781
  2458  0421  2C23               	goto	u1780
  2459  0422                     u1781:
  2460  0422  2C52               	goto	l1934
  2461  0423                     u1780:
  2462  0423                     l1918:
  2463  0423  01A0               	clrf	___awmod@counter
  2464  0424  0AA0               	incf	___awmod@counter,f
  2465  0425  2C31               	goto	l1924
  2466  0426                     l1920:
  2467  0426  3001               	movlw	1
  2468  0427                     u1795:
  2469  0427  1003               	clrc
  2470  0428  0DF3               	rlf	___awmod@divisor,f
  2471  0429  0DF4               	rlf	___awmod@divisor+1,f
  2472  042A  3EFF               	addlw	-1
  2473  042B  1D03               	skipz
  2474  042C  2C27               	goto	u1795
  2475  042D                     l1922:
  2476  042D  3001               	movlw	1
  2477  042E  00F7               	movwf	??___awmod
  2478  042F  0877               	movf	??___awmod,w
  2479  0430  07A0               	addwf	___awmod@counter,f
  2480  0431                     l1924:
  2481  0431  1FF4               	btfss	___awmod@divisor+1,7
  2482  0432  2C34               	goto	u1801
  2483  0433  2C35               	goto	u1800
  2484  0434                     u1801:
  2485  0434  2C26               	goto	l1920
  2486  0435                     u1800:
  2487  0435                     l1926:
  2488  0435  0874               	movf	___awmod@divisor+1,w
  2489  0436  0276               	subwf	___awmod@dividend+1,w
  2490  0437  1D03               	skipz
  2491  0438  2C3B               	goto	u1815
  2492  0439  0873               	movf	___awmod@divisor,w
  2493  043A  0275               	subwf	___awmod@dividend,w
  2494  043B                     u1815:
  2495  043B  1C03               	skipc
  2496  043C  2C3E               	goto	u1811
  2497  043D  2C3F               	goto	u1810
  2498  043E                     u1811:
  2499  043E  2C45               	goto	l1930
  2500  043F                     u1810:
  2501  043F                     l1928:
  2502  043F  0873               	movf	___awmod@divisor,w
  2503  0440  02F5               	subwf	___awmod@dividend,f
  2504  0441  0874               	movf	___awmod@divisor+1,w
  2505  0442  1C03               	skipc
  2506  0443  03F6               	decf	___awmod@dividend+1,f
  2507  0444  02F6               	subwf	___awmod@dividend+1,f
  2508  0445                     l1930:
  2509  0445  3001               	movlw	1
  2510  0446                     u1825:
  2511  0446  1003               	clrc
  2512  0447  0CF4               	rrf	___awmod@divisor+1,f
  2513  0448  0CF3               	rrf	___awmod@divisor,f
  2514  0449  3EFF               	addlw	-1
  2515  044A  1D03               	skipz
  2516  044B  2C46               	goto	u1825
  2517  044C                     l1932:
  2518  044C  3001               	movlw	1
  2519  044D  02A0               	subwf	___awmod@counter,f
  2520  044E  1D03               	btfss	3,2
  2521  044F  2C51               	goto	u1831
  2522  0450  2C52               	goto	u1830
  2523  0451                     u1831:
  2524  0451  2C35               	goto	l1926
  2525  0452                     u1830:
  2526  0452                     l1934:
  2527  0452  0821               	movf	___awmod@sign,w
  2528  0453  1903               	btfsc	3,2
  2529  0454  2C56               	goto	u1841
  2530  0455  2C57               	goto	u1840
  2531  0456                     u1841:
  2532  0456  2C5C               	goto	l1938
  2533  0457                     u1840:
  2534  0457                     l1936:
  2535  0457  09F5               	comf	___awmod@dividend,f
  2536  0458  09F6               	comf	___awmod@dividend+1,f
  2537  0459  0AF5               	incf	___awmod@dividend,f
  2538  045A  1903               	skipnz
  2539  045B  0AF6               	incf	___awmod@dividend+1,f
  2540  045C                     l1938:
  2541  045C  0876               	movf	___awmod@dividend+1,w
  2542  045D  00F4               	movwf	?___awmod+1
  2543  045E  0875               	movf	___awmod@dividend,w
  2544  045F  00F3               	movwf	?___awmod
  2545  0460                     l446:
  2546  0460  0008               	return
  2547  0461                     __end_of___awmod:
  2548                           
  2549                           	psect	text10
  2550  04BB                     __ptext10:	
  2551 ;; *************** function _Lcd_Set_Cursor *****************
  2552 ;; Defined at:
  2553 ;;		line 41 in file "./lcd.h"
  2554 ;; Parameters:    Size  Location     Type
  2555 ;;  a               1    wreg     unsigned char 
  2556 ;;  b               1    7[COMMON] unsigned char 
  2557 ;; Auto vars:     Size  Location     Type
  2558 ;;  a               1    2[BANK0 ] unsigned char 
  2559 ;;  temp            1    5[BANK0 ] unsigned char 
  2560 ;;  y               1    4[BANK0 ] unsigned char 
  2561 ;;  z               1    3[BANK0 ] unsigned char 
  2562 ;; Return value:  Size  Location     Type
  2563 ;;                  1    wreg      void 
  2564 ;; Registers used:
  2565 ;;		wreg, status,2, status,0, pclath, cstack
  2566 ;; Tracked objects:
  2567 ;;		On entry : 0/0
  2568 ;;		On exit  : 0/0
  2569 ;;		Unchanged: 0/0
  2570 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2571 ;;      Params:         1       0       0       0       0
  2572 ;;      Locals:         0       4       0       0       0
  2573 ;;      Temps:          0       2       0       0       0
  2574 ;;      Totals:         1       6       0       0       0
  2575 ;;Total ram usage:        7 bytes
  2576 ;; Hardware stack levels used: 1
  2577 ;; Hardware stack levels required when called: 5
  2578 ;; This function calls:
  2579 ;;		_Lcd_Cmd
  2580 ;; This function is called by:
  2581 ;;		_writeValor
  2582 ;;		_handleMenu
  2583 ;; This function uses a non-reentrant model
  2584 ;;
  2585                           
  2586  04BB                     _Lcd_Set_Cursor:	
  2587                           ;psect for function _Lcd_Set_Cursor
  2588                           
  2589                           
  2590                           ;incstack = 0
  2591 ;; hardware stack exceeded
  2592                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  2593                           ;Lcd_Set_Cursor@a stored from wreg
  2594  04BB  1283               	bcf	3,5	;RP0=0, select bank0
  2595  04BC  1303               	bcf	3,6	;RP1=0, select bank0
  2596  04BD  00A2               	movwf	Lcd_Set_Cursor@a
  2597  04BE                     l1858:
  2598                           
  2599                           ;./lcd.h: 41: void Lcd_Set_Cursor(char a, char b);./lcd.h: 42: {;./lcd.h: 43:  char temp
      +                          ,z,y;;./lcd.h: 44:  if(a == 1)
  2600  04BE  0322               	decf	Lcd_Set_Cursor@a,w
  2601  04BF  1D03               	btfss	3,2
  2602  04C0  2CC2               	goto	u1711
  2603  04C1  2CC3               	goto	u1710
  2604  04C2                     u1711:
  2605  04C2  2CE8               	goto	l1868
  2606  04C3                     u1710:
  2607  04C3                     l1860:
  2608                           
  2609                           ;./lcd.h: 45:  {;./lcd.h: 46:    temp = 0x80 + b - 1;
  2610  04C3  0877               	movf	Lcd_Set_Cursor@b,w
  2611  04C4  3E7F               	addlw	127
  2612  04C5  00A0               	movwf	??_Lcd_Set_Cursor
  2613  04C6  0820               	movf	??_Lcd_Set_Cursor,w
  2614  04C7  00A5               	movwf	Lcd_Set_Cursor@temp
  2615                           
  2616                           ;./lcd.h: 47:   z = temp>>4;
  2617  04C8  0825               	movf	Lcd_Set_Cursor@temp,w
  2618  04C9  00A0               	movwf	??_Lcd_Set_Cursor
  2619  04CA  3004               	movlw	4
  2620  04CB                     u1725:
  2621  04CB  1003               	clrc
  2622  04CC  0CA0               	rrf	??_Lcd_Set_Cursor,f
  2623  04CD  3EFF               	addlw	-1
  2624  04CE  1D03               	skipz
  2625  04CF  2CCB               	goto	u1725
  2626  04D0  0820               	movf	??_Lcd_Set_Cursor,w
  2627  04D1  00A1               	movwf	??_Lcd_Set_Cursor+1
  2628  04D2  0821               	movf	??_Lcd_Set_Cursor+1,w
  2629  04D3  00A3               	movwf	Lcd_Set_Cursor@z
  2630  04D4                     l1862:
  2631                           
  2632                           ;./lcd.h: 48:   y = temp & 0x0F;
  2633  04D4  0825               	movf	Lcd_Set_Cursor@temp,w
  2634  04D5  390F               	andlw	15
  2635  04D6  00A0               	movwf	??_Lcd_Set_Cursor
  2636  04D7  0820               	movf	??_Lcd_Set_Cursor,w
  2637  04D8  00A4               	movwf	Lcd_Set_Cursor@y
  2638  04D9                     l1864:
  2639                           
  2640                           ;./lcd.h: 49:   Lcd_Cmd(z);
  2641  04D9  0823               	movf	Lcd_Set_Cursor@z,w
  2642  04DA  120A  118A  26B9  120A  118A  	fcall	_Lcd_Cmd
  2643  04DF                     l1866:
  2644                           
  2645                           ;./lcd.h: 50:   Lcd_Cmd(y);
  2646  04DF  1283               	bcf	3,5	;RP0=0, select bank0
  2647  04E0  1303               	bcf	3,6	;RP1=0, select bank0
  2648  04E1  0824               	movf	Lcd_Set_Cursor@y,w
  2649  04E2  120A  118A  26B9  120A  118A  	fcall	_Lcd_Cmd
  2650                           
  2651                           ;./lcd.h: 51:  }
  2652  04E7  2D12               	goto	l77
  2653  04E8                     l1868:
  2654  04E8  3002               	movlw	2
  2655  04E9  0622               	xorwf	Lcd_Set_Cursor@a,w
  2656  04EA  1D03               	btfss	3,2
  2657  04EB  2CED               	goto	u1731
  2658  04EC  2CEE               	goto	u1730
  2659  04ED                     u1731:
  2660  04ED  2D12               	goto	l77
  2661  04EE                     u1730:
  2662  04EE                     l1870:
  2663                           
  2664                           ;./lcd.h: 53:  {;./lcd.h: 54:   temp = 0xC0 + b - 1;
  2665  04EE  0877               	movf	Lcd_Set_Cursor@b,w
  2666  04EF  3EBF               	addlw	191
  2667  04F0  00A0               	movwf	??_Lcd_Set_Cursor
  2668  04F1  0820               	movf	??_Lcd_Set_Cursor,w
  2669  04F2  00A5               	movwf	Lcd_Set_Cursor@temp
  2670                           
  2671                           ;./lcd.h: 55:   z = temp>>4;
  2672  04F3  0825               	movf	Lcd_Set_Cursor@temp,w
  2673  04F4  00A0               	movwf	??_Lcd_Set_Cursor
  2674  04F5  3004               	movlw	4
  2675  04F6                     u1745:
  2676  04F6  1003               	clrc
  2677  04F7  0CA0               	rrf	??_Lcd_Set_Cursor,f
  2678  04F8  3EFF               	addlw	-1
  2679  04F9  1D03               	skipz
  2680  04FA  2CF6               	goto	u1745
  2681  04FB  0820               	movf	??_Lcd_Set_Cursor,w
  2682  04FC  00A1               	movwf	??_Lcd_Set_Cursor+1
  2683  04FD  0821               	movf	??_Lcd_Set_Cursor+1,w
  2684  04FE  00A3               	movwf	Lcd_Set_Cursor@z
  2685  04FF                     l1872:
  2686                           
  2687                           ;./lcd.h: 56:   y = temp & 0x0F;
  2688  04FF  0825               	movf	Lcd_Set_Cursor@temp,w
  2689  0500  390F               	andlw	15
  2690  0501  00A0               	movwf	??_Lcd_Set_Cursor
  2691  0502  0820               	movf	??_Lcd_Set_Cursor,w
  2692  0503  00A4               	movwf	Lcd_Set_Cursor@y
  2693  0504                     l1874:
  2694                           
  2695                           ;./lcd.h: 57:   Lcd_Cmd(z);
  2696  0504  0823               	movf	Lcd_Set_Cursor@z,w
  2697  0505  120A  118A  26B9  120A  118A  	fcall	_Lcd_Cmd
  2698  050A                     l1876:
  2699                           
  2700                           ;./lcd.h: 58:   Lcd_Cmd(y);
  2701  050A  1283               	bcf	3,5	;RP0=0, select bank0
  2702  050B  1303               	bcf	3,6	;RP1=0, select bank0
  2703  050C  0824               	movf	Lcd_Set_Cursor@y,w
  2704  050D  120A  118A  26B9  120A  118A  	fcall	_Lcd_Cmd
  2705  0512                     l77:
  2706  0512  0008               	return
  2707  0513                     __end_of_Lcd_Set_Cursor:
  2708                           
  2709                           	psect	text11
  2710  05C8                     __ptext11:	
  2711 ;; *************** function _Lcd_Write_String *****************
  2712 ;; Defined at:
  2713 ;;		line 97 in file "./lcd.h"
  2714 ;; Parameters:    Size  Location     Type
  2715 ;;  a               1    wreg     PTR unsigned char 
  2716 ;;		 -> STR_2(12), STR_1(15), 
  2717 ;; Auto vars:     Size  Location     Type
  2718 ;;  a               1    2[BANK0 ] PTR unsigned char 
  2719 ;;		 -> STR_2(12), STR_1(15), 
  2720 ;;  i               2    0[BANK0 ] int 
  2721 ;; Return value:  Size  Location     Type
  2722 ;;                  1    wreg      void 
  2723 ;; Registers used:
  2724 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2725 ;; Tracked objects:
  2726 ;;		On entry : 0/0
  2727 ;;		On exit  : 0/0
  2728 ;;		Unchanged: 0/0
  2729 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2730 ;;      Params:         0       0       0       0       0
  2731 ;;      Locals:         0       3       0       0       0
  2732 ;;      Temps:          0       0       0       0       0
  2733 ;;      Totals:         0       3       0       0       0
  2734 ;;Total ram usage:        3 bytes
  2735 ;; Hardware stack levels used: 1
  2736 ;; Hardware stack levels required when called: 5
  2737 ;; This function calls:
  2738 ;;		_Lcd_Write_Char
  2739 ;; This function is called by:
  2740 ;;		_handleMenu
  2741 ;; This function uses a non-reentrant model
  2742 ;;
  2743                           
  2744  05C8                     _Lcd_Write_String:	
  2745                           ;psect for function _Lcd_Write_String
  2746                           
  2747                           
  2748                           ;incstack = 0
  2749 ;; using string table level
  2750                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2751                           ;Lcd_Write_String@a stored from wreg
  2752  05C8  1283               	bcf	3,5	;RP0=0, select bank0
  2753  05C9  1303               	bcf	3,6	;RP1=0, select bank0
  2754  05CA  00A2               	movwf	Lcd_Write_String@a
  2755  05CB                     l1944:
  2756                           
  2757                           ;./lcd.h: 97: void Lcd_Write_String(char *a);./lcd.h: 98: {;./lcd.h: 99:  int i;;./lcd.h
      +                          : 100:  for(i=0;a[i]!='\0';i++)
  2758  05CB  01A0               	clrf	Lcd_Write_String@i
  2759  05CC  01A1               	clrf	Lcd_Write_String@i+1
  2760  05CD  2DE3               	goto	l1950
  2761  05CE                     l1946:
  2762                           
  2763                           ;./lcd.h: 101:     Lcd_Write_Char(a[i]);
  2764  05CE  0820               	movf	Lcd_Write_String@i,w
  2765  05CF  0722               	addwf	Lcd_Write_String@a,w
  2766  05D0  0084               	movwf	4
  2767  05D1  120A  118A  265A  120A  118A  	fcall	stringdir
  2768  05D6  120A  118A  255C  120A  118A  	fcall	_Lcd_Write_Char
  2769  05DB                     l1948:
  2770  05DB  3001               	movlw	1
  2771  05DC  1283               	bcf	3,5	;RP0=0, select bank0
  2772  05DD  1303               	bcf	3,6	;RP1=0, select bank0
  2773  05DE  07A0               	addwf	Lcd_Write_String@i,f
  2774  05DF  1803               	skipnc
  2775  05E0  0AA1               	incf	Lcd_Write_String@i+1,f
  2776  05E1  3000               	movlw	0
  2777  05E2  07A1               	addwf	Lcd_Write_String@i+1,f
  2778  05E3                     l1950:
  2779  05E3  0820               	movf	Lcd_Write_String@i,w
  2780  05E4  0722               	addwf	Lcd_Write_String@a,w
  2781  05E5  0084               	movwf	4
  2782  05E6  120A  118A  265A  120A  118A  	fcall	stringdir
  2783  05EB  3A00               	xorlw	0
  2784  05EC  1D03               	skipz
  2785  05ED  2DEF               	goto	u1851
  2786  05EE  2DF0               	goto	u1850
  2787  05EF                     u1851:
  2788  05EF  2DCE               	goto	l1946
  2789  05F0                     u1850:
  2790  05F0                     l89:
  2791  05F0  0008               	return
  2792  05F1                     __end_of_Lcd_Write_String:
  2793                           
  2794                           	psect	text12
  2795  055C                     __ptext12:	
  2796 ;; *************** function _Lcd_Write_Char *****************
  2797 ;; Defined at:
  2798 ;;		line 81 in file "./lcd.h"
  2799 ;; Parameters:    Size  Location     Type
  2800 ;;  a               1    wreg     unsigned char 
  2801 ;; Auto vars:     Size  Location     Type
  2802 ;;  a               1    7[COMMON] unsigned char 
  2803 ;;  y               1    6[COMMON] unsigned char 
  2804 ;;  temp            1    5[COMMON] unsigned char 
  2805 ;; Return value:  Size  Location     Type
  2806 ;;                  1    wreg      void 
  2807 ;; Registers used:
  2808 ;;		wreg, status,2, status,0, pclath, cstack
  2809 ;; Tracked objects:
  2810 ;;		On entry : 0/0
  2811 ;;		On exit  : 0/0
  2812 ;;		Unchanged: 0/0
  2813 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2814 ;;      Params:         0       0       0       0       0
  2815 ;;      Locals:         3       0       0       0       0
  2816 ;;      Temps:          1       0       0       0       0
  2817 ;;      Totals:         4       0       0       0       0
  2818 ;;Total ram usage:        4 bytes
  2819 ;; Hardware stack levels used: 1
  2820 ;; Hardware stack levels required when called: 4
  2821 ;; This function calls:
  2822 ;;		_Lcd_Port
  2823 ;; This function is called by:
  2824 ;;		_Lcd_Write_String
  2825 ;;		_writeValor
  2826 ;; This function uses a non-reentrant model
  2827 ;;
  2828                           
  2829  055C                     _Lcd_Write_Char:	
  2830                           ;psect for function _Lcd_Write_Char
  2831                           
  2832                           
  2833                           ;incstack = 0
  2834                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  2835                           ;Lcd_Write_Char@a stored from wreg
  2836  055C  00F7               	movwf	Lcd_Write_Char@a
  2837  055D                     l1878:
  2838                           
  2839                           ;./lcd.h: 81: void Lcd_Write_Char(char a);./lcd.h: 82: {;./lcd.h: 83:    char temp,y;;./
      +                          lcd.h: 84:    temp = a&0x0F;
  2840  055D  0877               	movf	Lcd_Write_Char@a,w
  2841  055E  390F               	andlw	15
  2842  055F  00F4               	movwf	??_Lcd_Write_Char
  2843  0560  0874               	movf	??_Lcd_Write_Char,w
  2844  0561  00F5               	movwf	Lcd_Write_Char@temp
  2845                           
  2846                           ;./lcd.h: 85:    y = a&0xF0;
  2847  0562  0877               	movf	Lcd_Write_Char@a,w
  2848  0563  39F0               	andlw	240
  2849  0564  00F4               	movwf	??_Lcd_Write_Char
  2850  0565  0874               	movf	??_Lcd_Write_Char,w
  2851  0566  00F6               	movwf	Lcd_Write_Char@y
  2852  0567                     l1880:
  2853                           
  2854                           ;./lcd.h: 86:    RD2 = 1;
  2855  0567  1283               	bcf	3,5	;RP0=0, select bank0
  2856  0568  1303               	bcf	3,6	;RP1=0, select bank0
  2857  0569  1508               	bsf	8,2	;volatile
  2858  056A                     l1882:
  2859                           
  2860                           ;./lcd.h: 87:    Lcd_Port(y>>4);
  2861  056A  0876               	movf	Lcd_Write_Char@y,w
  2862  056B  00F4               	movwf	??_Lcd_Write_Char
  2863  056C  3004               	movlw	4
  2864  056D                     u1755:
  2865  056D  1003               	clrc
  2866  056E  0CF4               	rrf	??_Lcd_Write_Char,f
  2867  056F  3EFF               	addlw	-1
  2868  0570  1D03               	skipz
  2869  0571  2D6D               	goto	u1755
  2870  0572  0874               	movf	??_Lcd_Write_Char,w
  2871  0573  120A  118A  2638  120A  118A  	fcall	_Lcd_Port
  2872  0578                     l1884:
  2873                           
  2874                           ;./lcd.h: 88:    RD3 = 1;
  2875  0578  1283               	bcf	3,5	;RP0=0, select bank0
  2876  0579  1303               	bcf	3,6	;RP1=0, select bank0
  2877  057A  1588               	bsf	8,3	;volatile
  2878  057B                     l1886:
  2879                           
  2880                           ;./lcd.h: 89:    _delay((unsigned long)((40)*(4000000/4000000.0)));
  2881  057B  300D               	movlw	13
  2882  057C  00F4               	movwf	??_Lcd_Write_Char
  2883  057D                     u2127:
  2884  057D  0BF4               	decfsz	??_Lcd_Write_Char,f
  2885  057E  2D7D               	goto	u2127
  2886  057F                     l1888:
  2887                           
  2888                           ;./lcd.h: 90:    RD3 = 0;
  2889  057F  1283               	bcf	3,5	;RP0=0, select bank0
  2890  0580  1303               	bcf	3,6	;RP1=0, select bank0
  2891  0581  1188               	bcf	8,3	;volatile
  2892  0582                     l1890:
  2893                           
  2894                           ;./lcd.h: 91:    Lcd_Port(temp);
  2895  0582  0875               	movf	Lcd_Write_Char@temp,w
  2896  0583  120A  118A  2638  120A  118A  	fcall	_Lcd_Port
  2897  0588                     l1892:
  2898                           
  2899                           ;./lcd.h: 92:    RD3 = 1;
  2900  0588  1283               	bcf	3,5	;RP0=0, select bank0
  2901  0589  1303               	bcf	3,6	;RP1=0, select bank0
  2902  058A  1588               	bsf	8,3	;volatile
  2903  058B                     l1894:
  2904                           
  2905                           ;./lcd.h: 93:    _delay((unsigned long)((40)*(4000000/4000000.0)));
  2906  058B  300D               	movlw	13
  2907  058C  00F4               	movwf	??_Lcd_Write_Char
  2908  058D                     u2137:
  2909  058D  0BF4               	decfsz	??_Lcd_Write_Char,f
  2910  058E  2D8D               	goto	u2137
  2911  058F                     l1896:
  2912                           
  2913                           ;./lcd.h: 94:    RD3 = 0;
  2914  058F  1283               	bcf	3,5	;RP0=0, select bank0
  2915  0590  1303               	bcf	3,6	;RP1=0, select bank0
  2916  0591  1188               	bcf	8,3	;volatile
  2917  0592                     l83:
  2918  0592  0008               	return
  2919  0593                     __end_of_Lcd_Write_Char:
  2920                           
  2921                           	psect	text13
  2922  0754                     __ptext13:	
  2923 ;; *************** function _Lcd_Clear *****************
  2924 ;; Defined at:
  2925 ;;		line 35 in file "./lcd.h"
  2926 ;; Parameters:    Size  Location     Type
  2927 ;;		None
  2928 ;; Auto vars:     Size  Location     Type
  2929 ;;		None
  2930 ;; Return value:  Size  Location     Type
  2931 ;;                  1    wreg      void 
  2932 ;; Registers used:
  2933 ;;		wreg, status,2, status,0, pclath, cstack
  2934 ;; Tracked objects:
  2935 ;;		On entry : 0/0
  2936 ;;		On exit  : 0/0
  2937 ;;		Unchanged: 0/0
  2938 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2939 ;;      Params:         0       0       0       0       0
  2940 ;;      Locals:         0       0       0       0       0
  2941 ;;      Temps:          0       0       0       0       0
  2942 ;;      Totals:         0       0       0       0       0
  2943 ;;Total ram usage:        0 bytes
  2944 ;; Hardware stack levels used: 1
  2945 ;; Hardware stack levels required when called: 5
  2946 ;; This function calls:
  2947 ;;		_Lcd_Cmd
  2948 ;; This function is called by:
  2949 ;;		_handleMenu
  2950 ;; This function uses a non-reentrant model
  2951 ;;
  2952                           
  2953  0754                     _Lcd_Clear:	
  2954                           ;psect for function _Lcd_Clear
  2955                           
  2956  0754                     l1942:	
  2957                           ;incstack = 0
  2958                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  2959                           
  2960                           
  2961                           ;./lcd.h: 37:  Lcd_Cmd(0);
  2962  0754  3000               	movlw	0
  2963  0755  120A  118A  26B9  120A  118A  	fcall	_Lcd_Cmd
  2964                           
  2965                           ;./lcd.h: 38:  Lcd_Cmd(1);
  2966  075A  3001               	movlw	1
  2967  075B  120A  118A  26B9  120A  118A  	fcall	_Lcd_Cmd
  2968  0760                     l71:
  2969  0760  0008               	return
  2970  0761                     __end_of_Lcd_Clear:
  2971                           
  2972                           	psect	text14
  2973  077D                     __ptext14:	
  2974 ;; *************** function _setupWatchdogTimer *****************
  2975 ;; Defined at:
  2976 ;;		line 314 in file "main.c"
  2977 ;; Parameters:    Size  Location     Type
  2978 ;;		None
  2979 ;; Auto vars:     Size  Location     Type
  2980 ;;		None
  2981 ;; Return value:  Size  Location     Type
  2982 ;;                  1    wreg      void 
  2983 ;; Registers used:
  2984 ;;		None
  2985 ;; Tracked objects:
  2986 ;;		On entry : 0/0
  2987 ;;		On exit  : 0/0
  2988 ;;		Unchanged: 0/0
  2989 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2990 ;;      Params:         0       0       0       0       0
  2991 ;;      Locals:         0       0       0       0       0
  2992 ;;      Temps:          0       0       0       0       0
  2993 ;;      Totals:         0       0       0       0       0
  2994 ;;Total ram usage:        0 bytes
  2995 ;; Hardware stack levels used: 1
  2996 ;; Hardware stack levels required when called: 3
  2997 ;; This function calls:
  2998 ;;		Nothing
  2999 ;; This function is called by:
  3000 ;;		_main
  3001 ;; This function uses a non-reentrant model
  3002 ;;
  3003                           
  3004  077D                     _setupWatchdogTimer:	
  3005                           ;psect for function _setupWatchdogTimer
  3006                           
  3007  077D                     l1746:	
  3008                           ;incstack = 0
  3009                           ; Regs used in _setupWatchdogTimer: []
  3010                           
  3011                           
  3012                           ;main.c: 316:     OPTION_REGbits.PSA = 1;
  3013  077D  1683               	bsf	3,5	;RP0=1, select bank1
  3014  077E  1303               	bcf	3,6	;RP1=0, select bank1
  3015  077F  1581               	bsf	1,3	;volatile
  3016                           
  3017                           ;main.c: 317:     OPTION_REGbits.PS0 = 0;
  3018  0780  1001               	bcf	1,0	;volatile
  3019                           
  3020                           ;main.c: 318:     OPTION_REGbits.PS1 = 1;
  3021  0781  1481               	bsf	1,1	;volatile
  3022                           
  3023                           ;main.c: 319:     OPTION_REGbits.PS2 = 1;
  3024  0782  1501               	bsf	1,2	;volatile
  3025  0783  0064               	clrwdt	;# 
  3026  0784                     l183:	
  3027                           ;main.c: 321:     return;
  3028                           
  3029  0784  0008               	return
  3030  0785                     __end_of_setupWatchdogTimer:
  3031                           
  3032                           	psect	text15
  3033  071B                     __ptext15:	
  3034 ;; *************** function _setupTimer *****************
  3035 ;; Defined at:
  3036 ;;		line 102 in file "main.c"
  3037 ;; Parameters:    Size  Location     Type
  3038 ;;		None
  3039 ;; Auto vars:     Size  Location     Type
  3040 ;;		None
  3041 ;; Return value:  Size  Location     Type
  3042 ;;                  1    wreg      void 
  3043 ;; Registers used:
  3044 ;;		wreg, status,2, status,0, pclath, cstack
  3045 ;; Tracked objects:
  3046 ;;		On entry : 0/0
  3047 ;;		On exit  : 0/0
  3048 ;;		Unchanged: 0/0
  3049 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3050 ;;      Params:         0       0       0       0       0
  3051 ;;      Locals:         0       0       0       0       0
  3052 ;;      Temps:          0       0       0       0       0
  3053 ;;      Totals:         0       0       0       0       0
  3054 ;;Total ram usage:        0 bytes
  3055 ;; Hardware stack levels used: 1
  3056 ;; Hardware stack levels required when called: 6
  3057 ;; This function calls:
  3058 ;;		_setupNewVolumeFlow
  3059 ;; This function is called by:
  3060 ;;		_main
  3061 ;; This function uses a non-reentrant model
  3062 ;;
  3063                           
  3064  071B                     _setupTimer:	
  3065                           ;psect for function _setupTimer
  3066                           
  3067  071B                     l2074:	
  3068                           ;incstack = 0
  3069                           ; Regs used in _setupTimer: [wreg+status,2+status,0+pclath+cstack]
  3070                           
  3071                           
  3072                           ;main.c: 105:     INTCONbits.GIE = 1;
  3073  071B  178B               	bsf	11,7	;volatile
  3074                           
  3075                           ;main.c: 106:     INTCONbits.PEIE = 1;
  3076  071C  170B               	bsf	11,6	;volatile
  3077                           
  3078                           ;main.c: 107:     PIE1bits.TMR1IE = 1;
  3079  071D  1683               	bsf	3,5	;RP0=1, select bank1
  3080  071E  1303               	bcf	3,6	;RP1=0, select bank1
  3081  071F  140C               	bsf	12,0	;volatile
  3082                           
  3083                           ;main.c: 110:     T1CONbits.TMR1CS = 0;
  3084  0720  1283               	bcf	3,5	;RP0=0, select bank0
  3085  0721  1303               	bcf	3,6	;RP1=0, select bank0
  3086  0722  1090               	bcf	16,1	;volatile
  3087                           
  3088                           ;main.c: 113:     T1CONbits.T1CKPS0 = 1;
  3089  0723  1610               	bsf	16,4	;volatile
  3090                           
  3091                           ;main.c: 114:     T1CONbits.T1CKPS1 = 1;
  3092  0724  1690               	bsf	16,5	;volatile
  3093  0725                     l2076:
  3094                           
  3095                           ;main.c: 122:     TMR1H = 0x0B;
  3096  0725  300B               	movlw	11
  3097  0726  008F               	movwf	15	;volatile
  3098                           
  3099                           ;main.c: 123:     TMR1L = 0xDC;
  3100  0727  30DC               	movlw	220
  3101  0728  008E               	movwf	14	;volatile
  3102  0729                     l2078:
  3103                           
  3104                           ;main.c: 125:     T1CONbits.TMR1ON = 0;
  3105  0729  1010               	bcf	16,0	;volatile
  3106  072A                     l2080:
  3107                           
  3108                           ;main.c: 129:     setupNewVolumeFlow();
  3109  072A  120A  118A  269A  120A  118A  	fcall	_setupNewVolumeFlow
  3110  072F                     l120:
  3111  072F  0008               	return
  3112  0730                     __end_of_setupTimer:
  3113                           
  3114                           	psect	text16
  3115  069A                     __ptext16:	
  3116 ;; *************** function _setupNewVolumeFlow *****************
  3117 ;; Defined at:
  3118 ;;		line 93 in file "main.c"
  3119 ;; Parameters:    Size  Location     Type
  3120 ;;		None
  3121 ;; Auto vars:     Size  Location     Type
  3122 ;;  new_ms          2   13[BANK0 ] int 
  3123 ;; Return value:  Size  Location     Type
  3124 ;;                  1    wreg      void 
  3125 ;; Registers used:
  3126 ;;		wreg, status,2, status,0, pclath, cstack
  3127 ;; Tracked objects:
  3128 ;;		On entry : 0/0
  3129 ;;		On exit  : 0/0
  3130 ;;		Unchanged: 0/0
  3131 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3132 ;;      Params:         0       0       0       0       0
  3133 ;;      Locals:         0       2       0       0       0
  3134 ;;      Temps:          0       0       0       0       0
  3135 ;;      Totals:         0       2       0       0       0
  3136 ;;Total ram usage:        2 bytes
  3137 ;; Hardware stack levels used: 1
  3138 ;; Hardware stack levels required when called: 5
  3139 ;; This function calls:
  3140 ;;		___wmul
  3141 ;;		_changeTimerMaxConter
  3142 ;; This function is called by:
  3143 ;;		_setupTimer
  3144 ;;		_handleMenu
  3145 ;; This function uses a non-reentrant model
  3146 ;;
  3147                           
  3148  069A                     _setupNewVolumeFlow:	
  3149                           ;psect for function _setupNewVolumeFlow
  3150                           
  3151  069A                     l1952:	
  3152                           ;incstack = 0
  3153                           ; Regs used in _setupNewVolumeFlow: [wreg+status,2+status,0+pclath+cstack]
  3154                           
  3155                           
  3156                           ;main.c: 96:     int new_ms = water_volume*MLxMS;
  3157  069A  1283               	bcf	3,5	;RP0=0, select bank0
  3158  069B  1303               	bcf	3,6	;RP1=0, select bank0
  3159  069C  0847               	movf	_water_volume+1,w
  3160  069D  00F4               	movwf	___wmul@multiplier+1
  3161  069E  0846               	movf	_water_volume,w
  3162  069F  00F3               	movwf	___wmul@multiplier
  3163  06A0  3019               	movlw	25
  3164  06A1  00F5               	movwf	___wmul@multiplicand
  3165  06A2  3000               	movlw	0
  3166  06A3  00F6               	movwf	___wmul@multiplicand+1
  3167  06A4  120A  118A  25F1  120A  118A  	fcall	___wmul
  3168  06A9  0874               	movf	?___wmul+1,w
  3169  06AA  1283               	bcf	3,5	;RP0=0, select bank0
  3170  06AB  1303               	bcf	3,6	;RP1=0, select bank0
  3171  06AC  00AE               	movwf	setupNewVolumeFlow@new_ms+1
  3172  06AD  0873               	movf	?___wmul,w
  3173  06AE  00AD               	movwf	setupNewVolumeFlow@new_ms
  3174                           
  3175                           ;main.c: 98:     changeTimerMaxConter(new_ms);
  3176  06AF  082E               	movf	setupNewVolumeFlow@new_ms+1,w
  3177  06B0  00AC               	movwf	changeTimerMaxConter@mili_s+1
  3178  06B1  082D               	movf	setupNewVolumeFlow@new_ms,w
  3179  06B2  00AB               	movwf	changeTimerMaxConter@mili_s
  3180  06B3  120A  118A  26EC  120A  118A  	fcall	_changeTimerMaxConter
  3181  06B8                     l117:
  3182  06B8  0008               	return
  3183  06B9                     __end_of_setupNewVolumeFlow:
  3184                           
  3185                           	psect	text17
  3186  06EC                     __ptext17:	
  3187 ;; *************** function _changeTimerMaxConter *****************
  3188 ;; Defined at:
  3189 ;;		line 83 in file "main.c"
  3190 ;; Parameters:    Size  Location     Type
  3191 ;;  mili_s          2   11[BANK0 ] int 
  3192 ;; Auto vars:     Size  Location     Type
  3193 ;;		None
  3194 ;; Return value:  Size  Location     Type
  3195 ;;                  1    wreg      void 
  3196 ;; Registers used:
  3197 ;;		wreg, status,2, status,0, pclath, cstack
  3198 ;; Tracked objects:
  3199 ;;		On entry : 0/0
  3200 ;;		On exit  : 0/0
  3201 ;;		Unchanged: 0/0
  3202 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3203 ;;      Params:         0       2       0       0       0
  3204 ;;      Locals:         0       0       0       0       0
  3205 ;;      Temps:          0       0       0       0       0
  3206 ;;      Totals:         0       2       0       0       0
  3207 ;;Total ram usage:        2 bytes
  3208 ;; Hardware stack levels used: 1
  3209 ;; Hardware stack levels required when called: 4
  3210 ;; This function calls:
  3211 ;;		___awdiv
  3212 ;; This function is called by:
  3213 ;;		_setupNewVolumeFlow
  3214 ;; This function uses a non-reentrant model
  3215 ;;
  3216                           
  3217  06EC                     _changeTimerMaxConter:	
  3218                           ;psect for function _changeTimerMaxConter
  3219                           
  3220  06EC                     l1898:	
  3221                           ;incstack = 0
  3222                           ; Regs used in _changeTimerMaxConter: [wreg+status,2+status,0+pclath+cstack]
  3223                           
  3224                           
  3225                           ;main.c: 85:     timer_counter_max = (mili_s/500);
  3226  06EC  30F4               	movlw	244
  3227  06ED  1283               	bcf	3,5	;RP0=0, select bank0
  3228  06EE  1303               	bcf	3,6	;RP1=0, select bank0
  3229  06EF  00A2               	movwf	___awdiv@divisor
  3230  06F0  3001               	movlw	1
  3231  06F1  00A3               	movwf	___awdiv@divisor+1
  3232  06F2  082C               	movf	changeTimerMaxConter@mili_s+1,w
  3233  06F3  00A5               	movwf	___awdiv@dividend+1
  3234  06F4  082B               	movf	changeTimerMaxConter@mili_s,w
  3235  06F5  00A4               	movwf	___awdiv@dividend
  3236  06F6  120A  118A  2340  120A  118A  	fcall	___awdiv
  3237  06FB  1283               	bcf	3,5	;RP0=0, select bank0
  3238  06FC  1303               	bcf	3,6	;RP1=0, select bank0
  3239  06FD  0823               	movf	?___awdiv+1,w
  3240  06FE  00CB               	movwf	_timer_counter_max+1
  3241  06FF  0822               	movf	?___awdiv,w
  3242  0700  00CA               	movwf	_timer_counter_max
  3243  0701                     l1900:
  3244                           
  3245                           ;main.c: 86:     PORTC = timer_counter_max;
  3246  0701  084A               	movf	_timer_counter_max,w
  3247  0702  0087               	movwf	7	;volatile
  3248  0703                     l114:
  3249  0703  0008               	return
  3250  0704                     __end_of_changeTimerMaxConter:
  3251                           
  3252                           	psect	text18
  3253  0340                     __ptext18:	
  3254 ;; *************** function ___awdiv *****************
  3255 ;; Defined at:
  3256 ;;		line 5 in file "D:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\awdiv.c"
  3257 ;; Parameters:    Size  Location     Type
  3258 ;;  divisor         2    2[BANK0 ] int 
  3259 ;;  dividend        2    4[BANK0 ] int 
  3260 ;; Auto vars:     Size  Location     Type
  3261 ;;  quotient        2    9[BANK0 ] int 
  3262 ;;  sign            1    8[BANK0 ] unsigned char 
  3263 ;;  counter         1    7[BANK0 ] unsigned char 
  3264 ;; Return value:  Size  Location     Type
  3265 ;;                  2    2[BANK0 ] int 
  3266 ;; Registers used:
  3267 ;;		wreg, status,2, status,0
  3268 ;; Tracked objects:
  3269 ;;		On entry : 0/0
  3270 ;;		On exit  : 0/0
  3271 ;;		Unchanged: 0/0
  3272 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3273 ;;      Params:         0       4       0       0       0
  3274 ;;      Locals:         0       4       0       0       0
  3275 ;;      Temps:          0       1       0       0       0
  3276 ;;      Totals:         0       9       0       0       0
  3277 ;;Total ram usage:        9 bytes
  3278 ;; Hardware stack levels used: 1
  3279 ;; Hardware stack levels required when called: 3
  3280 ;; This function calls:
  3281 ;;		Nothing
  3282 ;; This function is called by:
  3283 ;;		_changeTimerMaxConter
  3284 ;;		_writeValor
  3285 ;;		_getADConverterValue
  3286 ;; This function uses a non-reentrant model
  3287 ;;
  3288                           
  3289  0340                     ___awdiv:	
  3290                           ;psect for function ___awdiv
  3291                           
  3292  0340                     l1814:	
  3293                           ;incstack = 0
  3294                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3295                           
  3296  0340  1283               	bcf	3,5	;RP0=0, select bank0
  3297  0341  1303               	bcf	3,6	;RP1=0, select bank0
  3298  0342  01A8               	clrf	___awdiv@sign
  3299  0343                     l1816:
  3300  0343  1FA3               	btfss	___awdiv@divisor+1,7
  3301  0344  2B46               	goto	u1611
  3302  0345  2B47               	goto	u1610
  3303  0346                     u1611:
  3304  0346  2B4E               	goto	l1822
  3305  0347                     u1610:
  3306  0347                     l1818:
  3307  0347  09A2               	comf	___awdiv@divisor,f
  3308  0348  09A3               	comf	___awdiv@divisor+1,f
  3309  0349  0AA2               	incf	___awdiv@divisor,f
  3310  034A  1903               	skipnz
  3311  034B  0AA3               	incf	___awdiv@divisor+1,f
  3312  034C                     l1820:
  3313  034C  01A8               	clrf	___awdiv@sign
  3314  034D  0AA8               	incf	___awdiv@sign,f
  3315  034E                     l1822:
  3316  034E  1FA5               	btfss	___awdiv@dividend+1,7
  3317  034F  2B51               	goto	u1621
  3318  0350  2B52               	goto	u1620
  3319  0351                     u1621:
  3320  0351  2B5B               	goto	l1828
  3321  0352                     u1620:
  3322  0352                     l1824:
  3323  0352  09A4               	comf	___awdiv@dividend,f
  3324  0353  09A5               	comf	___awdiv@dividend+1,f
  3325  0354  0AA4               	incf	___awdiv@dividend,f
  3326  0355  1903               	skipnz
  3327  0356  0AA5               	incf	___awdiv@dividend+1,f
  3328  0357                     l1826:
  3329  0357  3001               	movlw	1
  3330  0358  00A6               	movwf	??___awdiv
  3331  0359  0826               	movf	??___awdiv,w
  3332  035A  06A8               	xorwf	___awdiv@sign,f
  3333  035B                     l1828:
  3334  035B  01A9               	clrf	___awdiv@quotient
  3335  035C  01AA               	clrf	___awdiv@quotient+1
  3336  035D                     l1830:
  3337  035D  0822               	movf	___awdiv@divisor,w
  3338  035E  0423               	iorwf	___awdiv@divisor+1,w
  3339  035F  1903               	btfsc	3,2
  3340  0360  2B62               	goto	u1631
  3341  0361  2B63               	goto	u1630
  3342  0362                     u1631:
  3343  0362  2B9A               	goto	l1850
  3344  0363                     u1630:
  3345  0363                     l1832:
  3346  0363  01A7               	clrf	___awdiv@counter
  3347  0364  0AA7               	incf	___awdiv@counter,f
  3348  0365  2B71               	goto	l1838
  3349  0366                     l1834:
  3350  0366  3001               	movlw	1
  3351  0367                     u1645:
  3352  0367  1003               	clrc
  3353  0368  0DA2               	rlf	___awdiv@divisor,f
  3354  0369  0DA3               	rlf	___awdiv@divisor+1,f
  3355  036A  3EFF               	addlw	-1
  3356  036B  1D03               	skipz
  3357  036C  2B67               	goto	u1645
  3358  036D                     l1836:
  3359  036D  3001               	movlw	1
  3360  036E  00A6               	movwf	??___awdiv
  3361  036F  0826               	movf	??___awdiv,w
  3362  0370  07A7               	addwf	___awdiv@counter,f
  3363  0371                     l1838:
  3364  0371  1FA3               	btfss	___awdiv@divisor+1,7
  3365  0372  2B74               	goto	u1651
  3366  0373  2B75               	goto	u1650
  3367  0374                     u1651:
  3368  0374  2B66               	goto	l1834
  3369  0375                     u1650:
  3370  0375                     l1840:
  3371  0375  3001               	movlw	1
  3372  0376                     u1665:
  3373  0376  1003               	clrc
  3374  0377  0DA9               	rlf	___awdiv@quotient,f
  3375  0378  0DAA               	rlf	___awdiv@quotient+1,f
  3376  0379  3EFF               	addlw	-1
  3377  037A  1D03               	skipz
  3378  037B  2B76               	goto	u1665
  3379  037C  0823               	movf	___awdiv@divisor+1,w
  3380  037D  0225               	subwf	___awdiv@dividend+1,w
  3381  037E  1D03               	skipz
  3382  037F  2B82               	goto	u1675
  3383  0380  0822               	movf	___awdiv@divisor,w
  3384  0381  0224               	subwf	___awdiv@dividend,w
  3385  0382                     u1675:
  3386  0382  1C03               	skipc
  3387  0383  2B85               	goto	u1671
  3388  0384  2B86               	goto	u1670
  3389  0385                     u1671:
  3390  0385  2B8D               	goto	l1846
  3391  0386                     u1670:
  3392  0386                     l1842:
  3393  0386  0822               	movf	___awdiv@divisor,w
  3394  0387  02A4               	subwf	___awdiv@dividend,f
  3395  0388  0823               	movf	___awdiv@divisor+1,w
  3396  0389  1C03               	skipc
  3397  038A  03A5               	decf	___awdiv@dividend+1,f
  3398  038B  02A5               	subwf	___awdiv@dividend+1,f
  3399  038C                     l1844:
  3400  038C  1429               	bsf	___awdiv@quotient,0
  3401  038D                     l1846:
  3402  038D  3001               	movlw	1
  3403  038E                     u1685:
  3404  038E  1003               	clrc
  3405  038F  0CA3               	rrf	___awdiv@divisor+1,f
  3406  0390  0CA2               	rrf	___awdiv@divisor,f
  3407  0391  3EFF               	addlw	-1
  3408  0392  1D03               	skipz
  3409  0393  2B8E               	goto	u1685
  3410  0394                     l1848:
  3411  0394  3001               	movlw	1
  3412  0395  02A7               	subwf	___awdiv@counter,f
  3413  0396  1D03               	btfss	3,2
  3414  0397  2B99               	goto	u1691
  3415  0398  2B9A               	goto	u1690
  3416  0399                     u1691:
  3417  0399  2B75               	goto	l1840
  3418  039A                     u1690:
  3419  039A                     l1850:
  3420  039A  0828               	movf	___awdiv@sign,w
  3421  039B  1903               	btfsc	3,2
  3422  039C  2B9E               	goto	u1701
  3423  039D  2B9F               	goto	u1700
  3424  039E                     u1701:
  3425  039E  2BA4               	goto	l1854
  3426  039F                     u1700:
  3427  039F                     l1852:
  3428  039F  09A9               	comf	___awdiv@quotient,f
  3429  03A0  09AA               	comf	___awdiv@quotient+1,f
  3430  03A1  0AA9               	incf	___awdiv@quotient,f
  3431  03A2  1903               	skipnz
  3432  03A3  0AAA               	incf	___awdiv@quotient+1,f
  3433  03A4                     l1854:
  3434  03A4  082A               	movf	___awdiv@quotient+1,w
  3435  03A5  00A3               	movwf	?___awdiv+1
  3436  03A6  0829               	movf	___awdiv@quotient,w
  3437  03A7  00A2               	movwf	?___awdiv
  3438  03A8                     l433:
  3439  03A8  0008               	return
  3440  03A9                     __end_of___awdiv:
  3441                           
  3442                           	psect	text19
  3443  05F1                     __ptext19:	
  3444 ;; *************** function ___wmul *****************
  3445 ;; Defined at:
  3446 ;;		line 15 in file "D:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\Umul16.c"
  3447 ;; Parameters:    Size  Location     Type
  3448 ;;  multiplier      2    3[COMMON] unsigned int 
  3449 ;;  multiplicand    2    5[COMMON] unsigned int 
  3450 ;; Auto vars:     Size  Location     Type
  3451 ;;  product         2    7[COMMON] unsigned int 
  3452 ;; Return value:  Size  Location     Type
  3453 ;;                  2    3[COMMON] unsigned int 
  3454 ;; Registers used:
  3455 ;;		wreg, status,2, status,0
  3456 ;; Tracked objects:
  3457 ;;		On entry : 0/0
  3458 ;;		On exit  : 0/0
  3459 ;;		Unchanged: 0/0
  3460 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3461 ;;      Params:         4       0       0       0       0
  3462 ;;      Locals:         2       0       0       0       0
  3463 ;;      Temps:          0       0       0       0       0
  3464 ;;      Totals:         6       0       0       0       0
  3465 ;;Total ram usage:        6 bytes
  3466 ;; Hardware stack levels used: 1
  3467 ;; Hardware stack levels required when called: 3
  3468 ;; This function calls:
  3469 ;;		Nothing
  3470 ;; This function is called by:
  3471 ;;		_setupNewVolumeFlow
  3472 ;;		_getADConverterValue
  3473 ;; This function uses a non-reentrant model
  3474 ;;
  3475                           
  3476  05F1                     ___wmul:	
  3477                           ;psect for function ___wmul
  3478                           
  3479  05F1                     l1400:	
  3480                           ;incstack = 0
  3481                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3482                           
  3483  05F1  01F7               	clrf	___wmul@product
  3484  05F2  01F8               	clrf	___wmul@product+1
  3485  05F3                     l1402:
  3486  05F3  1C73               	btfss	___wmul@multiplier,0
  3487  05F4  2DF6               	goto	u981
  3488  05F5  2DF7               	goto	u980
  3489  05F6                     u981:
  3490  05F6  2DFD               	goto	l280
  3491  05F7                     u980:
  3492  05F7                     l1404:
  3493  05F7  0875               	movf	___wmul@multiplicand,w
  3494  05F8  07F7               	addwf	___wmul@product,f
  3495  05F9  1803               	skipnc
  3496  05FA  0AF8               	incf	___wmul@product+1,f
  3497  05FB  0876               	movf	___wmul@multiplicand+1,w
  3498  05FC  07F8               	addwf	___wmul@product+1,f
  3499  05FD                     l280:
  3500  05FD  3001               	movlw	1
  3501  05FE                     u995:
  3502  05FE  1003               	clrc
  3503  05FF  0DF5               	rlf	___wmul@multiplicand,f
  3504  0600  0DF6               	rlf	___wmul@multiplicand+1,f
  3505  0601  3EFF               	addlw	-1
  3506  0602  1D03               	skipz
  3507  0603  2DFE               	goto	u995
  3508  0604                     l1406:
  3509  0604  3001               	movlw	1
  3510  0605                     u1005:
  3511  0605  1003               	clrc
  3512  0606  0CF4               	rrf	___wmul@multiplier+1,f
  3513  0607  0CF3               	rrf	___wmul@multiplier,f
  3514  0608  3EFF               	addlw	-1
  3515  0609  1D03               	skipz
  3516  060A  2E05               	goto	u1005
  3517  060B                     l1408:
  3518  060B  0873               	movf	___wmul@multiplier,w
  3519  060C  0474               	iorwf	___wmul@multiplier+1,w
  3520  060D  1D03               	btfss	3,2
  3521  060E  2E10               	goto	u1011
  3522  060F  2E11               	goto	u1010
  3523  0610                     u1011:
  3524  0610  2DF3               	goto	l1402
  3525  0611                     u1010:
  3526  0611                     l1410:
  3527  0611  0878               	movf	___wmul@product+1,w
  3528  0612  00F4               	movwf	?___wmul+1
  3529  0613  0877               	movf	___wmul@product,w
  3530  0614  00F3               	movwf	?___wmul
  3531  0615                     l282:
  3532  0615  0008               	return
  3533  0616                     __end_of___wmul:
  3534                           
  3535                           	psect	text20
  3536  0785                     __ptext20:	
  3537 ;; *************** function _setupExternalInterruption *****************
  3538 ;; Defined at:
  3539 ;;		line 197 in file "main.c"
  3540 ;; Parameters:    Size  Location     Type
  3541 ;;		None
  3542 ;; Auto vars:     Size  Location     Type
  3543 ;;		None
  3544 ;; Return value:  Size  Location     Type
  3545 ;;                  1    wreg      void 
  3546 ;; Registers used:
  3547 ;;		None
  3548 ;; Tracked objects:
  3549 ;;		On entry : 0/0
  3550 ;;		On exit  : 0/0
  3551 ;;		Unchanged: 0/0
  3552 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3553 ;;      Params:         0       0       0       0       0
  3554 ;;      Locals:         0       0       0       0       0
  3555 ;;      Temps:          0       0       0       0       0
  3556 ;;      Totals:         0       0       0       0       0
  3557 ;;Total ram usage:        0 bytes
  3558 ;; Hardware stack levels used: 1
  3559 ;; Hardware stack levels required when called: 3
  3560 ;; This function calls:
  3561 ;;		Nothing
  3562 ;; This function is called by:
  3563 ;;		_main
  3564 ;; This function uses a non-reentrant model
  3565 ;;
  3566                           
  3567  0785                     _setupExternalInterruption:	
  3568                           ;psect for function _setupExternalInterruption
  3569                           
  3570  0785                     l1728:	
  3571                           ;incstack = 0
  3572                           ; Regs used in _setupExternalInterruption: []
  3573                           
  3574                           
  3575                           ;main.c: 199:     OPTION_REGbits.INTEDG = 0;
  3576  0785  1683               	bsf	3,5	;RP0=1, select bank1
  3577  0786  1303               	bcf	3,6	;RP1=0, select bank1
  3578  0787  1301               	bcf	1,6	;volatile
  3579                           
  3580                           ;main.c: 200:  INTCONbits.GIE = 1;
  3581  0788  178B               	bsf	11,7	;volatile
  3582                           
  3583                           ;main.c: 201:  INTCONbits.INTE = 1;
  3584  0789  160B               	bsf	11,4	;volatile
  3585                           
  3586                           ;main.c: 202:     INTCONbits.INTF = 0;
  3587  078A  108B               	bcf	11,1	;volatile
  3588  078B                     l143:	
  3589                           ;main.c: 203:     return;
  3590                           
  3591  078B  0008               	return
  3592  078C                     __end_of_setupExternalInterruption:
  3593                           
  3594                           	psect	text21
  3595  0704                     __ptext21:	
  3596 ;; *************** function _setupADC *****************
  3597 ;; Defined at:
  3598 ;;		line 325 in file "main.c"
  3599 ;; Parameters:    Size  Location     Type
  3600 ;;		None
  3601 ;; Auto vars:     Size  Location     Type
  3602 ;;		None
  3603 ;; Return value:  Size  Location     Type
  3604 ;;                  1    wreg      void 
  3605 ;; Registers used:
  3606 ;;		status,2
  3607 ;; Tracked objects:
  3608 ;;		On entry : 0/0
  3609 ;;		On exit  : 0/0
  3610 ;;		Unchanged: 0/0
  3611 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3612 ;;      Params:         0       0       0       0       0
  3613 ;;      Locals:         0       0       0       0       0
  3614 ;;      Temps:          0       0       0       0       0
  3615 ;;      Totals:         0       0       0       0       0
  3616 ;;Total ram usage:        0 bytes
  3617 ;; Hardware stack levels used: 1
  3618 ;; Hardware stack levels required when called: 3
  3619 ;; This function calls:
  3620 ;;		Nothing
  3621 ;; This function is called by:
  3622 ;;		_main
  3623 ;; This function uses a non-reentrant model
  3624 ;;
  3625                           
  3626  0704                     _setupADC:	
  3627                           ;psect for function _setupADC
  3628                           
  3629  0704                     l1748:	
  3630                           ;incstack = 0
  3631                           ; Regs used in _setupADC: [status,2]
  3632                           
  3633                           
  3634                           ;main.c: 330:     ADCON1bits.PCFG0 = 1;
  3635  0704  1683               	bsf	3,5	;RP0=1, select bank1
  3636  0705  1303               	bcf	3,6	;RP1=0, select bank1
  3637  0706  141F               	bsf	31,0	;volatile
  3638                           
  3639                           ;main.c: 331:     ADCON1bits.PCFG1 = 1;
  3640  0707  149F               	bsf	31,1	;volatile
  3641                           
  3642                           ;main.c: 332:     ADCON1bits.PCFG2 = 1;
  3643  0708  151F               	bsf	31,2	;volatile
  3644                           
  3645                           ;main.c: 333:     ADCON1bits.PCFG3 = 1;
  3646  0709  159F               	bsf	31,3	;volatile
  3647                           
  3648                           ;main.c: 336:     ADCON1bits.ADCS2 = 1;
  3649  070A  171F               	bsf	31,6	;volatile
  3650                           
  3651                           ;main.c: 337:     ADCON0bits.ADCS1 = 1;
  3652  070B  1283               	bcf	3,5	;RP0=0, select bank0
  3653  070C  1303               	bcf	3,6	;RP1=0, select bank0
  3654  070D  179F               	bsf	31,7	;volatile
  3655                           
  3656                           ;main.c: 338:     ADCON0bits.ADCS0 = 0;
  3657  070E  131F               	bcf	31,6	;volatile
  3658                           
  3659                           ;main.c: 341:     ADCON1bits.ADFM = 0;
  3660  070F  1683               	bsf	3,5	;RP0=1, select bank1
  3661  0710  1303               	bcf	3,6	;RP1=0, select bank1
  3662  0711  139F               	bcf	31,7	;volatile
  3663  0712                     l1750:
  3664                           
  3665                           ;main.c: 344:     ADRESL = 0;
  3666  0712  019E               	clrf	30	;volatile
  3667                           
  3668                           ;main.c: 345:     ADRESH = 0;
  3669  0713  1283               	bcf	3,5	;RP0=0, select bank0
  3670  0714  1303               	bcf	3,6	;RP1=0, select bank0
  3671  0715  019E               	clrf	30	;volatile
  3672  0716                     l1752:
  3673                           
  3674                           ;main.c: 349:     ADCON0bits.ADON = 1;
  3675  0716  141F               	bsf	31,0	;volatile
  3676  0717                     l1754:
  3677                           
  3678                           ;main.c: 352:     ADCON0bits.CHS0 = 0;
  3679  0717  119F               	bcf	31,3	;volatile
  3680  0718                     l1756:
  3681                           
  3682                           ;main.c: 353:     ADCON0bits.CHS1 = 0;
  3683  0718  121F               	bcf	31,4	;volatile
  3684  0719                     l1758:
  3685                           
  3686                           ;main.c: 354:     ADCON0bits.CHS2 = 0;
  3687  0719  129F               	bcf	31,5	;volatile
  3688  071A                     l186:
  3689  071A  0008               	return
  3690  071B                     __end_of_setupADC:
  3691                           
  3692                           	psect	text22
  3693  03A9                     __ptext22:	
  3694 ;; *************** function _Lcd_Init *****************
  3695 ;; Defined at:
  3696 ;;		line 62 in file "./lcd.h"
  3697 ;; Parameters:    Size  Location     Type
  3698 ;;		None
  3699 ;; Auto vars:     Size  Location     Type
  3700 ;;		None
  3701 ;; Return value:  Size  Location     Type
  3702 ;;                  1    wreg      void 
  3703 ;; Registers used:
  3704 ;;		wreg, status,2, status,0, pclath, cstack
  3705 ;; Tracked objects:
  3706 ;;		On entry : 0/0
  3707 ;;		On exit  : 0/0
  3708 ;;		Unchanged: 0/0
  3709 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3710 ;;      Params:         0       0       0       0       0
  3711 ;;      Locals:         0       0       0       0       0
  3712 ;;      Temps:          2       0       0       0       0
  3713 ;;      Totals:         2       0       0       0       0
  3714 ;;Total ram usage:        2 bytes
  3715 ;; Hardware stack levels used: 1
  3716 ;; Hardware stack levels required when called: 5
  3717 ;; This function calls:
  3718 ;;		_Lcd_Cmd
  3719 ;;		_Lcd_Port
  3720 ;; This function is called by:
  3721 ;;		_main
  3722 ;; This function uses a non-reentrant model
  3723 ;;
  3724                           
  3725  03A9                     _Lcd_Init:	
  3726                           ;psect for function _Lcd_Init
  3727                           
  3728  03A9                     l2064:	
  3729                           ;incstack = 0
  3730                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  3731                           
  3732                           
  3733                           ;./lcd.h: 64:   Lcd_Port(0x00);
  3734  03A9  3000               	movlw	0
  3735  03AA  120A  118A  2638  120A  118A  	fcall	_Lcd_Port
  3736  03AF                     l2066:
  3737                           
  3738                           ;./lcd.h: 65:    _delay((unsigned long)((20)*(4000000/4000.0)));
  3739  03AF  301A               	movlw	26
  3740  03B0  00F8               	movwf	??_Lcd_Init+1
  3741  03B1  30F8               	movlw	248
  3742  03B2  00F7               	movwf	??_Lcd_Init
  3743  03B3                     u2147:
  3744  03B3  0BF7               	decfsz	??_Lcd_Init,f
  3745  03B4  2BB3               	goto	u2147
  3746  03B5  0BF8               	decfsz	??_Lcd_Init+1,f
  3747  03B6  2BB3               	goto	u2147
  3748  03B7  0000               	nop
  3749  03B8                     l2068:
  3750                           
  3751                           ;./lcd.h: 66:   Lcd_Cmd(0x03);
  3752  03B8  3003               	movlw	3
  3753  03B9  120A  118A  26B9  120A  118A  	fcall	_Lcd_Cmd
  3754                           
  3755                           ;./lcd.h: 67:  _delay((unsigned long)((5)*(4000000/4000.0)));
  3756  03BE  3007               	movlw	7
  3757  03BF  00F8               	movwf	??_Lcd_Init+1
  3758  03C0  307D               	movlw	125
  3759  03C1  00F7               	movwf	??_Lcd_Init
  3760  03C2                     u2157:
  3761  03C2  0BF7               	decfsz	??_Lcd_Init,f
  3762  03C3  2BC2               	goto	u2157
  3763  03C4  0BF8               	decfsz	??_Lcd_Init+1,f
  3764  03C5  2BC2               	goto	u2157
  3765  03C6                     l2070:
  3766                           
  3767                           ;./lcd.h: 68:   Lcd_Cmd(0x03);
  3768  03C6  3003               	movlw	3
  3769  03C7  120A  118A  26B9  120A  118A  	fcall	_Lcd_Cmd
  3770  03CC                     l2072:
  3771                           
  3772                           ;./lcd.h: 69:  _delay((unsigned long)((11)*(4000000/4000.0)));
  3773  03CC  300F               	movlw	15
  3774  03CD  00F8               	movwf	??_Lcd_Init+1
  3775  03CE  3047               	movlw	71
  3776  03CF  00F7               	movwf	??_Lcd_Init
  3777  03D0                     u2167:
  3778  03D0  0BF7               	decfsz	??_Lcd_Init,f
  3779  03D1  2BD0               	goto	u2167
  3780  03D2  0BF8               	decfsz	??_Lcd_Init+1,f
  3781  03D3  2BD0               	goto	u2167
  3782  03D4  2BD5               	nop2
  3783                           
  3784                           ;./lcd.h: 70:   Lcd_Cmd(0x03);
  3785  03D5  3003               	movlw	3
  3786  03D6  120A  118A  26B9  120A  118A  	fcall	_Lcd_Cmd
  3787                           
  3788                           ;./lcd.h: 72:   Lcd_Cmd(0x02);
  3789  03DB  3002               	movlw	2
  3790  03DC  120A  118A  26B9  120A  118A  	fcall	_Lcd_Cmd
  3791                           
  3792                           ;./lcd.h: 73:   Lcd_Cmd(0x02);
  3793  03E1  3002               	movlw	2
  3794  03E2  120A  118A  26B9  120A  118A  	fcall	_Lcd_Cmd
  3795                           
  3796                           ;./lcd.h: 74:   Lcd_Cmd(0x08);
  3797  03E7  3008               	movlw	8
  3798  03E8  120A  118A  26B9  120A  118A  	fcall	_Lcd_Cmd
  3799                           
  3800                           ;./lcd.h: 75:   Lcd_Cmd(0x00);
  3801  03ED  3000               	movlw	0
  3802  03EE  120A  118A  26B9  120A  118A  	fcall	_Lcd_Cmd
  3803                           
  3804                           ;./lcd.h: 76:   Lcd_Cmd(0x0C);
  3805  03F3  300C               	movlw	12
  3806  03F4  120A  118A  26B9  120A  118A  	fcall	_Lcd_Cmd
  3807                           
  3808                           ;./lcd.h: 77:   Lcd_Cmd(0x00);
  3809  03F9  3000               	movlw	0
  3810  03FA  120A  118A  26B9  120A  118A  	fcall	_Lcd_Cmd
  3811                           
  3812                           ;./lcd.h: 78:   Lcd_Cmd(0x06);
  3813  03FF  3006               	movlw	6
  3814  0400  120A  118A  26B9  120A  118A  	fcall	_Lcd_Cmd
  3815  0405                     l80:
  3816  0405  0008               	return
  3817  0406                     __end_of_Lcd_Init:
  3818                           
  3819                           	psect	text23
  3820  06B9                     __ptext23:	
  3821 ;; *************** function _Lcd_Cmd *****************
  3822 ;; Defined at:
  3823 ;;		line 26 in file "./lcd.h"
  3824 ;; Parameters:    Size  Location     Type
  3825 ;;  a               1    wreg     unsigned char 
  3826 ;; Auto vars:     Size  Location     Type
  3827 ;;  a               1    6[COMMON] unsigned char 
  3828 ;; Return value:  Size  Location     Type
  3829 ;;                  1    wreg      void 
  3830 ;; Registers used:
  3831 ;;		wreg, status,2, status,0, pclath, cstack
  3832 ;; Tracked objects:
  3833 ;;		On entry : 0/0
  3834 ;;		On exit  : 0/0
  3835 ;;		Unchanged: 0/0
  3836 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3837 ;;      Params:         0       0       0       0       0
  3838 ;;      Locals:         1       0       0       0       0
  3839 ;;      Temps:          2       0       0       0       0
  3840 ;;      Totals:         3       0       0       0       0
  3841 ;;Total ram usage:        3 bytes
  3842 ;; Hardware stack levels used: 1
  3843 ;; Hardware stack levels required when called: 4
  3844 ;; This function calls:
  3845 ;;		_Lcd_Port
  3846 ;; This function is called by:
  3847 ;;		_Lcd_Clear
  3848 ;;		_Lcd_Set_Cursor
  3849 ;;		_Lcd_Init
  3850 ;;		_Lcd_Shift_Right
  3851 ;;		_Lcd_Shift_Left
  3852 ;; This function uses a non-reentrant model
  3853 ;;
  3854                           
  3855  06B9                     _Lcd_Cmd:	
  3856                           ;psect for function _Lcd_Cmd
  3857                           
  3858                           
  3859                           ;incstack = 0
  3860 ;; hardware stack exceeded
  3861                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  3862                           ;Lcd_Cmd@a stored from wreg
  3863  06B9  00F6               	movwf	Lcd_Cmd@a
  3864  06BA                     l1804:
  3865                           
  3866                           ;./lcd.h: 26: void Lcd_Cmd(char a);./lcd.h: 27: {;./lcd.h: 28:  RD2 = 0;
  3867  06BA  1283               	bcf	3,5	;RP0=0, select bank0
  3868  06BB  1303               	bcf	3,6	;RP1=0, select bank0
  3869  06BC  1108               	bcf	8,2	;volatile
  3870  06BD                     l1806:
  3871                           
  3872                           ;./lcd.h: 29:  Lcd_Port(a);
  3873  06BD  0876               	movf	Lcd_Cmd@a,w
  3874  06BE  120A  118A  2638  120A  118A  	fcall	_Lcd_Port
  3875  06C3                     l1808:
  3876                           
  3877                           ;./lcd.h: 30:  RD3 = 1;
  3878  06C3  1283               	bcf	3,5	;RP0=0, select bank0
  3879  06C4  1303               	bcf	3,6	;RP1=0, select bank0
  3880  06C5  1588               	bsf	8,3	;volatile
  3881  06C6                     l1810:
  3882                           
  3883                           ;./lcd.h: 31:         _delay((unsigned long)((4)*(4000000/4000.0)));
  3884  06C6  3006               	movlw	6
  3885  06C7  00F5               	movwf	??_Lcd_Cmd+1
  3886  06C8  3030               	movlw	48
  3887  06C9  00F4               	movwf	??_Lcd_Cmd
  3888  06CA                     u2177:
  3889  06CA  0BF4               	decfsz	??_Lcd_Cmd,f
  3890  06CB  2ECA               	goto	u2177
  3891  06CC  0BF5               	decfsz	??_Lcd_Cmd+1,f
  3892  06CD  2ECA               	goto	u2177
  3893  06CE  0000               	nop
  3894  06CF                     l1812:
  3895                           
  3896                           ;./lcd.h: 32:         RD3 = 0;
  3897  06CF  1283               	bcf	3,5	;RP0=0, select bank0
  3898  06D0  1303               	bcf	3,6	;RP1=0, select bank0
  3899  06D1  1188               	bcf	8,3	;volatile
  3900  06D2                     l68:
  3901  06D2  0008               	return
  3902  06D3                     __end_of_Lcd_Cmd:
  3903                           
  3904                           	psect	text24
  3905  0638                     __ptext24:	
  3906 ;; *************** function _Lcd_Port *****************
  3907 ;; Defined at:
  3908 ;;		line 4 in file "./lcd.h"
  3909 ;; Parameters:    Size  Location     Type
  3910 ;;  a               1    wreg     unsigned char 
  3911 ;; Auto vars:     Size  Location     Type
  3912 ;;  a               1    3[COMMON] unsigned char 
  3913 ;; Return value:  Size  Location     Type
  3914 ;;                  1    wreg      void 
  3915 ;; Registers used:
  3916 ;;		wreg
  3917 ;; Tracked objects:
  3918 ;;		On entry : 0/0
  3919 ;;		On exit  : 0/0
  3920 ;;		Unchanged: 0/0
  3921 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3922 ;;      Params:         0       0       0       0       0
  3923 ;;      Locals:         1       0       0       0       0
  3924 ;;      Temps:          0       0       0       0       0
  3925 ;;      Totals:         1       0       0       0       0
  3926 ;;Total ram usage:        1 bytes
  3927 ;; Hardware stack levels used: 1
  3928 ;; Hardware stack levels required when called: 3
  3929 ;; This function calls:
  3930 ;;		Nothing
  3931 ;; This function is called by:
  3932 ;;		_Lcd_Cmd
  3933 ;;		_Lcd_Init
  3934 ;;		_Lcd_Write_Char
  3935 ;; This function uses a non-reentrant model
  3936 ;;
  3937                           
  3938  0638                     _Lcd_Port:	
  3939                           ;psect for function _Lcd_Port
  3940                           
  3941                           
  3942                           ;incstack = 0
  3943                           ; Regs used in _Lcd_Port: [wreg]
  3944                           ;Lcd_Port@a stored from wreg
  3945  0638  00F3               	movwf	Lcd_Port@a
  3946  0639                     l1794:
  3947                           
  3948                           ;./lcd.h: 4: void Lcd_Port(char a);./lcd.h: 5: {;./lcd.h: 6:  if(a & 1)
  3949  0639  1C73               	btfss	Lcd_Port@a,0
  3950  063A  2E3C               	goto	u1571
  3951  063B  2E3D               	goto	u1570
  3952  063C                     u1571:
  3953  063C  2E41               	goto	l57
  3954  063D                     u1570:
  3955  063D                     l1796:
  3956                           
  3957                           ;./lcd.h: 7:   RD4 = 1;
  3958  063D  1283               	bcf	3,5	;RP0=0, select bank0
  3959  063E  1303               	bcf	3,6	;RP1=0, select bank0
  3960  063F  1608               	bsf	8,4	;volatile
  3961  0640  2E44               	goto	l58
  3962  0641                     l57:	
  3963                           ;./lcd.h: 8:  else
  3964                           
  3965                           
  3966                           ;./lcd.h: 9:   RD4 = 0;
  3967  0641  1283               	bcf	3,5	;RP0=0, select bank0
  3968  0642  1303               	bcf	3,6	;RP1=0, select bank0
  3969  0643  1208               	bcf	8,4	;volatile
  3970  0644                     l58:
  3971                           
  3972                           ;./lcd.h: 11:  if(a & 2)
  3973  0644  1CF3               	btfss	Lcd_Port@a,1
  3974  0645  2E47               	goto	u1581
  3975  0646  2E48               	goto	u1580
  3976  0647                     u1581:
  3977  0647  2E4A               	goto	l59
  3978  0648                     u1580:
  3979  0648                     l1798:
  3980                           
  3981                           ;./lcd.h: 12:   RD5 = 1;
  3982  0648  1688               	bsf	8,5	;volatile
  3983  0649  2E4B               	goto	l60
  3984  064A                     l59:	
  3985                           ;./lcd.h: 13:  else
  3986                           
  3987                           
  3988                           ;./lcd.h: 14:   RD5 = 0;
  3989  064A  1288               	bcf	8,5	;volatile
  3990  064B                     l60:
  3991                           
  3992                           ;./lcd.h: 16:  if(a & 4)
  3993  064B  1D73               	btfss	Lcd_Port@a,2
  3994  064C  2E4E               	goto	u1591
  3995  064D  2E4F               	goto	u1590
  3996  064E                     u1591:
  3997  064E  2E51               	goto	l61
  3998  064F                     u1590:
  3999  064F                     l1800:
  4000                           
  4001                           ;./lcd.h: 17:   RD6 = 1;
  4002  064F  1708               	bsf	8,6	;volatile
  4003  0650  2E52               	goto	l62
  4004  0651                     l61:	
  4005                           ;./lcd.h: 18:  else
  4006                           
  4007                           
  4008                           ;./lcd.h: 19:   RD6 = 0;
  4009  0651  1308               	bcf	8,6	;volatile
  4010  0652                     l62:
  4011                           
  4012                           ;./lcd.h: 21:  if(a & 8)
  4013  0652  1DF3               	btfss	Lcd_Port@a,3
  4014  0653  2E55               	goto	u1601
  4015  0654  2E56               	goto	u1600
  4016  0655                     u1601:
  4017  0655  2E58               	goto	l63
  4018  0656                     u1600:
  4019  0656                     l1802:
  4020                           
  4021                           ;./lcd.h: 22:   RD7 = 1;
  4022  0656  1788               	bsf	8,7	;volatile
  4023  0657  2E59               	goto	l65
  4024  0658                     l63:	
  4025                           ;./lcd.h: 23:  else
  4026                           
  4027                           
  4028                           ;./lcd.h: 24:   RD7 = 0;
  4029  0658  1388               	bcf	8,7	;volatile
  4030  0659                     l65:
  4031  0659  0008               	return
  4032  065A                     __end_of_Lcd_Port:
  4033                           
  4034                           	psect	text25
  4035  0743                     __ptext25:	
  4036 ;; *************** function _interrupcao *****************
  4037 ;; Defined at:
  4038 ;;		line 190 in file "main.c"
  4039 ;; Parameters:    Size  Location     Type
  4040 ;;		None
  4041 ;; Auto vars:     Size  Location     Type
  4042 ;;		None
  4043 ;; Return value:  Size  Location     Type
  4044 ;;                  1    wreg      void 
  4045 ;; Registers used:
  4046 ;;		wreg, status,2, status,0, pclath, cstack
  4047 ;; Tracked objects:
  4048 ;;		On entry : 0/0
  4049 ;;		On exit  : 0/0
  4050 ;;		Unchanged: 0/0
  4051 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4052 ;;      Params:         0       0       0       0       0
  4053 ;;      Locals:         0       0       0       0       0
  4054 ;;      Temps:          2       0       0       0       0
  4055 ;;      Totals:         2       0       0       0       0
  4056 ;;Total ram usage:        2 bytes
  4057 ;; Hardware stack levels used: 1
  4058 ;; Hardware stack levels required when called: 2
  4059 ;; This function calls:
  4060 ;;		_handleExternalInterruption
  4061 ;;		_handleTimerInterruption
  4062 ;; This function is called by:
  4063 ;;		Interrupt level 1
  4064 ;; This function uses a non-reentrant model
  4065 ;;
  4066                           
  4067  0743                     _interrupcao:	
  4068                           ;psect for function _interrupcao
  4069                           
  4070  0743                     i1l1766:
  4071                           
  4072                           ;main.c: 192:     handleTimerInterruption();
  4073  0743  120A  118A  2593  120A  118A  	fcall	_handleTimerInterruption
  4074                           
  4075                           ;main.c: 193:     handleExternalInterruption();
  4076  0748  120A  118A  26D3  120A  118A  	fcall	_handleExternalInterruption
  4077  074D                     i1l140:
  4078  074D  0872               	movf	??_interrupcao+1,w
  4079  074E  008A               	movwf	10
  4080  074F  0E71               	swapf	??_interrupcao,w
  4081  0750  0083               	movwf	3
  4082  0751  0EFE               	swapf	btemp,f
  4083  0752  0E7E               	swapf	btemp,w
  4084  0753  0009               	retfie
  4085  0754                     __end_of_interrupcao:
  4086                           
  4087                           	psect	intentry
  4088  0004                     __pintentry:	
  4089                           ;incstack = 0
  4090 ;; hardware stack exceeded
  4091                           ; Regs used in _interrupcao: [wreg+status,2+status,0+pclath+cstack]
  4092                           
  4093  0004                     interrupt_function:
  4094  007E                     saved_w	set	btemp
  4095  0004  00FE               	movwf	btemp
  4096  0005  0E03               	swapf	3,w
  4097  0006  00F1               	movwf	??_interrupcao
  4098  0007  080A               	movf	10,w
  4099  0008  00F2               	movwf	??_interrupcao+1
  4100  0009  120A  118A  2F43   	ljmp	_interrupcao
  4101                           
  4102                           	psect	text26
  4103  0593                     __ptext26:	
  4104 ;; *************** function _handleTimerInterruption *****************
  4105 ;; Defined at:
  4106 ;;		line 136 in file "main.c"
  4107 ;; Parameters:    Size  Location     Type
  4108 ;;		None
  4109 ;; Auto vars:     Size  Location     Type
  4110 ;;		None
  4111 ;; Return value:  Size  Location     Type
  4112 ;;                  1    wreg      void 
  4113 ;; Registers used:
  4114 ;;		wreg, status,2, status,0
  4115 ;; Tracked objects:
  4116 ;;		On entry : 0/0
  4117 ;;		On exit  : 0/0
  4118 ;;		Unchanged: 0/0
  4119 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4120 ;;      Params:         0       0       0       0       0
  4121 ;;      Locals:         0       0       0       0       0
  4122 ;;      Temps:          1       0       0       0       0
  4123 ;;      Totals:         1       0       0       0       0
  4124 ;;Total ram usage:        1 bytes
  4125 ;; Hardware stack levels used: 1
  4126 ;; This function calls:
  4127 ;;		Nothing
  4128 ;; This function is called by:
  4129 ;;		_interrupcao
  4130 ;; This function uses a non-reentrant model
  4131 ;;
  4132                           
  4133  0593                     _handleTimerInterruption:	
  4134                           ;psect for function _handleTimerInterruption
  4135                           
  4136  0593                     i1l1686:	
  4137                           ;incstack = 0
  4138                           ; Regs used in _handleTimerInterruption: [wreg+status,2+status,0]
  4139                           
  4140                           
  4141                           ;main.c: 138:     if(TMR1IF){
  4142  0593  1283               	bcf	3,5	;RP0=0, select bank0
  4143  0594  1303               	bcf	3,6	;RP1=0, select bank0
  4144  0595  1C0C               	btfss	12,0	;volatile
  4145  0596  2D98               	goto	u149_21
  4146  0597  2D99               	goto	u149_20
  4147  0598                     u149_21:
  4148  0598  2DC7               	goto	i1l127
  4149  0599                     u149_20:
  4150  0599                     i1l1688:
  4151                           
  4152                           ;main.c: 139:         if(irrigacao_ativa){
  4153  0599  0879               	movf	_irrigacao_ativa,w
  4154  059A  047A               	iorwf	_irrigacao_ativa+1,w
  4155  059B  1903               	btfsc	3,2
  4156  059C  2D9E               	goto	u150_21
  4157  059D  2D9F               	goto	u150_20
  4158  059E                     u150_21:
  4159  059E  2DBD               	goto	i1l1704
  4160  059F                     u150_20:
  4161  059F                     i1l1690:
  4162                           
  4163                           ;main.c: 140:             timer_counter++;
  4164  059F  3001               	movlw	1
  4165  05A0  07D0               	addwf	_timer_counter,f
  4166  05A1  1803               	skipnc
  4167  05A2  0AD1               	incf	_timer_counter+1,f
  4168  05A3  3000               	movlw	0
  4169  05A4  07D1               	addwf	_timer_counter+1,f
  4170  05A5                     i1l1692:
  4171                           
  4172                           ;main.c: 141:             PORTBbits.RB1 = 1;
  4173  05A5  1486               	bsf	6,1	;volatile
  4174  05A6                     i1l1694:
  4175                           
  4176                           ;main.c: 142:             PORTBbits.RB6 = 1;
  4177  05A6  1706               	bsf	6,6	;volatile
  4178                           
  4179                           ;main.c: 143:             if(timer_counter_max <= timer_counter){
  4180  05A7  0851               	movf	_timer_counter+1,w
  4181  05A8  3A80               	xorlw	128
  4182  05A9  00F0               	movwf	??_handleTimerInterruption
  4183  05AA  084B               	movf	_timer_counter_max+1,w
  4184  05AB  3A80               	xorlw	128
  4185  05AC  0270               	subwf	??_handleTimerInterruption,w
  4186  05AD  1D03               	skipz
  4187  05AE  2DB1               	goto	u151_25
  4188  05AF  084A               	movf	_timer_counter_max,w
  4189  05B0  0250               	subwf	_timer_counter,w
  4190  05B1                     u151_25:
  4191  05B1  1C03               	skipc
  4192  05B2  2DB4               	goto	u151_21
  4193  05B3  2DB5               	goto	u151_20
  4194  05B4                     u151_21:
  4195  05B4  2DC0               	goto	i1l1708
  4196  05B5                     u151_20:
  4197  05B5                     i1l1696:
  4198                           
  4199                           ;main.c: 144:                 PORTBbits.RB1 = 0;
  4200  05B5  1283               	bcf	3,5	;RP0=0, select bank0
  4201  05B6  1303               	bcf	3,6	;RP1=0, select bank0
  4202  05B7  1086               	bcf	6,1	;volatile
  4203  05B8                     i1l1698:
  4204                           
  4205                           ;main.c: 145:                 irrigacao_ativa = 0;
  4206  05B8  01F9               	clrf	_irrigacao_ativa
  4207  05B9  01FA               	clrf	_irrigacao_ativa+1
  4208  05BA                     i1l1700:
  4209                           
  4210                           ;main.c: 146:                 PORTBbits.RB6 = 0;
  4211  05BA  1306               	bcf	6,6	;volatile
  4212  05BB                     i1l1702:
  4213                           
  4214                           ;main.c: 149:                 T1CONbits.TMR1ON = 0;
  4215  05BB  1010               	bcf	16,0	;volatile
  4216  05BC  2DC0               	goto	i1l1708
  4217  05BD                     i1l1704:
  4218                           
  4219                           ;main.c: 153:             timer_counter = 0;
  4220  05BD  01D0               	clrf	_timer_counter
  4221  05BE  01D1               	clrf	_timer_counter+1
  4222  05BF                     i1l1706:
  4223                           
  4224                           ;main.c: 154:             PORTBbits.RB1 = 0;
  4225  05BF  1086               	bcf	6,1	;volatile
  4226  05C0                     i1l1708:
  4227                           
  4228                           ;main.c: 156:         PIR1bits.TMR1IF = 0;
  4229  05C0  1283               	bcf	3,5	;RP0=0, select bank0
  4230  05C1  1303               	bcf	3,6	;RP1=0, select bank0
  4231  05C2  100C               	bcf	12,0	;volatile
  4232  05C3                     i1l1710:
  4233                           
  4234                           ;main.c: 157:         TMR1H = 0x0B;
  4235  05C3  300B               	movlw	11
  4236  05C4  008F               	movwf	15	;volatile
  4237  05C5                     i1l1712:
  4238                           
  4239                           ;main.c: 158:         TMR1L = 0xDC;
  4240  05C5  30DC               	movlw	220
  4241  05C6  008E               	movwf	14	;volatile
  4242  05C7                     i1l127:
  4243  05C7  0008               	return
  4244  05C8                     __end_of_handleTimerInterruption:
  4245                           
  4246                           	psect	text27
  4247  06D3                     __ptext27:	
  4248 ;; *************** function _handleExternalInterruption *****************
  4249 ;; Defined at:
  4250 ;;		line 177 in file "main.c"
  4251 ;; Parameters:    Size  Location     Type
  4252 ;;		None
  4253 ;; Auto vars:     Size  Location     Type
  4254 ;;		None
  4255 ;; Return value:  Size  Location     Type
  4256 ;;                  1    wreg      void 
  4257 ;; Registers used:
  4258 ;;		wreg, status,2, status,0, pclath, cstack
  4259 ;; Tracked objects:
  4260 ;;		On entry : 0/0
  4261 ;;		On exit  : 0/0
  4262 ;;		Unchanged: 0/0
  4263 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4264 ;;      Params:         0       0       0       0       0
  4265 ;;      Locals:         0       0       0       0       0
  4266 ;;      Temps:          0       0       0       0       0
  4267 ;;      Totals:         0       0       0       0       0
  4268 ;;Total ram usage:        0 bytes
  4269 ;; Hardware stack levels used: 1
  4270 ;; Hardware stack levels required when called: 1
  4271 ;; This function calls:
  4272 ;;		i1_irrigar
  4273 ;; This function is called by:
  4274 ;;		_interrupcao
  4275 ;; This function uses a non-reentrant model
  4276 ;;
  4277                           
  4278  06D3                     _handleExternalInterruption:	
  4279                           ;psect for function _handleExternalInterruption
  4280                           
  4281  06D3                     i1l1716:	
  4282                           ;incstack = 0
  4283 ;; hardware stack exceeded
  4284                           ; Regs used in _handleExternalInterruption: [wreg+status,2+status,0+pclath+cstack]
  4285                           
  4286                           
  4287                           ;main.c: 179:     if(INTF){
  4288  06D3  1C8B               	btfss	11,1	;volatile
  4289  06D4  2ED6               	goto	u152_21
  4290  06D5  2ED7               	goto	u152_20
  4291  06D6                     u152_21:
  4292  06D6  2EEB               	goto	i1l135
  4293  06D7                     u152_20:
  4294  06D7                     i1l1718:
  4295                           
  4296                           ;main.c: 180:         if(!irrigacao_ativa && ext_int_ativa){
  4297  06D7  0879               	movf	_irrigacao_ativa,w
  4298  06D8  047A               	iorwf	_irrigacao_ativa+1,w
  4299  06D9  1D03               	btfss	3,2
  4300  06DA  2EDC               	goto	u153_21
  4301  06DB  2EDD               	goto	u153_20
  4302  06DC                     u153_21:
  4303  06DC  2EEA               	goto	i1l1724
  4304  06DD                     u153_20:
  4305  06DD                     i1l1720:
  4306  06DD  1283               	bcf	3,5	;RP0=0, select bank0
  4307  06DE  1303               	bcf	3,6	;RP1=0, select bank0
  4308  06DF  084C               	movf	_ext_int_ativa,w
  4309  06E0  044D               	iorwf	_ext_int_ativa+1,w
  4310  06E1  1903               	btfsc	3,2
  4311  06E2  2EE4               	goto	u154_21
  4312  06E3  2EE5               	goto	u154_20
  4313  06E4                     u154_21:
  4314  06E4  2EEA               	goto	i1l1724
  4315  06E5                     u154_20:
  4316  06E5                     i1l1722:
  4317                           
  4318                           ;main.c: 183:             irrigar();
  4319  06E5  120A  118A  276B  120A  118A  	fcall	i1_irrigar
  4320  06EA                     i1l1724:
  4321                           
  4322                           ;main.c: 185:         INTCONbits.INTF = 0;
  4323  06EA  108B               	bcf	11,1	;volatile
  4324  06EB                     i1l135:
  4325  06EB  0008               	return
  4326  06EC                     __end_of_handleExternalInterruption:
  4327                           
  4328                           	psect	text28
  4329  076B                     __ptext28:	
  4330 ;; *************** function i1_irrigar *****************
  4331 ;; Defined at:
  4332 ;;		line 164 in file "main.c"
  4333 ;; Parameters:    Size  Location     Type
  4334 ;;		None
  4335 ;; Auto vars:     Size  Location     Type
  4336 ;;		None
  4337 ;; Return value:  Size  Location     Type
  4338 ;;                  1    wreg      void 
  4339 ;; Registers used:
  4340 ;;		wreg, status,2
  4341 ;; Tracked objects:
  4342 ;;		On entry : 0/0
  4343 ;;		On exit  : 0/0
  4344 ;;		Unchanged: 0/0
  4345 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4346 ;;      Params:         0       0       0       0       0
  4347 ;;      Locals:         0       0       0       0       0
  4348 ;;      Temps:          0       0       0       0       0
  4349 ;;      Totals:         0       0       0       0       0
  4350 ;;Total ram usage:        0 bytes
  4351 ;; Hardware stack levels used: 1
  4352 ;; This function calls:
  4353 ;;		Nothing
  4354 ;; This function is called by:
  4355 ;;		_handleExternalInterruption
  4356 ;; This function uses a non-reentrant model
  4357 ;;
  4358                           
  4359  076B                     i1_irrigar:	
  4360                           ;psect for function i1_irrigar
  4361                           
  4362  076B                     i1l1660:	
  4363                           ;incstack = 0
  4364 ;; hardware stack exceeded
  4365                           ; Regs used in i1_irrigar: [wreg+status,2]
  4366                           
  4367                           
  4368                           ;main.c: 165:     irrigacao_ativa = 1;
  4369  076B  3001               	movlw	1
  4370  076C  00F9               	movwf	_irrigacao_ativa
  4371  076D  3000               	movlw	0
  4372  076E  00FA               	movwf	_irrigacao_ativa+1
  4373  076F                     i1l1662:
  4374                           
  4375                           ;main.c: 166:     timer_counter = 0;
  4376  076F  1283               	bcf	3,5	;RP0=0, select bank0
  4377  0770  1303               	bcf	3,6	;RP1=0, select bank0
  4378  0771  01D0               	clrf	_timer_counter
  4379  0772  01D1               	clrf	_timer_counter+1
  4380  0773                     i1l1664:
  4381                           
  4382                           ;main.c: 168:     T1CONbits.TMR1ON = 1;
  4383  0773  1410               	bsf	16,0	;volatile
  4384  0774                     i1l130:
  4385  0774  0008               	return
  4386  0775                     __end_ofi1_irrigar:
  4387  007E                     btemp	set	126	;btemp
  4388  007E                     wtemp0	set	126

Data Sizes:
    Strings     27
    Constant    0
    Data        8
    BSS         8
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      11
    BANK0            80     36      50
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 15
		 -> STR_2(CODE[12]), STR_1(CODE[15]), 


Critical Paths under _main in COMMON

    _main->_Lcd_Init
    _getADConverterValue->___fltol
    _getADConverterValue->___wmul
    ___xxtofl->___wmul
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Clear->_Lcd_Cmd
    _setupNewVolumeFlow->___wmul
    ___awdiv->___wmul
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _interrupcao in COMMON

    _interrupcao->_handleTimerInterruption

Critical Paths under _main in BANK0

    _main->_verifySensor
    _verifySensor->_getADConverterValue
    _getADConverterValue->___xxtofl
    ___xxtofl->___awdiv
    _verifyMenu->_handleMenu
    _handleMenu->_writeValor
    _writeValor->___awdiv
    _setupTimer->_setupNewVolumeFlow
    _setupNewVolumeFlow->_changeTimerMaxConter
    _changeTimerMaxConter->___awdiv
    ___awdiv->___awmod

Critical Paths under _interrupcao in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _interrupcao in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _interrupcao in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _interrupcao in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   11599
                                             34 BANK0      2     2      0
                           _Lcd_Init
                           _setupADC
          _setupExternalInterruption
                         _setupTimer
                 _setupWatchdogTimer
                         _verifyMenu
                       _verifySensor
 ---------------------------------------------------------------------------------
 (1) _verifySensor                                         1     1      0    2298
                                             33 BANK0      1     1      0
                _getADConverterValue
                            _irrigar
 ---------------------------------------------------------------------------------
 (2) _irrigar                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _getADConverterValue                                  8     6      2    2298
                                             25 BANK0      8     6      2
                            ___awdiv
                            ___fltol
                             ___wmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     398
                                             11 BANK0     14    10      4
                            ___awdiv (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             11     7      4     305
                                              3 COMMON     6     2      4
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (1) _verifyMenu                                           3     3      0    7306
                                             24 BANK0      3     3      0
                         _handleMenu
 ---------------------------------------------------------------------------------
 (2) _handleMenu                                           7     7      0    7306
                                             17 BANK0      7     7      0
                          _Lcd_Clear
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                 _setupNewVolumeFlow
                         _writeValor
 ---------------------------------------------------------------------------------
 (3) _writeValor                                           6     4      2    3762
                                             11 BANK0      6     4      2
                     _Lcd_Set_Cursor
                     _Lcd_Write_Char
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              7     3      4     793
                                              3 COMMON     5     1      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (4) _Lcd_Set_Cursor                                       7     6      1     815
                                              7 COMMON     1     0      1
                                              0 BANK0      6     6      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (3) _Lcd_Write_String                                     3     3      0     456
                                              0 BANK0      3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (4) _Lcd_Write_Char                                       4     4      0     254
                                              4 COMMON     4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Clear                                            0     0      0     155
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _setupWatchdogTimer                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setupTimer                                           0     0      0    1716
                 _setupNewVolumeFlow
 ---------------------------------------------------------------------------------
 (3) _setupNewVolumeFlow                                   2     2      0    1716
                                             13 BANK0      2     2      0
                             ___wmul
               _changeTimerMaxConter
 ---------------------------------------------------------------------------------
 (4) _changeTimerMaxConter                                 2     0      2    1286
                                             11 BANK0      2     0      2
                            ___awdiv
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    1165
                                              2 BANK0      9     5      4
                            ___awmod (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     396
                                              3 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) _setupExternalInterruption                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setupADC                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     279
                                              7 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (5) _Lcd_Cmd                                              3     3      0     155
                                              4 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (5) _Lcd_Port                                             1     1      0     124
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _interrupcao                                          2     2      0       0
                                              1 COMMON     2     2      0
         _handleExternalInterruption
            _handleTimerInterruption
 ---------------------------------------------------------------------------------
 (8) _handleTimerInterruption                              1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (8) _handleExternalInterruption                           0     0      0       0
                          i1_irrigar
 ---------------------------------------------------------------------------------
 (9) i1_irrigar                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _setupADC
   _setupExternalInterruption
   _setupTimer
     _setupNewVolumeFlow
       ___wmul
       _changeTimerMaxConter
         ___awdiv
           ___awmod (ARG)
           ___wmul (ARG)
   _setupWatchdogTimer
   _verifyMenu
     _handleMenu
       _Lcd_Clear
         _Lcd_Cmd
       _Lcd_Set_Cursor
         _Lcd_Cmd
       _Lcd_Write_String
         _Lcd_Write_Char
           _Lcd_Port
       _setupNewVolumeFlow
       _writeValor
         _Lcd_Set_Cursor
         _Lcd_Write_Char
         ___awdiv
         ___awmod
   _verifySensor
     _getADConverterValue
       ___awdiv
       ___fltol
       ___wmul
       ___xxtofl
         ___awdiv (ARG)
         ___wmul (ARG)
     _irrigar

 _interrupcao (ROOT)
   _handleExternalInterruption
     i1_irrigar
   _handleTimerInterruption

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     24      32       5       62.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      9       B       1       78.6%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      3D      12        0.0%
ABS                  0      0      3D       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Fri Mar 04 18:58:25 2022

                                 pc 0002                     writeValor@valor 002B  
                                l60 064B                                  l61 0651  
                                l62 0652                                  l63 0658  
                                l71 0760                                  l80 0405  
                                l65 0659                                  l57 0641  
                                l58 0644                                  l59 064A  
                                l83 0592                                  l68 06D2  
                                l77 0512                                  l89 05F0  
                      ___awdiv@sign 0028                    writeValor@dezena 002F  
                                fsr 0004                 ___wmul@multiplicand 0075  
                   _irrigacao_ativa 0079                                 l120 072F  
                               l114 0703                                 l130 076A  
                               l117 06B8                                 l150 0034  
                               l143 078B                                 l146 033F  
                               l172 0699                                 l180 0637  
                               l166 0186                                 l158 00D9  
                               l183 0784                                 l175 04BA  
                               l280 05FD                                 l168 0199  
                               l433 03A8                                 l186 071A  
                               l282 0615                                 l178 0634  
                               l446 0460                                 l473 02BC  
                               l713 01BE                                 l466 02D1  
                               l715 0255                                 l476 02D1  
                               l726 021F                                 l727 022B  
                               l719 0203                                 _RD2 0042  
                               _RD3 0043                                 _RD4 0044  
                               _RD5 0045                                 _RD6 0046  
                               _RD7 0047                                 u980 05F7  
                               u981 05F6                                 u995 05FE  
                 writeValor@centena 002E                                 fsr0 0004  
                               indf 0000                        ___awmod@sign 0021  
      ??_handleExternalInterruption 0070                        ___fltol@exp1 0078  
                              l2000 00D3                                l2010 00FD  
                              l2002 00DA                                l2012 0103  
                              l2020 0120                                l2004 00E4  
                              l2030 0148                                l2022 0126  
                              l2014 0107                                l2006 00EC  
                              l2110 051D                                l1400 05F1  
                              l2040 0164                                l2024 012C  
                              l2032 0152                                l2016 010C  
                              l2008 00F2                                l2120 052E  
                              l2112 0520                                l2104 0513  
                              l1410 0611                                l1402 05F3  
                              l2050 0194                                l2042 016D  
                              l2034 0158                                l2026 0139  
                              l2018 0112                                l2122 0538  
                              l2114 0521                                l2106 0519  
                              l1404 05F7                                l2036 015E  
                              l2028 013D                                l2044 0177  
                              l1500 02B1                                l2060 04A7  
                              l2124 054D                                l2116 0524  
                              l2108 051A                                l2070 03C6  
                              l1406 0604                                l2046 0180  
                              l2038 0162                                l1502 02C1  
                              l1510 01A6                                l2054 0461  
                              l2126 0552                                l2118 0529  
                              l2072 03CC                                l2064 03A9  
                              l1408 060B                                l2080 072A  
                              l2048 018B                                l1504 02C6  
                              l1520 01D4                                l1512 01B6  
                              l2056 0464                                l2066 03AF  
                              l2074 071B                                l2090 0694  
                              l1530 020A                                l1522 01E1  
                              l1514 01C6                                l1506 019D  
                              l2058 046B                                l2068 03B8  
                              l2076 0725                                l2084 067B  
                              l1540 0243                                l1532 0215  
                              l1524 01E8                                l1508 01A2  
                              l2078 0729                                l2086 0681  
                              l1470 0256                                l1542 0248  
                              l1534 0219                                l1526 01EC  
                              l1518 01CF                                l1550 0761  
                              l2094 0616                                l1800 064F  
                              l2088 0685                                l1480 0282  
                              l1472 0263                                l1544 024C  
                              l1536 0223                                l1528 01FA  
                              l1552 0765                                l2096 062B  
                              l1802 0656                                l1810 06C6  
                              l1482 028A                                l1546 024D  
                              l1538 022D                                l1554 0769  
                              l2098 062E                                l1812 06CF  
                              l1804 06BA                                l1820 034C  
                              l1900 0701                                l1492 0298  
                              l1484 028C                                l1476 026C  
                              l1806 06BD                                l1750 0712  
                              l1830 035D                                l1822 034E  
                              l1814 0340                                l1910 0412  
                              l1486 0290                                l1494 02AA  
                              l1478 0281                                l1808 06C3  
                              l1752 0716                                l1728 0785  
                              l1840 0375                                l1832 0363  
                              l1824 0352                                l1816 0343  
                              l1920 0426                                l1912 0414  
                              l1904 0406                                l1754 0717  
                              l1842 0386                                l1834 0366  
                              l1850 039A                                l1826 0357  
                              l1818 0347                                l1746 077D  
                              l1930 0445                                l1922 042D  
                              l1914 0418                                l1906 0409  
                              l1756 0718                                l1748 0704  
                              l1852 039F                                l1844 038C  
                              l1836 036D                                l1828 035B  
                              l1860 04C3                                l1932 044C  
                              l1924 0431                                l1916 041D  
                              l1908 040D                                l1758 0719  
                              l1854 03A4                                l1846 038D  
                              l1838 0371                                l1942 0754  
                              l1950 05E3                                l1870 04EE  
                              l1862 04D4                                l1926 0435  
                              l1918 0423                                l1934 0452  
                              l1848 0394                                l1952 069A  
                              l1880 0567                                l1944 05CB  
                              l1872 04FF                                l1864 04D9  
                              l1936 0457                                l1928 043F  
                              l1960 0029                                l1794 0639  
                              l1890 0582                                l1882 056A  
                              l1946 05CE                                l1874 0504  
                              l1866 04DF                                l1858 04BE  
                              l1938 045C                                l1970 0058  
                              l1962 0035                                l1796 063D  
                              l1892 0588                                l1884 0578  
                              l1948 05DB                                l1876 050A  
                              l1868 04E8                                l1956 02D2  
                              l1980 008D                                l1972 005E  
                              l1964 003F                                l1798 0648  
                              l1894 058B                                l1886 057B  
                              l1878 055D                                l1990 00B2  
                              l1982 0091                                l1974 0074  
                              l1966 0047                                l1896 058F  
                              l1888 057F                                l1992 00B6  
                              l1984 009C                                l1976 007A  
                              l1968 004D                                l1898 06EC  
                              l1994 00B8                                l1978 0080  
                              l1986 00A6                                l1996 00C1  
                              l1988 00AC                                l1998 00CB  
        __end_of_setupNewVolumeFlow 06B9                                STR_1 0660  
                              STR_2 066F                                u1010 0611  
                              u1011 0610                                u1005 0605  
                              u1200 02C1                                u1120 0263  
                              u2000 062B                                u1201 02C0  
                              u1121 0262                                u2001 062A  
                 writeValor@unidade 0030                                u1210 02C6  
                              u1130 027A                                u1211 02C5  
                              u1140 0290                                u1300 0219  
                              u1220 01A2                                u1141 028F  
                              u1301 0218                                u1221 01A1  
                              u2005 0627                                u1150 0297  
                              u1310 021F                                u1230 01A6  
                              u1151 0296                                u1135 0275  
                              u1311 021E                                u1231 01A5  
                              u1320 0223                                u1240 01C6  
                              u1321 0222                                u1241 01C5  
                              u2017 0543                                u1170 02A9  
                              u1330 0238                                u2107 014E  
                              u1171 02A8                                u2027 0468  
                              u1180 02B0                                u1340 0248  
                              u1260 01E7                                u2117 0173  
                              u2037 068E                                u1181 02AF  
                              u1165 0299                                u1341 0247  
                              u1261 01E6                                u1350 024C  
                              u2127 057D                                u2047 003B  
                              u1351 024B                                u1335 0233  
                              u1255 01D9                                u1600 0656  
                              u1280 0209                                u1601 0655  
                              u2137 058D                                u2057 006E  
                              u1281 0208                                u1610 0347  
                              u2147 03B3                                u1611 0346  
                              u2067 00A2                                u1195 02B3  
                              u1275 01FB                                u1700 039F  
                              u1620 0352                                u2157 03C2  
                              u1701 039E                                u1621 0351  
                              u2077 00C7                                u1630 0363  
                              u1710 04C3                                u2167 03D0  
                              u1631 0362                                u1711 04C2  
                              u2087 00E0                                u1295 020E  
                              u1800 0435                                u2177 06CA  
                              u1801 0434                                u2097 011A  
                              u1570 063D                                u1650 0375  
                              u1730 04EE                                u1810 043F  
                              u1571 063C                                u1651 0374  
                              u1731 04ED                                u1811 043E  
                              u1580 0648                                u1900 00B6  
                              u1581 0647                                u1645 0367  
                              u1725 04CB                                u1901 00B5  
                              u1590 064F                                u1670 0386  
                              u1830 0452                                u1910 00D3  
                              u1591 064E                                u1671 0385  
                              u1831 0451                                u1815 043B  
                              u1911 00D2                                u1840 0457  
                              u1760 040D                                u1920 0103  
                              u1665 0376                                u1745 04F6  
                              u1841 0456                                u1825 0446  
                              u1761 040C                                u1921 0102  
                              u1690 039A                                u1850 05F0  
                              u1770 0418                                u1930 0126  
                              u1691 0399                                u1675 0382  
                              u1755 056D                                u1851 05EF  
                              u1771 0417                                u1931 0125  
                              u1780 0423                                u1940 0139  
                              u1860 005E                                u1685 038E  
                              u1781 0422                                u1941 0138  
                              u1861 005D                                u1950 0158  
                              u1870 007A                                u1951 0157  
                              u1871 0079                                u1960 0162  
                              u1880 008D                                u1961 0161  
                              u1945 0135                                u1881 008C  
                              u1970 0180                                u1890 00AC  
                              u1795 0427                                u1971 017F  
                              u1891 00AB                                u1980 0194  
                              u1981 0193                                u1885 0089  
                              u1990 0681                                _INTF 0059  
                              u1991 0680               ??_getADConverterValue 003B  
                 ?_Lcd_Write_String 0070                                _main 0513  
                              btemp 007E                                start 000C  
                ??_Lcd_Write_String 0078                     __end_of_Lcd_Cmd 06D3  
       ?_handleExternalInterruption 0070                       ___fltol@sign1 0077  
                             ?_main 0070                     __end_of___awdiv 03A9  
                   __end_of___awmod 0461                     __end_of___fltol 02D2  
                   ___awdiv@divisor 0022                               i1l130 0774  
                             i1l140 074D                               i1l135 06EB  
                             i1l127 05C7                     ___awdiv@counter 0027  
                             _TMR1H 000F                               _TMR1L 000E  
                             _PORTB 0006                               _PORTC 0007  
                             _TRISA 0085                               _TRISB 0086  
                             _TRISC 0087                               _TRISD 0088  
                             _MLxMS 0044                   _timer_counter_max 004A  
                   __end_of_irrigar 076B                               pclath 000A  
                             status 0003                               wtemp0 007E  
                  __end_of_Lcd_Init 0406                    __end_of_Lcd_Port 065A  
                   __initialization 000F                        ?_interrupcao 0070  
                      __end_of_main 055C                              ??_main 0042  
          setupNewVolumeFlow@new_ms 002D            ?_handleTimerInterruption 0070  
                            _ADRESH 001E                              _ADRESL 009E  
                  ___awdiv@dividend 0024                              i1l1700 05BA  
                            i1l1710 05C3                              i1l1702 05BB  
                            i1l1720 06DD                              i1l1712 05C5  
                            i1l1704 05BD                              i1l1722 06E5  
                            i1l1706 05BF                              i1l1660 076B  
                            i1l1724 06EA                              i1l1716 06D3  
                            i1l1708 05C0                              i1l1662 076F  
                            i1l1718 06D7                              i1l1664 0773  
                            i1l1690 059F                              i1l1692 05A5  
                            i1l1694 05A6                              i1l1686 0593  
                            i1l1766 0743                              i1l1696 05B5  
                            i1l1688 0599                              i1l1698 05B8  
                            u150_20 059F                              u150_21 059E  
                            u151_20 05B5                              u151_21 05B4  
                            u151_25 05B1                              u152_20 06D7  
                            u152_21 06D6                              u153_20 06DD  
                            u153_21 06DC                              u154_20 06E5  
                            u154_21 06E4                              u149_20 0599  
                            u149_21 0598                           ??_Lcd_Cmd 0074  
                            _TMR1IF 0060                    __end_of___xxtofl 0256  
 __end_of_setupExternalInterruption 078C                              ___wmul 05F1  
                         ??___awdiv 0026                           ??___awmod 0077  
                         ??___fltol 0020                    ___awdiv@quotient 0029  
                   ___awmod@divisor 0073                     ___awmod@counter 0020  
                  __end_of_setupADC 071B                           ??_irrigar 0073  
                            saved_w 007E                     Lcd_Set_Cursor@a 0022  
                   Lcd_Set_Cursor@b 0077                     Lcd_Set_Cursor@y 0024  
                   Lcd_Set_Cursor@z 0023                   __end_ofi1_irrigar 0775  
                      ___xxtofl@arg 0035                        ___xxtofl@exp 0034  
                      ___xxtofl@val 002B             __end_of__initialization 0025  
                 __end_of_Lcd_Clear 0761                          ___fltol@f1 0073  
                    __pcstackCOMMON 0070                        __pidataBANK0 0775  
                    _Lcd_Set_Cursor 04BB                      _OPTION_REGbits 0081  
                         ?_Lcd_Init 0070                           ?_Lcd_Port 0070  
                        __pbssBANK0 004C                          __pmaintext 0513  
                _setupNewVolumeFlow 069A                             ?___wmul 0073  
                  handleMenu@volume 0034        __end_of_changeTimerMaxConter 0704  
                        __pintentry 0004                          _handleMenu 0029  
            __end_of_Lcd_Set_Cursor 0513                 ?_setupNewVolumeFlow 0070  
                         ?___xxtofl 002B         __end_of_getADConverterValue 04BB  
                        ??_Lcd_Init 0077                          ??_Lcd_Port 0073  
                        __stringtab 065A                      _Lcd_Write_Char 055C  
                           _Lcd_Cmd 06B9                ??_setupNewVolumeFlow 0079  
                         ?_setupADC 0070                             ___awdiv 0340  
                           ___awmod 0406                             ___fltol 0256  
                   ?_Lcd_Set_Cursor 0077                             __ptext1 0616  
                           __ptext2 0761                             __ptext3 0461  
                           __ptext4 019A                             __ptext5 0256  
                           __ptext6 067B                             __ptext7 0029  
                           __ptext8 02D2                             __ptext9 0406  
                         _T1CONbits 0010                          ??___xxtofl 002F  
                  ___awmod@dividend 0075                             _irrigar 0761  
                     _ext_int_ativa 004C              __end_of_Lcd_Write_Char 0593  
              end_of_initialization 0025                          ??_setupADC 0073  
                         Lcd_Port@a 0073                         ?_handleMenu 0070  
                         _PORTBbits 0006                          _setupTimer 071B  
                        _setup_menu 004E                          _verifyMenu 067B  
                     ___xxtofl@sign 0033                     ?_Lcd_Write_Char 0070  
                 Lcd_Write_String@a 0022                   Lcd_Write_String@i 0020  
              _changeTimerMaxConter 06EC          __end_of_setupWatchdogTimer 0785  
                     ?_verifySensor 0070                           i1_irrigar 076B  
        ?_setupExternalInterruption 0070                           _Lcd_Clear 0754  
                        _writeValor 02D2                      __end_of___wmul 0616  
                  _Lcd_Write_String 05C8                 start_initialization 000F  
             ?_changeTimerMaxConter 002B                      ??_verifySensor 0041  
                        ?i1_irrigar 0070                          ?_Lcd_Clear 0070  
                          ??___wmul 0077                          init_fetch0 0730  
                       __pdataBANK0 0044          getADConverterValue@leitura 003D  
                   Lcd_Write_Char@a 0077                     Lcd_Write_Char@y 0076  
                       ?_setupTimer 0070                         __pbssCOMMON 0079  
                       ?_verifyMenu 0070                           ___latbits 0002  
                     __pcstackBANK0 0020                            ?_Lcd_Cmd 0070  
           _handleTimerInterruption 0593                       ??_interrupcao 0071  
                  ??_Lcd_Set_Cursor 0020                   handleMenu@umidade 0036  
                          ?___awdiv 0022                            ?___awmod 0073  
                          ?___fltol 0073                         ?_writeValor 002B  
                         __pstrings 065A                            ?_irrigar 0070  
            ??_changeTimerMaxConter 0079                   interrupt_function 0004  
                    ___wmul@product 0077                            _PIE1bits 008C  
                       ??i1_irrigar 0070                            Lcd_Cmd@a 0076  
                          _PIR1bits 000C                         ??_Lcd_Clear 0077  
                      ??_handleMenu 0031                 __end_of_interrupcao 0754  
                        _ADCON0bits 001F                         __stringbase 065F  
                        _ADCON1bits 009F                   ___wmul@multiplier 0073  
              __end_of_verifySensor 0638                    ??_Lcd_Write_Char 0074  
                          _Lcd_Init 03A9                            _Lcd_Port 0638  
         ??_handleTimerInterruption 0070            __end_of_Lcd_Write_String 05F1  
                __end_of_handleMenu 019A         ??_setupExternalInterruption 0073  
                _setupWatchdogTimer 077D  __end_of_handleExternalInterruption 06EC  
        _handleExternalInterruption 06D3                  __end_of__stringtab 0660  
                          ___xxtofl 019A                 ?_setupWatchdogTimer 0070  
                          __ptext10 04BB                            __ptext11 05C8  
                          __ptext20 0785                            __ptext12 055C  
                          __ptext21 0704                            __ptext13 0754  
                          __ptext22 03A9                            __ptext14 077D  
                          __ptext23 06B9                            __ptext15 071B  
                          __ptext24 0638                            __ptext16 069A  
                          __ptext25 0743                            __ptext17 06EC  
                          __ptext26 0593                            __ptext18 0340  
                          __ptext27 06D3                            __ptext19 05F1  
                          __ptext28 076B          changeTimerMaxConter@mili_s 002B  
              ??_setupWatchdogTimer 0073                            _setupADC 0704  
                       _interrupcao 0743     __end_of_handleTimerInterruption 05C8  
                    _umidade_minima 0048                       _timer_counter 0050  
                      ??_setupTimer 0079                          _INTCONbits 000B  
                      ??_verifyMenu 0038           _setupExternalInterruption 0785  
                          init_ram0 0734                  Lcd_Write_Char@temp 0075  
                          intlevel1 0000                  __end_of_setupTimer 0730  
                         stringcode 065A                  __end_of_verifyMenu 069A  
                      ??_writeValor 002D                  Lcd_Set_Cursor@temp 0025  
               _getADConverterValue 0461                            stringdir 065A  
                          stringtab 065A                        _water_volume 0046  
              ?_getADConverterValue 0039                  __end_of_writeValor 0340  
                      _verifySensor 0616  
