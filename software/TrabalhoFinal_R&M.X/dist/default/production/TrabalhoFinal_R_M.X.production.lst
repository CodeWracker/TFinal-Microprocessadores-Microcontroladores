

Microchip MPLAB XC8 Assembler V2.35 build 20211206165544 
                                                                                               Fri Mar 04 18:38:41 2022

Microchip MPLAB XC8 C Compiler v2.35 (Free license) build 20211206165544 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	inittext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2
    31                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    32                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    33                           	psect	text20,local,class=CODE,merge=1,delta=2
    34                           	psect	text21,local,class=CODE,merge=1,delta=2
    35                           	psect	text22,local,class=CODE,merge=1,delta=2
    36                           	psect	text23,local,class=CODE,merge=1,delta=2
    37                           	psect	text24,local,class=CODE,merge=1,delta=2
    38                           	psect	text25,local,class=CODE,merge=1,delta=2
    39                           	psect	intentry,global,class=CODE,delta=2
    40                           	psect	text26,local,class=CODE,merge=1,delta=2
    41                           	psect	text27,local,class=CODE,merge=1,delta=2
    42                           	psect	text28,local,class=CODE,merge=1,delta=2
    43                           	dabs	1,0x7E,2
    44  0000                     
    45                           ; Version 2.20
    46                           ; Generated 12/02/2020 GMT
    47                           ; 
    48                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    49                           ; All rights reserved.
    50                           ; 
    51                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    52                           ; 
    53                           ; Redistribution and use in source and binary forms, with or without modification, are
    54                           ; permitted provided that the following conditions are met:
    55                           ; 
    56                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    57                           ;        conditions and the following disclaimer.
    58                           ; 
    59                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    60                           ;        of conditions and the following disclaimer in the documentation and/or other
    61                           ;        materials provided with the distribution.
    62                           ; 
    63                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    64                           ;        software without specific prior written permission.
    65                           ; 
    66                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    67                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    68                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    69                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    70                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    71                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    72                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    73                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    74                           ; 
    75                           ; 
    76                           ; Code-generator required, PIC16F877A Definitions
    77                           ; 
    78                           ; SFR Addresses
    79  0000                     	;# 
    80  0001                     	;# 
    81  0002                     	;# 
    82  0003                     	;# 
    83  0004                     	;# 
    84  0005                     	;# 
    85  0006                     	;# 
    86  0007                     	;# 
    87  0008                     	;# 
    88  0009                     	;# 
    89  000A                     	;# 
    90  000B                     	;# 
    91  000C                     	;# 
    92  000D                     	;# 
    93  000E                     	;# 
    94  000E                     	;# 
    95  000F                     	;# 
    96  0010                     	;# 
    97  0011                     	;# 
    98  0012                     	;# 
    99  0013                     	;# 
   100  0014                     	;# 
   101  0015                     	;# 
   102  0015                     	;# 
   103  0016                     	;# 
   104  0017                     	;# 
   105  0018                     	;# 
   106  0019                     	;# 
   107  001A                     	;# 
   108  001B                     	;# 
   109  001B                     	;# 
   110  001C                     	;# 
   111  001D                     	;# 
   112  001E                     	;# 
   113  001F                     	;# 
   114  0081                     	;# 
   115  0085                     	;# 
   116  0086                     	;# 
   117  0087                     	;# 
   118  0088                     	;# 
   119  0089                     	;# 
   120  008C                     	;# 
   121  008D                     	;# 
   122  008E                     	;# 
   123  0091                     	;# 
   124  0092                     	;# 
   125  0093                     	;# 
   126  0094                     	;# 
   127  0098                     	;# 
   128  0099                     	;# 
   129  009C                     	;# 
   130  009D                     	;# 
   131  009E                     	;# 
   132  009F                     	;# 
   133  010C                     	;# 
   134  010D                     	;# 
   135  010E                     	;# 
   136  010F                     	;# 
   137  018C                     	;# 
   138  018D                     	;# 
   139  0000                     	;# 
   140  0001                     	;# 
   141  0002                     	;# 
   142  0003                     	;# 
   143  0004                     	;# 
   144  0005                     	;# 
   145  0006                     	;# 
   146  0007                     	;# 
   147  0008                     	;# 
   148  0009                     	;# 
   149  000A                     	;# 
   150  000B                     	;# 
   151  000C                     	;# 
   152  000D                     	;# 
   153  000E                     	;# 
   154  000E                     	;# 
   155  000F                     	;# 
   156  0010                     	;# 
   157  0011                     	;# 
   158  0012                     	;# 
   159  0013                     	;# 
   160  0014                     	;# 
   161  0015                     	;# 
   162  0015                     	;# 
   163  0016                     	;# 
   164  0017                     	;# 
   165  0018                     	;# 
   166  0019                     	;# 
   167  001A                     	;# 
   168  001B                     	;# 
   169  001B                     	;# 
   170  001C                     	;# 
   171  001D                     	;# 
   172  001E                     	;# 
   173  001F                     	;# 
   174  0081                     	;# 
   175  0085                     	;# 
   176  0086                     	;# 
   177  0087                     	;# 
   178  0088                     	;# 
   179  0089                     	;# 
   180  008C                     	;# 
   181  008D                     	;# 
   182  008E                     	;# 
   183  0091                     	;# 
   184  0092                     	;# 
   185  0093                     	;# 
   186  0094                     	;# 
   187  0098                     	;# 
   188  0099                     	;# 
   189  009C                     	;# 
   190  009D                     	;# 
   191  009E                     	;# 
   192  009F                     	;# 
   193  010C                     	;# 
   194  010D                     	;# 
   195  010E                     	;# 
   196  010F                     	;# 
   197  018C                     	;# 
   198  018D                     	;# 
   199                           
   200                           	psect	idataBANK0
   201  076A                     __pidataBANK0:
   202                           
   203                           ;initializer for _MLxMS
   204  076A  3419               	retlw	25
   205  076B  3400               	retlw	0
   206                           
   207                           ;initializer for _water_volume
   208  076C  34C8               	retlw	200
   209  076D  3400               	retlw	0
   210                           
   211                           ;initializer for _umidade_minima
   212  076E  340A               	retlw	10
   213  076F  3400               	retlw	0
   214                           
   215                           ;initializer for _timer_counter_max
   216  0770  340A               	retlw	10
   217  0771  3400               	retlw	0
   218  0006                     _PORTB	set	6
   219  0007                     _PORTC	set	7
   220  001F                     _ADCON0bits	set	31
   221  000C                     _PIR1bits	set	12
   222  0006                     _PORTBbits	set	6
   223  000E                     _TMR1L	set	14
   224  000F                     _TMR1H	set	15
   225  0010                     _T1CONbits	set	16
   226  000B                     _INTCONbits	set	11
   227  001E                     _ADRESH	set	30
   228  0059                     _INTF	set	89
   229  0060                     _TMR1IF	set	96
   230  0043                     _RD3	set	67
   231  0042                     _RD2	set	66
   232  0047                     _RD7	set	71
   233  0046                     _RD6	set	70
   234  0045                     _RD5	set	69
   235  0044                     _RD4	set	68
   236  0088                     _TRISD	set	136
   237  0087                     _TRISC	set	135
   238  0086                     _TRISB	set	134
   239  0085                     _TRISA	set	133
   240  009E                     _ADRESL	set	158
   241  009F                     _ADCON1bits	set	159
   242  0081                     _OPTION_REGbits	set	129
   243  008C                     _PIE1bits	set	140
   244                           
   245                           	psect	strings
   246  0655                     __pstrings:
   247  0655                     stringtab:
   248  0655                     __stringtab:
   249  0655                     stringcode:	
   250                           ;	String table - string pointers are 1 byte each
   251                           
   252  0655                     stringdir:
   253  0655  3006               	movlw	high stringdir
   254  0656  008A               	movwf	10
   255  0657  0804               	movf	4,w
   256  0658  0A84               	incf	4,f
   257  0659  0782               	addwf	2,f
   258  065A                     __stringbase:
   259  065A  3400               	retlw	0
   260  065B                     __end_of__stringtab:
   261  065B                     STR_1:
   262  065B  344E               	retlw	78	;'N'
   263  065C  3445               	retlw	69	;'E'
   264  065D  3457               	retlw	87	;'W'
   265  065E  3420               	retlw	32	;' '
   266  065F  3454               	retlw	84	;'T'
   267  0660  3448               	retlw	72	;'H'
   268  0661  3452               	retlw	82	;'R'
   269  0662  3445               	retlw	69	;'E'
   270  0663  3453               	retlw	83	;'S'
   271  0664  3448               	retlw	72	;'H'
   272  0665  344F               	retlw	79	;'O'
   273  0666  344C               	retlw	76	;'L'
   274  0667  3444               	retlw	68	;'D'
   275  0668  343A               	retlw	58	;':'
   276  0669  3400               	retlw	0
   277  066A                     STR_2:
   278  066A  344E               	retlw	78	;'N'
   279  066B  3445               	retlw	69	;'E'
   280  066C  3457               	retlw	87	;'W'
   281  066D  3420               	retlw	32	;' '
   282  066E  3456               	retlw	86	;'V'
   283  066F  344F               	retlw	79	;'O'
   284  0670  344C               	retlw	76	;'L'
   285  0671  3455               	retlw	85	;'U'
   286  0672  344D               	retlw	77	;'M'
   287  0673  3445               	retlw	69	;'E'
   288  0674  343A               	retlw	58	;':'
   289  0675  3400               	retlw	0
   290                           
   291                           	psect	cinit
   292  000F                     start_initialization:	
   293                           ; #config settings
   294                           
   295  000F                     __initialization:
   296                           
   297                           ; Initialize objects allocated to BANK0
   298  000F  1383               	bcf	3,7	;select IRP bank0
   299  0010  304A               	movlw	low (__pdataBANK0+8)
   300  0011  00FD               	movwf	btemp+-1
   301  0012  3007               	movlw	high __pidataBANK0
   302  0013  00FE               	movwf	btemp
   303  0014  306A               	movlw	low __pidataBANK0
   304  0015  00FF               	movwf	btemp+1
   305  0016  3042               	movlw	low __pdataBANK0
   306  0017  0084               	movwf	4
   307  0018  120A  118A  2718  120A  118A  	fcall	init_ram0
   308                           
   309                           ; Clear objects allocated to BANK0
   310  001D  01CA               	clrf	__pbssBANK0& (0+127)
   311  001E  01CB               	clrf	(__pbssBANK0+1)& (0+127)
   312  001F  01CC               	clrf	(__pbssBANK0+2)& (0+127)
   313  0020  01CD               	clrf	(__pbssBANK0+3)& (0+127)
   314                           
   315                           ; Clear objects allocated to COMMON
   316  0021  01F9               	clrf	__pbssCOMMON& (0+127)
   317  0022  01FA               	clrf	(__pbssCOMMON+1)& (0+127)
   318  0023                     end_of_initialization:	
   319                           ;End of C runtime variable initialization code
   320                           
   321  0023                     __end_of__initialization:
   322  0023  0183               	clrf	3
   323  0024  120A  118A  2D15   	ljmp	_main	;jump to C main() function
   324                           
   325                           	psect	bssCOMMON
   326  0079                     __pbssCOMMON:
   327  0079                     _irrigacao_ativa:
   328  0079                     	ds	2
   329                           
   330                           	psect	bssBANK0
   331  004A                     __pbssBANK0:
   332  004A                     _setup_menu:
   333  004A                     	ds	2
   334  004C                     _timer_counter:
   335  004C                     	ds	2
   336                           
   337                           	psect	dataBANK0
   338  0042                     __pdataBANK0:
   339  0042                     _MLxMS:
   340  0042                     	ds	2
   341  0044                     _water_volume:
   342  0044                     	ds	2
   343  0046                     _umidade_minima:
   344  0046                     	ds	2
   345  0048                     _timer_counter_max:
   346  0048                     	ds	2
   347                           
   348                           	psect	inittext
   349  0714                     init_fetch0:	
   350                           ;	Called with low address in FSR and high address in W
   351                           
   352  0714  087E               	movf	btemp,w
   353  0715  008A               	movwf	10
   354  0716  087F               	movf	btemp+1,w
   355  0717  0082               	movwf	2
   356  0718                     init_ram0:	
   357                           ;Called with:
   358                           ;	high address of idata address in btemp 
   359                           ;	low address of idata address in btemp+1 
   360                           ;	low address of data in FSR
   361                           ;	high address + 1 of data in btemp-1
   362                           
   363  0718  120A  118A  2714  120A  118A  	fcall	init_fetch0
   364  071D  0080               	movwf	0
   365  071E  0A84               	incf	4,f
   366  071F  0804               	movf	4,w
   367  0720  067D               	xorwf	btemp+-1,w
   368  0721  1903               	btfsc	3,2
   369  0722  3400               	retlw	0
   370  0723  0AFF               	incf	btemp+1,f
   371  0724  1903               	btfsc	3,2
   372  0725  0AFE               	incf	btemp,f
   373  0726  2F18               	goto	init_ram0
   374                           
   375                           	psect	cstackCOMMON
   376  0070                     __pcstackCOMMON:
   377  0070                     ?_Lcd_Port:
   378  0070                     ?_Lcd_Cmd:	
   379                           ; 1 bytes @ 0x0
   380                           
   381  0070                     ?_Lcd_Clear:	
   382                           ; 1 bytes @ 0x0
   383                           
   384  0070                     ?_Lcd_Init:	
   385                           ; 1 bytes @ 0x0
   386                           
   387  0070                     ?_Lcd_Write_Char:	
   388                           ; 1 bytes @ 0x0
   389                           
   390  0070                     ?_Lcd_Write_String:	
   391                           ; 1 bytes @ 0x0
   392                           
   393  0070                     ?_setupTimer:	
   394                           ; 1 bytes @ 0x0
   395                           
   396  0070                     ?_handleTimerInterruption:	
   397                           ; 1 bytes @ 0x0
   398                           
   399  0070                     ??_handleTimerInterruption:	
   400                           ; 1 bytes @ 0x0
   401                           
   402  0070                     ?_irrigar:	
   403                           ; 1 bytes @ 0x0
   404                           
   405  0070                     ?_handleExternalInterruption:	
   406                           ; 1 bytes @ 0x0
   407                           
   408  0070                     ??_handleExternalInterruption:	
   409                           ; 1 bytes @ 0x0
   410                           
   411  0070                     ?_interrupcao:	
   412                           ; 1 bytes @ 0x0
   413                           
   414  0070                     ?_setupExternalInterruption:	
   415                           ; 1 bytes @ 0x0
   416                           
   417  0070                     ?_handleMenu:	
   418                           ; 1 bytes @ 0x0
   419                           
   420  0070                     ?_verifyMenu:	
   421                           ; 1 bytes @ 0x0
   422                           
   423  0070                     ?_verifySensor:	
   424                           ; 1 bytes @ 0x0
   425                           
   426  0070                     ?_setupWatchdogTimer:	
   427                           ; 1 bytes @ 0x0
   428                           
   429  0070                     ?_setupADC:	
   430                           ; 1 bytes @ 0x0
   431                           
   432  0070                     ?_main:	
   433                           ; 1 bytes @ 0x0
   434                           
   435  0070                     ?i1_irrigar:	
   436                           ; 1 bytes @ 0x0
   437                           
   438  0070                     ??i1_irrigar:	
   439                           ; 1 bytes @ 0x0
   440                           
   441                           
   442                           ; 1 bytes @ 0x0
   443  0070                     	ds	1
   444  0071                     ??_interrupcao:
   445                           
   446                           ; 1 bytes @ 0x1
   447  0071                     	ds	2
   448  0073                     ??_Lcd_Port:
   449  0073                     ??_irrigar:	
   450                           ; 1 bytes @ 0x3
   451                           
   452  0073                     ??_setupExternalInterruption:	
   453                           ; 1 bytes @ 0x3
   454                           
   455  0073                     ??_setupWatchdogTimer:	
   456                           ; 1 bytes @ 0x3
   457                           
   458  0073                     ??_setupADC:	
   459                           ; 1 bytes @ 0x3
   460                           
   461  0073                     ?___wmul:	
   462                           ; 1 bytes @ 0x3
   463                           
   464  0073                     ?___awmod:	
   465                           ; 2 bytes @ 0x3
   466                           
   467  0073                     ?___fltol:	
   468                           ; 2 bytes @ 0x3
   469                           
   470  0073                     Lcd_Port@a:	
   471                           ; 4 bytes @ 0x3
   472                           
   473  0073                     ___wmul@multiplier:	
   474                           ; 1 bytes @ 0x3
   475                           
   476  0073                     ___awmod@divisor:	
   477                           ; 2 bytes @ 0x3
   478                           
   479  0073                     ___fltol@f1:	
   480                           ; 2 bytes @ 0x3
   481                           
   482                           
   483                           ; 4 bytes @ 0x3
   484  0073                     	ds	1
   485  0074                     ??_Lcd_Cmd:
   486  0074                     ??_Lcd_Write_Char:	
   487                           ; 1 bytes @ 0x4
   488                           
   489                           
   490                           ; 1 bytes @ 0x4
   491  0074                     	ds	1
   492  0075                     Lcd_Write_Char@temp:
   493  0075                     ___wmul@multiplicand:	
   494                           ; 1 bytes @ 0x5
   495                           
   496  0075                     ___awmod@dividend:	
   497                           ; 2 bytes @ 0x5
   498                           
   499                           
   500                           ; 2 bytes @ 0x5
   501  0075                     	ds	1
   502  0076                     Lcd_Cmd@a:
   503  0076                     Lcd_Write_Char@y:	
   504                           ; 1 bytes @ 0x6
   505                           
   506                           
   507                           ; 1 bytes @ 0x6
   508  0076                     	ds	1
   509  0077                     ??_Lcd_Clear:
   510  0077                     ?_Lcd_Set_Cursor:	
   511                           ; 1 bytes @ 0x7
   512                           
   513  0077                     ??_Lcd_Init:	
   514                           ; 1 bytes @ 0x7
   515                           
   516  0077                     ??___wmul:	
   517                           ; 1 bytes @ 0x7
   518                           
   519  0077                     ??___awmod:	
   520                           ; 1 bytes @ 0x7
   521                           
   522  0077                     Lcd_Set_Cursor@b:	
   523                           ; 1 bytes @ 0x7
   524                           
   525  0077                     Lcd_Write_Char@a:	
   526                           ; 1 bytes @ 0x7
   527                           
   528  0077                     ___fltol@sign1:	
   529                           ; 1 bytes @ 0x7
   530                           
   531  0077                     ___wmul@product:	
   532                           ; 1 bytes @ 0x7
   533                           
   534                           
   535                           ; 2 bytes @ 0x7
   536  0077                     	ds	1
   537  0078                     ??_Lcd_Write_String:
   538  0078                     ___fltol@exp1:	
   539                           ; 1 bytes @ 0x8
   540                           
   541                           
   542                           ; 1 bytes @ 0x8
   543  0078                     	ds	1
   544  0079                     ??_changeTimerMaxConter:
   545  0079                     ??_setupNewVolumeFlow:	
   546                           ; 1 bytes @ 0x9
   547                           
   548  0079                     ??_setupTimer:	
   549                           ; 1 bytes @ 0x9
   550                           
   551  0079                     ??_main:	
   552                           ; 1 bytes @ 0x9
   553                           
   554                           
   555                           	psect	cstackBANK0
   556  0020                     __pcstackBANK0:	
   557                           ; 1 bytes @ 0x9
   558                           
   559  0020                     ??_Lcd_Set_Cursor:
   560  0020                     ??___fltol:	
   561                           ; 1 bytes @ 0x0
   562                           
   563  0020                     ___awmod@counter:	
   564                           ; 1 bytes @ 0x0
   565                           
   566  0020                     Lcd_Write_String@i:	
   567                           ; 1 bytes @ 0x0
   568                           
   569                           
   570                           ; 2 bytes @ 0x0
   571  0020                     	ds	1
   572  0021                     ___awmod@sign:
   573                           
   574                           ; 1 bytes @ 0x1
   575  0021                     	ds	1
   576  0022                     ?___awdiv:
   577  0022                     Lcd_Set_Cursor@a:	
   578                           ; 2 bytes @ 0x2
   579                           
   580  0022                     Lcd_Write_String@a:	
   581                           ; 1 bytes @ 0x2
   582                           
   583  0022                     ___awdiv@divisor:	
   584                           ; 1 bytes @ 0x2
   585                           
   586                           
   587                           ; 2 bytes @ 0x2
   588  0022                     	ds	1
   589  0023                     Lcd_Set_Cursor@z:
   590                           
   591                           ; 1 bytes @ 0x3
   592  0023                     	ds	1
   593  0024                     Lcd_Set_Cursor@y:
   594  0024                     ___awdiv@dividend:	
   595                           ; 1 bytes @ 0x4
   596                           
   597                           
   598                           ; 2 bytes @ 0x4
   599  0024                     	ds	1
   600  0025                     Lcd_Set_Cursor@temp:
   601                           
   602                           ; 1 bytes @ 0x5
   603  0025                     	ds	1
   604  0026                     ??___awdiv:
   605                           
   606                           ; 1 bytes @ 0x6
   607  0026                     	ds	1
   608  0027                     ___awdiv@counter:
   609                           
   610                           ; 1 bytes @ 0x7
   611  0027                     	ds	1
   612  0028                     ___awdiv@sign:
   613                           
   614                           ; 1 bytes @ 0x8
   615  0028                     	ds	1
   616  0029                     ___awdiv@quotient:
   617                           
   618                           ; 2 bytes @ 0x9
   619  0029                     	ds	2
   620  002B                     ?_changeTimerMaxConter:
   621  002B                     ?_writeValor:	
   622                           ; 1 bytes @ 0xB
   623                           
   624  002B                     ?___xxtofl:	
   625                           ; 1 bytes @ 0xB
   626                           
   627  002B                     changeTimerMaxConter@mili_s:	
   628                           ; 4 bytes @ 0xB
   629                           
   630  002B                     writeValor@valor:	
   631                           ; 2 bytes @ 0xB
   632                           
   633  002B                     ___xxtofl@val:	
   634                           ; 2 bytes @ 0xB
   635                           
   636                           
   637                           ; 4 bytes @ 0xB
   638  002B                     	ds	2
   639  002D                     ?_setupNewVolumeFlow:
   640  002D                     ??_writeValor:	
   641                           ; 1 bytes @ 0xD
   642                           
   643  002D                     setupNewVolumeFlow@new_ml:	
   644                           ; 1 bytes @ 0xD
   645                           
   646                           
   647                           ; 2 bytes @ 0xD
   648  002D                     	ds	1
   649  002E                     writeValor@centena:
   650                           
   651                           ; 1 bytes @ 0xE
   652  002E                     	ds	1
   653  002F                     ??___xxtofl:
   654  002F                     writeValor@dezena:	
   655                           ; 1 bytes @ 0xF
   656                           
   657  002F                     setupNewVolumeFlow@new_ms:	
   658                           ; 1 bytes @ 0xF
   659                           
   660                           
   661                           ; 2 bytes @ 0xF
   662  002F                     	ds	1
   663  0030                     writeValor@unidade:
   664                           
   665                           ; 1 bytes @ 0x10
   666  0030                     	ds	1
   667  0031                     ??_handleMenu:
   668                           
   669                           ; 1 bytes @ 0x11
   670  0031                     	ds	2
   671  0033                     ___xxtofl@sign:
   672                           
   673                           ; 1 bytes @ 0x13
   674  0033                     	ds	1
   675  0034                     ___xxtofl@exp:
   676  0034                     handleMenu@volume:	
   677                           ; 1 bytes @ 0x14
   678                           
   679                           
   680                           ; 2 bytes @ 0x14
   681  0034                     	ds	1
   682  0035                     ___xxtofl@arg:
   683                           
   684                           ; 4 bytes @ 0x15
   685  0035                     	ds	1
   686  0036                     handleMenu@umidade:
   687                           
   688                           ; 2 bytes @ 0x16
   689  0036                     	ds	2
   690  0038                     ??_verifyMenu:
   691                           
   692                           ; 1 bytes @ 0x18
   693  0038                     	ds	1
   694  0039                     ?_getADConverterValue:
   695                           
   696                           ; 2 bytes @ 0x19
   697  0039                     	ds	2
   698  003B                     ??_getADConverterValue:
   699                           
   700                           ; 1 bytes @ 0x1B
   701  003B                     	ds	2
   702  003D                     getADConverterValue@leitura:
   703                           
   704                           ; 4 bytes @ 0x1D
   705  003D                     	ds	4
   706  0041                     ??_verifySensor:
   707                           
   708                           ; 1 bytes @ 0x21
   709  0041                     	ds	1
   710                           
   711                           	psect	maintext
   712  0515                     __pmaintext:	
   713 ;;
   714 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   715 ;;
   716 ;; *************** function _main *****************
   717 ;; Defined at:
   718 ;;		line 356 in file "main.c"
   719 ;; Parameters:    Size  Location     Type
   720 ;;		None
   721 ;; Auto vars:     Size  Location     Type
   722 ;;		None
   723 ;; Return value:  Size  Location     Type
   724 ;;                  1    wreg      void 
   725 ;; Registers used:
   726 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   727 ;; Tracked objects:
   728 ;;		On entry : B00/0
   729 ;;		On exit  : 0/0
   730 ;;		Unchanged: 0/0
   731 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   732 ;;      Params:         0       0       0       0       0
   733 ;;      Locals:         0       0       0       0       0
   734 ;;      Temps:          0       0       0       0       0
   735 ;;      Totals:         0       0       0       0       0
   736 ;;Total ram usage:        0 bytes
   737 ;; Hardware stack levels required when called: 9
   738 ;; This function calls:
   739 ;;		_Lcd_Init
   740 ;;		_setupADC
   741 ;;		_setupExternalInterruption
   742 ;;		_setupTimer
   743 ;;		_setupWatchdogTimer
   744 ;;		_verifyMenu
   745 ;;		_verifySensor
   746 ;; This function is called by:
   747 ;;		Startup code after reset
   748 ;; This function uses a non-reentrant model
   749 ;;
   750                           
   751  0515                     _main:	
   752                           ;psect for function _main
   753                           
   754  0515                     l2074:	
   755                           ;incstack = 0
   756 ;; hardware stack exceeded
   757                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   758                           
   759                           
   760                           ;main.c: 359:     TRISA = 0b00000001;
   761  0515  3001               	movlw	1
   762  0516  1683               	bsf	3,5	;RP0=1, select bank1
   763  0517  1303               	bcf	3,6	;RP1=0, select bank1
   764  0518  0085               	movwf	5	;volatile
   765                           
   766                           ;main.c: 360:     TRISB = 0b00011101;
   767  0519  301D               	movlw	29
   768  051A  0086               	movwf	6	;volatile
   769  051B                     l2076:
   770                           
   771                           ;main.c: 361:     TRISC = 0;
   772  051B  0187               	clrf	7	;volatile
   773  051C                     l2078:
   774                           
   775                           ;main.c: 362:     PORTC = 0;
   776  051C  1283               	bcf	3,5	;RP0=0, select bank0
   777  051D  1303               	bcf	3,6	;RP1=0, select bank0
   778  051E  0187               	clrf	7	;volatile
   779  051F                     l2080:
   780                           
   781                           ;main.c: 363:     TRISD = 0b00000000;
   782  051F  1683               	bsf	3,5	;RP0=1, select bank1
   783  0520  1303               	bcf	3,6	;RP1=0, select bank1
   784  0521  0188               	clrf	8	;volatile
   785  0522                     l2082:
   786                           
   787                           ;main.c: 364:     OPTION_REGbits.nRBPU = 0;
   788  0522  1381               	bcf	1,7	;volatile
   789  0523                     l2084:
   790                           
   791                           ;main.c: 365:     PORTB = 0;
   792  0523  1283               	bcf	3,5	;RP0=0, select bank0
   793  0524  1303               	bcf	3,6	;RP1=0, select bank0
   794  0525  0186               	clrf	6	;volatile
   795  0526                     l2086:
   796                           
   797                           ;main.c: 367:     setupExternalInterruption();
   798  0526  120A  118A  277A  120A  118A  	fcall	_setupExternalInterruption
   799  052B                     l2088:
   800                           
   801                           ;main.c: 368:     setupWatchdogTimer();
   802  052B  120A  118A  2772  120A  118A  	fcall	_setupWatchdogTimer
   803  0530                     l2090:
   804                           
   805                           ;main.c: 369:     setupTimer();
   806  0530  120A  118A  26CE  120A  118A  	fcall	_setupTimer
   807                           
   808                           ;main.c: 370:     setupADC();
   809  0535  120A  118A  26E7  120A  118A  	fcall	_setupADC
   810  053A                     l2092:
   811                           
   812                           ;main.c: 371:     Lcd_Init();
   813  053A  120A  118A  23AB  120A  118A  	fcall	_Lcd_Init
   814  053F                     l2094:
   815                           
   816                           ;main.c: 375:     {;main.c: 376:         verifySensor();
   817  053F  120A  118A  25BA  120A  118A  	fcall	_verifySensor
   818  0544                     l2096:
   819                           
   820                           ;main.c: 377:         verifyMenu();
   821  0544  120A  118A  2676  120A  118A  	fcall	_verifyMenu
   822  0549  0064               	clrwdt	;# 
   823  054A  2D3F               	goto	l2094
   824  054B  120A  118A  280C   	ljmp	start
   825  054E                     __end_of_main:
   826                           
   827                           	psect	text1
   828  05BA                     __ptext1:	
   829 ;; *************** function _verifySensor *****************
   830 ;; Defined at:
   831 ;;		line 296 in file "main.c"
   832 ;; Parameters:    Size  Location     Type
   833 ;;		None
   834 ;; Auto vars:     Size  Location     Type
   835 ;;		None
   836 ;; Return value:  Size  Location     Type
   837 ;;                  1    wreg      void 
   838 ;; Registers used:
   839 ;;		wreg, status,2, status,0, pclath, cstack
   840 ;; Tracked objects:
   841 ;;		On entry : 0/0
   842 ;;		On exit  : 0/0
   843 ;;		Unchanged: 0/0
   844 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   845 ;;      Params:         0       0       0       0       0
   846 ;;      Locals:         0       0       0       0       0
   847 ;;      Temps:          0       1       0       0       0
   848 ;;      Totals:         0       1       0       0       0
   849 ;;Total ram usage:        1 bytes
   850 ;; Hardware stack levels used: 1
   851 ;; Hardware stack levels required when called: 5
   852 ;; This function calls:
   853 ;;		_getADConverterValue
   854 ;;		_irrigar
   855 ;; This function is called by:
   856 ;;		_main
   857 ;; This function uses a non-reentrant model
   858 ;;
   859                           
   860  05BA                     _verifySensor:	
   861                           ;psect for function _verifySensor
   862                           
   863  05BA                     l2064:	
   864                           ;incstack = 0
   865                           ; Regs used in _verifySensor: [wreg+status,2+status,0+pclath+cstack]
   866                           
   867                           
   868                           ;main.c: 298:     PORTC = getADConverterValue();
   869  05BA  120A  118A  2463  120A  118A  	fcall	_getADConverterValue
   870  05BF  1283               	bcf	3,5	;RP0=0, select bank0
   871  05C0  1303               	bcf	3,6	;RP1=0, select bank0
   872  05C1  0839               	movf	?_getADConverterValue,w
   873  05C2  0087               	movwf	7	;volatile
   874                           
   875                           ;main.c: 299:     if(getADConverterValue()<umidade_minima){
   876  05C3  120A  118A  2463  120A  118A  	fcall	_getADConverterValue
   877  05C8  1283               	bcf	3,5	;RP0=0, select bank0
   878  05C9  1303               	bcf	3,6	;RP1=0, select bank0
   879  05CA  083A               	movf	?_getADConverterValue+1,w
   880  05CB  3A80               	xorlw	128
   881  05CC  00C1               	movwf	??_verifySensor
   882  05CD  0847               	movf	_umidade_minima+1,w
   883  05CE  3A80               	xorlw	128
   884  05CF  0241               	subwf	??_verifySensor,w
   885  05D0  1D03               	skipz
   886  05D1  2DD4               	goto	u1985
   887  05D2  0846               	movf	_umidade_minima,w
   888  05D3  0239               	subwf	?_getADConverterValue,w
   889  05D4                     u1985:
   890  05D4  1803               	skipnc
   891  05D5  2DD7               	goto	u1981
   892  05D6  2DD8               	goto	u1980
   893  05D7                     u1981:
   894  05D7  2DE1               	goto	l176
   895  05D8                     u1980:
   896  05D8                     l2066:
   897                           
   898                           ;main.c: 300:         PORTBbits.RB7 = 1;
   899  05D8  1283               	bcf	3,5	;RP0=0, select bank0
   900  05D9  1303               	bcf	3,6	;RP1=0, select bank0
   901  05DA  1786               	bsf	6,7	;volatile
   902  05DB                     l2068:
   903                           
   904                           ;main.c: 301:         irrigar();
   905  05DB  120A  118A  2756  120A  118A  	fcall	_irrigar
   906                           
   907                           ;main.c: 302:     }
   908  05E0  2DE4               	goto	l178
   909  05E1                     l176:	
   910                           ;main.c: 303:     else{
   911                           
   912                           
   913                           ;main.c: 304:         PORTBbits.RB7 = 0;
   914  05E1  1283               	bcf	3,5	;RP0=0, select bank0
   915  05E2  1303               	bcf	3,6	;RP1=0, select bank0
   916  05E3  1386               	bcf	6,7	;volatile
   917  05E4                     l178:
   918  05E4  0008               	return
   919  05E5                     __end_of_verifySensor:
   920                           
   921                           	psect	text2
   922  0756                     __ptext2:	
   923 ;; *************** function _irrigar *****************
   924 ;; Defined at:
   925 ;;		line 161 in file "main.c"
   926 ;; Parameters:    Size  Location     Type
   927 ;;		None
   928 ;; Auto vars:     Size  Location     Type
   929 ;;		None
   930 ;; Return value:  Size  Location     Type
   931 ;;                  1    wreg      void 
   932 ;; Registers used:
   933 ;;		wreg, status,2
   934 ;; Tracked objects:
   935 ;;		On entry : 0/0
   936 ;;		On exit  : 0/0
   937 ;;		Unchanged: 0/0
   938 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   939 ;;      Params:         0       0       0       0       0
   940 ;;      Locals:         0       0       0       0       0
   941 ;;      Temps:          0       0       0       0       0
   942 ;;      Totals:         0       0       0       0       0
   943 ;;Total ram usage:        0 bytes
   944 ;; Hardware stack levels used: 1
   945 ;; Hardware stack levels required when called: 3
   946 ;; This function calls:
   947 ;;		Nothing
   948 ;; This function is called by:
   949 ;;		_verifySensor
   950 ;; This function uses a non-reentrant model
   951 ;;
   952                           
   953  0756                     _irrigar:	
   954                           ;psect for function _irrigar
   955                           
   956  0756                     l1542:	
   957                           ;incstack = 0
   958                           ; Regs used in _irrigar: [wreg+status,2]
   959                           
   960                           
   961                           ;main.c: 162:     irrigacao_ativa = 1;
   962  0756  3001               	movlw	1
   963  0757  00F9               	movwf	_irrigacao_ativa
   964  0758  3000               	movlw	0
   965  0759  00FA               	movwf	_irrigacao_ativa+1
   966  075A                     l1544:
   967                           
   968                           ;main.c: 163:     timer_counter = 0;
   969  075A  1283               	bcf	3,5	;RP0=0, select bank0
   970  075B  1303               	bcf	3,6	;RP1=0, select bank0
   971  075C  01CC               	clrf	_timer_counter
   972  075D  01CD               	clrf	_timer_counter+1
   973  075E                     l1546:
   974                           
   975                           ;main.c: 166:     T1CONbits.TMR1ON = 1;
   976  075E  1410               	bsf	16,0	;volatile
   977  075F                     l128:
   978  075F  0008               	return
   979  0760                     __end_of_irrigar:
   980                           
   981                           	psect	text3
   982  0463                     __ptext3:	
   983 ;; *************** function _getADConverterValue *****************
   984 ;; Defined at:
   985 ;;		line 290 in file "main.c"
   986 ;; Parameters:    Size  Location     Type
   987 ;;		None
   988 ;; Auto vars:     Size  Location     Type
   989 ;;  leitura         4   29[BANK0 ] float 
   990 ;; Return value:  Size  Location     Type
   991 ;;                  2   25[BANK0 ] int 
   992 ;; Registers used:
   993 ;;		wreg, status,2, status,0, pclath, cstack
   994 ;; Tracked objects:
   995 ;;		On entry : 0/0
   996 ;;		On exit  : 0/0
   997 ;;		Unchanged: 0/0
   998 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   999 ;;      Params:         0       2       0       0       0
  1000 ;;      Locals:         0       4       0       0       0
  1001 ;;      Temps:          0       2       0       0       0
  1002 ;;      Totals:         0       8       0       0       0
  1003 ;;Total ram usage:        8 bytes
  1004 ;; Hardware stack levels used: 1
  1005 ;; Hardware stack levels required when called: 4
  1006 ;; This function calls:
  1007 ;;		___awdiv
  1008 ;;		___fltol
  1009 ;;		___wmul
  1010 ;;		___xxtofl
  1011 ;; This function is called by:
  1012 ;;		_verifySensor
  1013 ;; This function uses a non-reentrant model
  1014 ;;
  1015                           
  1016  0463                     _getADConverterValue:	
  1017                           ;psect for function _getADConverterValue
  1018                           
  1019  0463                     l2024:	
  1020                           ;incstack = 0
  1021                           ; Regs used in _getADConverterValue: [wreg+status,2+status,0+pclath+cstack]
  1022                           
  1023                           
  1024                           ;main.c: 291:     ADCON0bits.GO = 1;
  1025  0463  1283               	bcf	3,5	;RP0=0, select bank0
  1026  0464  1303               	bcf	3,6	;RP1=0, select bank0
  1027  0465  151F               	bsf	31,2	;volatile
  1028  0466                     l2026:
  1029                           
  1030                           ;main.c: 292:     _delay((unsigned long)((10)*(4000000/4000000.0)));
  1031  0466  3002               	movlw	2
  1032  0467  1283               	bcf	3,5	;RP0=0, select bank0
  1033  0468  1303               	bcf	3,6	;RP1=0, select bank0
  1034  0469  00BB               	movwf	??_getADConverterValue
  1035  046A                     u1997:
  1036  046A  0BBB               	decfsz	??_getADConverterValue,f
  1037  046B  2C6A               	goto	u1997
  1038  046C  0000               	nop
  1039  046D                     l2028:
  1040                           
  1041                           ;main.c: 293:     float leitura = 100*ADRESH/256;
  1042  046D  3064               	movlw	100
  1043  046E  00F5               	movwf	___wmul@multiplicand
  1044  046F  3000               	movlw	0
  1045  0470  00F6               	movwf	___wmul@multiplicand+1
  1046  0471  1283               	bcf	3,5	;RP0=0, select bank0
  1047  0472  1303               	bcf	3,6	;RP1=0, select bank0
  1048  0473  081E               	movf	30,w	;volatile
  1049  0474  00BB               	movwf	??_getADConverterValue
  1050  0475  01BC               	clrf	??_getADConverterValue+1
  1051  0476  083B               	movf	??_getADConverterValue,w
  1052  0477  00F3               	movwf	___wmul@multiplier
  1053  0478  083C               	movf	??_getADConverterValue+1,w
  1054  0479  00F4               	movwf	___wmul@multiplier+1
  1055  047A  120A  118A  260E  120A  118A  	fcall	___wmul
  1056  047F  0874               	movf	?___wmul+1,w
  1057  0480  1283               	bcf	3,5	;RP0=0, select bank0
  1058  0481  1303               	bcf	3,6	;RP1=0, select bank0
  1059  0482  00A5               	movwf	___awdiv@dividend+1
  1060  0483  0873               	movf	?___wmul,w
  1061  0484  00A4               	movwf	___awdiv@dividend
  1062  0485  3000               	movlw	0
  1063  0486  00A2               	movwf	___awdiv@divisor
  1064  0487  3001               	movlw	1
  1065  0488  00A3               	movwf	___awdiv@divisor+1
  1066  0489  120A  118A  2342  120A  118A  	fcall	___awdiv
  1067  048E  1283               	bcf	3,5	;RP0=0, select bank0
  1068  048F  1303               	bcf	3,6	;RP1=0, select bank0
  1069  0490  0822               	movf	?___awdiv,w
  1070  0491  00AB               	movwf	___xxtofl@val
  1071  0492  0823               	movf	?___awdiv+1,w
  1072  0493  00AC               	movwf	___xxtofl@val+1
  1073  0494  3000               	movlw	0
  1074  0495  1BAC               	btfsc	___xxtofl@val+1,7
  1075  0496  30FF               	movlw	255
  1076  0497  00AD               	movwf	___xxtofl@val+2
  1077  0498  00AE               	movwf	___xxtofl@val+3
  1078  0499  3001               	movlw	1
  1079  049A  120A  118A  219C  120A  118A  	fcall	___xxtofl
  1080  049F  1283               	bcf	3,5	;RP0=0, select bank0
  1081  04A0  1303               	bcf	3,6	;RP1=0, select bank0
  1082  04A1  082E               	movf	?___xxtofl+3,w
  1083  04A2  00C0               	movwf	getADConverterValue@leitura+3
  1084  04A3  082D               	movf	?___xxtofl+2,w
  1085  04A4  00BF               	movwf	getADConverterValue@leitura+2
  1086  04A5  082C               	movf	?___xxtofl+1,w
  1087  04A6  00BE               	movwf	getADConverterValue@leitura+1
  1088  04A7  082B               	movf	?___xxtofl,w
  1089  04A8  00BD               	movwf	getADConverterValue@leitura
  1090  04A9                     l2030:
  1091                           
  1092                           ;main.c: 294:     return leitura;
  1093  04A9  0840               	movf	getADConverterValue@leitura+3,w
  1094  04AA  00F6               	movwf	___fltol@f1+3
  1095  04AB  083F               	movf	getADConverterValue@leitura+2,w
  1096  04AC  00F5               	movwf	___fltol@f1+2
  1097  04AD  083E               	movf	getADConverterValue@leitura+1,w
  1098  04AE  00F4               	movwf	___fltol@f1+1
  1099  04AF  083D               	movf	getADConverterValue@leitura,w
  1100  04B0  00F3               	movwf	___fltol@f1
  1101  04B1  120A  118A  2258  120A  118A  	fcall	___fltol
  1102  04B6  0874               	movf	?___fltol+1,w
  1103  04B7  1283               	bcf	3,5	;RP0=0, select bank0
  1104  04B8  1303               	bcf	3,6	;RP1=0, select bank0
  1105  04B9  00BA               	movwf	?_getADConverterValue+1
  1106  04BA  0873               	movf	?___fltol,w
  1107  04BB  00B9               	movwf	?_getADConverterValue
  1108  04BC                     l173:
  1109  04BC  0008               	return
  1110  04BD                     __end_of_getADConverterValue:
  1111                           
  1112                           	psect	text4
  1113  019C                     __ptext4:	
  1114 ;; *************** function ___xxtofl *****************
  1115 ;; Defined at:
  1116 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\xxtofl.c"
  1117 ;; Parameters:    Size  Location     Type
  1118 ;;  sign            1    wreg     unsigned char 
  1119 ;;  val             4   11[BANK0 ] long 
  1120 ;; Auto vars:     Size  Location     Type
  1121 ;;  sign            1   19[BANK0 ] unsigned char 
  1122 ;;  arg             4   21[BANK0 ] unsigned long 
  1123 ;;  exp             1   20[BANK0 ] unsigned char 
  1124 ;; Return value:  Size  Location     Type
  1125 ;;                  4   11[BANK0 ] unsigned char 
  1126 ;; Registers used:
  1127 ;;		wreg, status,2, status,0
  1128 ;; Tracked objects:
  1129 ;;		On entry : 0/0
  1130 ;;		On exit  : 0/0
  1131 ;;		Unchanged: 0/0
  1132 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1133 ;;      Params:         0       4       0       0       0
  1134 ;;      Locals:         0       6       0       0       0
  1135 ;;      Temps:          0       4       0       0       0
  1136 ;;      Totals:         0      14       0       0       0
  1137 ;;Total ram usage:       14 bytes
  1138 ;; Hardware stack levels used: 1
  1139 ;; Hardware stack levels required when called: 3
  1140 ;; This function calls:
  1141 ;;		Nothing
  1142 ;; This function is called by:
  1143 ;;		_getADConverterValue
  1144 ;; This function uses a non-reentrant model
  1145 ;;
  1146                           
  1147  019C                     ___xxtofl:	
  1148                           ;psect for function ___xxtofl
  1149                           
  1150                           
  1151                           ;incstack = 0
  1152                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  1153                           ;___xxtofl@sign stored from wreg
  1154  019C  1283               	bcf	3,5	;RP0=0, select bank0
  1155  019D  1303               	bcf	3,6	;RP1=0, select bank0
  1156  019E  00B3               	movwf	___xxtofl@sign
  1157  019F                     l1498:
  1158  019F  0833               	movf	___xxtofl@sign,w
  1159  01A0  1903               	btfsc	3,2
  1160  01A1  29A3               	goto	u1211
  1161  01A2  29A4               	goto	u1210
  1162  01A3                     u1211:
  1163  01A3  29B8               	goto	l1504
  1164  01A4                     u1210:
  1165  01A4                     l1500:
  1166  01A4  1FAE               	btfss	___xxtofl@val+3,7
  1167  01A5  29A7               	goto	u1221
  1168  01A6  29A8               	goto	u1220
  1169  01A7                     u1221:
  1170  01A7  29B8               	goto	l1504
  1171  01A8                     u1220:
  1172  01A8                     l1502:
  1173  01A8  092B               	comf	___xxtofl@val,w
  1174  01A9  00B5               	movwf	___xxtofl@arg
  1175  01AA  092C               	comf	___xxtofl@val+1,w
  1176  01AB  00B6               	movwf	___xxtofl@arg+1
  1177  01AC  092D               	comf	___xxtofl@val+2,w
  1178  01AD  00B7               	movwf	___xxtofl@arg+2
  1179  01AE  092E               	comf	___xxtofl@val+3,w
  1180  01AF  00B8               	movwf	___xxtofl@arg+3
  1181  01B0  0AB5               	incf	___xxtofl@arg,f
  1182  01B1  1903               	skipnz
  1183  01B2  0AB6               	incf	___xxtofl@arg+1,f
  1184  01B3  1903               	skipnz
  1185  01B4  0AB7               	incf	___xxtofl@arg+2,f
  1186  01B5  1903               	skipnz
  1187  01B6  0AB8               	incf	___xxtofl@arg+3,f
  1188  01B7  29C0               	goto	l711
  1189  01B8                     l1504:
  1190  01B8  082E               	movf	___xxtofl@val+3,w
  1191  01B9  00B8               	movwf	___xxtofl@arg+3
  1192  01BA  082D               	movf	___xxtofl@val+2,w
  1193  01BB  00B7               	movwf	___xxtofl@arg+2
  1194  01BC  082C               	movf	___xxtofl@val+1,w
  1195  01BD  00B6               	movwf	___xxtofl@arg+1
  1196  01BE  082B               	movf	___xxtofl@val,w
  1197  01BF  00B5               	movwf	___xxtofl@arg
  1198  01C0                     l711:
  1199  01C0  082E               	movf	___xxtofl@val+3,w
  1200  01C1  042D               	iorwf	___xxtofl@val+2,w
  1201  01C2  042C               	iorwf	___xxtofl@val+1,w
  1202  01C3  042B               	iorwf	___xxtofl@val,w
  1203  01C4  1D03               	skipz
  1204  01C5  29C7               	goto	u1231
  1205  01C6  29C8               	goto	u1230
  1206  01C7                     u1231:
  1207  01C7  29D1               	goto	l1510
  1208  01C8                     u1230:
  1209  01C8                     l1506:
  1210  01C8  3000               	movlw	0
  1211  01C9  00AE               	movwf	?___xxtofl+3
  1212  01CA  3000               	movlw	0
  1213  01CB  00AD               	movwf	?___xxtofl+2
  1214  01CC  3000               	movlw	0
  1215  01CD  00AC               	movwf	?___xxtofl+1
  1216  01CE  3000               	movlw	0
  1217  01CF  00AB               	movwf	?___xxtofl
  1218  01D0  2A57               	goto	l713
  1219  01D1                     l1510:
  1220  01D1  3096               	movlw	150
  1221  01D2  00AF               	movwf	??___xxtofl
  1222  01D3  082F               	movf	??___xxtofl,w
  1223  01D4  00B4               	movwf	___xxtofl@exp
  1224  01D5  29E3               	goto	l1514
  1225  01D6                     l1512:
  1226  01D6  3001               	movlw	1
  1227  01D7  00AF               	movwf	??___xxtofl
  1228  01D8  082F               	movf	??___xxtofl,w
  1229  01D9  07B4               	addwf	___xxtofl@exp,f
  1230  01DA  3001               	movlw	1
  1231  01DB                     u1245:
  1232  01DB  1003               	clrc
  1233  01DC  0CB8               	rrf	___xxtofl@arg+3,f
  1234  01DD  0CB7               	rrf	___xxtofl@arg+2,f
  1235  01DE  0CB6               	rrf	___xxtofl@arg+1,f
  1236  01DF  0CB5               	rrf	___xxtofl@arg,f
  1237  01E0  3EFF               	addlw	-1
  1238  01E1  1D03               	skipz
  1239  01E2  29DB               	goto	u1245
  1240  01E3                     l1514:
  1241  01E3  30FE               	movlw	254
  1242  01E4  0538               	andwf	___xxtofl@arg+3,w
  1243  01E5  1D03               	btfss	3,2
  1244  01E6  29E8               	goto	u1251
  1245  01E7  29E9               	goto	u1250
  1246  01E8                     u1251:
  1247  01E8  29D6               	goto	l1512
  1248  01E9                     u1250:
  1249  01E9  2A05               	goto	l717
  1250  01EA                     l1516:
  1251  01EA  3001               	movlw	1
  1252  01EB  00AF               	movwf	??___xxtofl
  1253  01EC  082F               	movf	??___xxtofl,w
  1254  01ED  07B4               	addwf	___xxtofl@exp,f
  1255  01EE                     l1518:
  1256  01EE  3001               	movlw	1
  1257  01EF  07B5               	addwf	___xxtofl@arg,f
  1258  01F0  3000               	movlw	0
  1259  01F1  1803               	skipnc
  1260  01F2  3001               	movlw	1
  1261  01F3  07B6               	addwf	___xxtofl@arg+1,f
  1262  01F4  3000               	movlw	0
  1263  01F5  1803               	skipnc
  1264  01F6  3001               	movlw	1
  1265  01F7  07B7               	addwf	___xxtofl@arg+2,f
  1266  01F8  3000               	movlw	0
  1267  01F9  1803               	skipnc
  1268  01FA  3001               	movlw	1
  1269  01FB  07B8               	addwf	___xxtofl@arg+3,f
  1270  01FC                     l1520:
  1271  01FC  3001               	movlw	1
  1272  01FD                     u1265:
  1273  01FD  1003               	clrc
  1274  01FE  0CB8               	rrf	___xxtofl@arg+3,f
  1275  01FF  0CB7               	rrf	___xxtofl@arg+2,f
  1276  0200  0CB6               	rrf	___xxtofl@arg+1,f
  1277  0201  0CB5               	rrf	___xxtofl@arg,f
  1278  0202  3EFF               	addlw	-1
  1279  0203  1D03               	skipz
  1280  0204  29FD               	goto	u1265
  1281  0205                     l717:
  1282  0205  30FF               	movlw	255
  1283  0206  0538               	andwf	___xxtofl@arg+3,w
  1284  0207  1D03               	btfss	3,2
  1285  0208  2A0A               	goto	u1271
  1286  0209  2A0B               	goto	u1270
  1287  020A                     u1271:
  1288  020A  29EA               	goto	l1516
  1289  020B                     u1270:
  1290  020B  2A17               	goto	l1524
  1291  020C                     l1522:
  1292  020C  3001               	movlw	1
  1293  020D  02B4               	subwf	___xxtofl@exp,f
  1294  020E  3001               	movlw	1
  1295  020F  00AF               	movwf	??___xxtofl
  1296  0210                     u1285:
  1297  0210  1003               	clrc
  1298  0211  0DB5               	rlf	___xxtofl@arg,f
  1299  0212  0DB6               	rlf	___xxtofl@arg+1,f
  1300  0213  0DB7               	rlf	___xxtofl@arg+2,f
  1301  0214  0DB8               	rlf	___xxtofl@arg+3,f
  1302  0215  0BAF               	decfsz	??___xxtofl,f
  1303  0216  2A10               	goto	u1285
  1304  0217                     l1524:
  1305  0217  1BB7               	btfsc	___xxtofl@arg+2,7
  1306  0218  2A1A               	goto	u1291
  1307  0219  2A1B               	goto	u1290
  1308  021A                     u1291:
  1309  021A  2A21               	goto	l724
  1310  021B                     u1290:
  1311  021B                     l1526:
  1312  021B  3002               	movlw	2
  1313  021C  0234               	subwf	___xxtofl@exp,w
  1314  021D  1803               	skipnc
  1315  021E  2A20               	goto	u1301
  1316  021F  2A21               	goto	u1300
  1317  0220                     u1301:
  1318  0220  2A0C               	goto	l1522
  1319  0221                     u1300:
  1320  0221                     l724:
  1321  0221  1834               	btfsc	___xxtofl@exp,0
  1322  0222  2A24               	goto	u1311
  1323  0223  2A25               	goto	u1310
  1324  0224                     u1311:
  1325  0224  2A2D               	goto	l725
  1326  0225                     u1310:
  1327  0225                     l1528:
  1328  0225  30FF               	movlw	255
  1329  0226  05B5               	andwf	___xxtofl@arg,f
  1330  0227  30FF               	movlw	255
  1331  0228  05B6               	andwf	___xxtofl@arg+1,f
  1332  0229  307F               	movlw	127
  1333  022A  05B7               	andwf	___xxtofl@arg+2,f
  1334  022B  30FF               	movlw	255
  1335  022C  05B8               	andwf	___xxtofl@arg+3,f
  1336  022D                     l725:
  1337  022D  1003               	clrc
  1338  022E  0CB4               	rrf	___xxtofl@exp,f
  1339  022F                     l1530:
  1340  022F  0834               	movf	___xxtofl@exp,w
  1341  0230  00AF               	movwf	??___xxtofl
  1342  0231  01B0               	clrf	??___xxtofl+1
  1343  0232  01B1               	clrf	??___xxtofl+2
  1344  0233  01B2               	clrf	??___xxtofl+3
  1345  0234  3018               	movlw	24
  1346  0235                     u1325:
  1347  0235  1003               	clrc
  1348  0236  0DAF               	rlf	??___xxtofl,f
  1349  0237  0DB0               	rlf	??___xxtofl+1,f
  1350  0238  0DB1               	rlf	??___xxtofl+2,f
  1351  0239  0DB2               	rlf	??___xxtofl+3,f
  1352  023A                     u1320:
  1353  023A  3EFF               	addlw	-1
  1354  023B  1D03               	skipz
  1355  023C  2A35               	goto	u1325
  1356  023D  082F               	movf	??___xxtofl,w
  1357  023E  04B5               	iorwf	___xxtofl@arg,f
  1358  023F  0830               	movf	??___xxtofl+1,w
  1359  0240  04B6               	iorwf	___xxtofl@arg+1,f
  1360  0241  0831               	movf	??___xxtofl+2,w
  1361  0242  04B7               	iorwf	___xxtofl@arg+2,f
  1362  0243  0832               	movf	??___xxtofl+3,w
  1363  0244  04B8               	iorwf	___xxtofl@arg+3,f
  1364  0245                     l1532:
  1365  0245  0833               	movf	___xxtofl@sign,w
  1366  0246  1903               	btfsc	3,2
  1367  0247  2A49               	goto	u1331
  1368  0248  2A4A               	goto	u1330
  1369  0249                     u1331:
  1370  0249  2A4F               	goto	l1538
  1371  024A                     u1330:
  1372  024A                     l1534:
  1373  024A  1FAE               	btfss	___xxtofl@val+3,7
  1374  024B  2A4D               	goto	u1341
  1375  024C  2A4E               	goto	u1340
  1376  024D                     u1341:
  1377  024D  2A4F               	goto	l1538
  1378  024E                     u1340:
  1379  024E                     l1536:
  1380  024E  17B8               	bsf	___xxtofl@arg+3,7
  1381  024F                     l1538:
  1382  024F  0838               	movf	___xxtofl@arg+3,w
  1383  0250  00AE               	movwf	?___xxtofl+3
  1384  0251  0837               	movf	___xxtofl@arg+2,w
  1385  0252  00AD               	movwf	?___xxtofl+2
  1386  0253  0836               	movf	___xxtofl@arg+1,w
  1387  0254  00AC               	movwf	?___xxtofl+1
  1388  0255  0835               	movf	___xxtofl@arg,w
  1389  0256  00AB               	movwf	?___xxtofl
  1390  0257                     l713:
  1391  0257  0008               	return
  1392  0258                     __end_of___xxtofl:
  1393                           
  1394                           	psect	text5
  1395  0258                     __ptext5:	
  1396 ;; *************** function ___fltol *****************
  1397 ;; Defined at:
  1398 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\fltol.c"
  1399 ;; Parameters:    Size  Location     Type
  1400 ;;  f1              4    3[COMMON] unsigned char 
  1401 ;; Auto vars:     Size  Location     Type
  1402 ;;  exp1            1    8[COMMON] unsigned char 
  1403 ;;  sign1           1    7[COMMON] unsigned char 
  1404 ;; Return value:  Size  Location     Type
  1405 ;;                  4    3[COMMON] long 
  1406 ;; Registers used:
  1407 ;;		wreg, status,2, status,0
  1408 ;; Tracked objects:
  1409 ;;		On entry : 0/0
  1410 ;;		On exit  : 0/0
  1411 ;;		Unchanged: 0/0
  1412 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1413 ;;      Params:         4       0       0       0       0
  1414 ;;      Locals:         2       0       0       0       0
  1415 ;;      Temps:          0       5       0       0       0
  1416 ;;      Totals:         6       5       0       0       0
  1417 ;;Total ram usage:       11 bytes
  1418 ;; Hardware stack levels used: 1
  1419 ;; Hardware stack levels required when called: 3
  1420 ;; This function calls:
  1421 ;;		Nothing
  1422 ;; This function is called by:
  1423 ;;		_getADConverterValue
  1424 ;; This function uses a non-reentrant model
  1425 ;;
  1426                           
  1427  0258                     ___fltol:	
  1428                           ;psect for function ___fltol
  1429                           
  1430  0258                     l1462:	
  1431                           ;incstack = 0
  1432                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  1433                           
  1434  0258  1003               	clrc
  1435  0259  0D75               	rlf	___fltol@f1+2,w
  1436  025A  0D76               	rlf	___fltol@f1+3,w
  1437  025B  1283               	bcf	3,5	;RP0=0, select bank0
  1438  025C  1303               	bcf	3,6	;RP1=0, select bank0
  1439  025D  00A0               	movwf	??___fltol
  1440  025E  0820               	movf	??___fltol,w
  1441  025F  00F8               	movwf	___fltol@exp1
  1442  0260  0878               	movf	___fltol@exp1,w
  1443  0261  1D03               	btfss	3,2
  1444  0262  2A64               	goto	u1111
  1445  0263  2A65               	goto	u1110
  1446  0264                     u1111:
  1447  0264  2A6E               	goto	l1468
  1448  0265                     u1110:
  1449  0265                     l1464:
  1450  0265  3000               	movlw	0
  1451  0266  00F6               	movwf	?___fltol+3
  1452  0267  3000               	movlw	0
  1453  0268  00F5               	movwf	?___fltol+2
  1454  0269  3000               	movlw	0
  1455  026A  00F4               	movwf	?___fltol+1
  1456  026B  3000               	movlw	0
  1457  026C  00F3               	movwf	?___fltol
  1458  026D  2AD3               	goto	l464
  1459  026E                     l1468:
  1460  026E  0873               	movf	___fltol@f1,w
  1461  026F  00A0               	movwf	??___fltol
  1462  0270  0874               	movf	___fltol@f1+1,w
  1463  0271  00A1               	movwf	??___fltol+1
  1464  0272  0875               	movf	___fltol@f1+2,w
  1465  0273  00A2               	movwf	??___fltol+2
  1466  0274  0876               	movf	___fltol@f1+3,w
  1467  0275  00A3               	movwf	??___fltol+3
  1468  0276  301F               	movlw	31
  1469  0277                     u1125:
  1470  0277  1003               	clrc
  1471  0278  0CA3               	rrf	??___fltol+3,f
  1472  0279  0CA2               	rrf	??___fltol+2,f
  1473  027A  0CA1               	rrf	??___fltol+1,f
  1474  027B  0CA0               	rrf	??___fltol,f
  1475  027C                     u1120:
  1476  027C  3EFF               	addlw	-1
  1477  027D  1D03               	skipz
  1478  027E  2A77               	goto	u1125
  1479  027F  0820               	movf	??___fltol,w
  1480  0280  00A4               	movwf	??___fltol+4
  1481  0281  0824               	movf	??___fltol+4,w
  1482  0282  00F7               	movwf	___fltol@sign1
  1483  0283                     l1470:
  1484  0283  17F5               	bsf	___fltol@f1+2,7
  1485  0284                     l1472:
  1486  0284  30FF               	movlw	255
  1487  0285  05F3               	andwf	___fltol@f1,f
  1488  0286  30FF               	movlw	255
  1489  0287  05F4               	andwf	___fltol@f1+1,f
  1490  0288  30FF               	movlw	255
  1491  0289  05F5               	andwf	___fltol@f1+2,f
  1492  028A  3000               	movlw	0
  1493  028B  05F6               	andwf	___fltol@f1+3,f
  1494  028C                     l1474:
  1495  028C  3096               	movlw	150
  1496  028D  02F8               	subwf	___fltol@exp1,f
  1497  028E                     l1476:
  1498  028E  1FF8               	btfss	___fltol@exp1,7
  1499  028F  2A91               	goto	u1131
  1500  0290  2A92               	goto	u1130
  1501  0291                     u1131:
  1502  0291  2AAC               	goto	l1486
  1503  0292                     u1130:
  1504  0292                     l1478:
  1505  0292  0878               	movf	___fltol@exp1,w
  1506  0293  3A80               	xorlw	128
  1507  0294  3E97               	addlw	151
  1508  0295  1803               	skipnc
  1509  0296  2A98               	goto	u1141
  1510  0297  2A99               	goto	u1140
  1511  0298                     u1141:
  1512  0298  2A9A               	goto	l1484
  1513  0299                     u1140:
  1514  0299  2A65               	goto	l1464
  1515  029A                     l1484:
  1516  029A  3001               	movlw	1
  1517  029B                     u1155:
  1518  029B  1003               	clrc
  1519  029C  0CF6               	rrf	___fltol@f1+3,f
  1520  029D  0CF5               	rrf	___fltol@f1+2,f
  1521  029E  0CF4               	rrf	___fltol@f1+1,f
  1522  029F  0CF3               	rrf	___fltol@f1,f
  1523  02A0  3EFF               	addlw	-1
  1524  02A1  1D03               	skipz
  1525  02A2  2A9B               	goto	u1155
  1526  02A3  3001               	movlw	1
  1527  02A4  00A0               	movwf	??___fltol
  1528  02A5  0820               	movf	??___fltol,w
  1529  02A6  07F8               	addwf	___fltol@exp1,f
  1530  02A7  1D03               	btfss	3,2
  1531  02A8  2AAA               	goto	u1161
  1532  02A9  2AAB               	goto	u1160
  1533  02AA                     u1161:
  1534  02AA  2A9A               	goto	l1484
  1535  02AB                     u1160:
  1536  02AB  2AC3               	goto	l1494
  1537  02AC                     l1486:
  1538  02AC  3020               	movlw	32
  1539  02AD  0278               	subwf	___fltol@exp1,w
  1540  02AE  1C03               	skipc
  1541  02AF  2AB1               	goto	u1171
  1542  02B0  2AB2               	goto	u1170
  1543  02B1                     u1171:
  1544  02B1  2ABE               	goto	l471
  1545  02B2                     u1170:
  1546  02B2  2A65               	goto	l1464
  1547  02B3                     l1492:
  1548  02B3  3001               	movlw	1
  1549  02B4  00A0               	movwf	??___fltol
  1550  02B5                     u1185:
  1551  02B5  1003               	clrc
  1552  02B6  0DF3               	rlf	___fltol@f1,f
  1553  02B7  0DF4               	rlf	___fltol@f1+1,f
  1554  02B8  0DF5               	rlf	___fltol@f1+2,f
  1555  02B9  0DF6               	rlf	___fltol@f1+3,f
  1556  02BA  0BA0               	decfsz	??___fltol,f
  1557  02BB  2AB5               	goto	u1185
  1558  02BC  3001               	movlw	1
  1559  02BD  02F8               	subwf	___fltol@exp1,f
  1560  02BE                     l471:
  1561  02BE  0878               	movf	___fltol@exp1,w
  1562  02BF  1D03               	btfss	3,2
  1563  02C0  2AC2               	goto	u1191
  1564  02C1  2AC3               	goto	u1190
  1565  02C2                     u1191:
  1566  02C2  2AB3               	goto	l1492
  1567  02C3                     u1190:
  1568  02C3                     l1494:
  1569  02C3  0877               	movf	___fltol@sign1,w
  1570  02C4  1903               	btfsc	3,2
  1571  02C5  2AC7               	goto	u1201
  1572  02C6  2AC8               	goto	u1200
  1573  02C7                     u1201:
  1574  02C7  2AD3               	goto	l474
  1575  02C8                     u1200:
  1576  02C8                     l1496:
  1577  02C8  09F3               	comf	___fltol@f1,f
  1578  02C9  09F4               	comf	___fltol@f1+1,f
  1579  02CA  09F5               	comf	___fltol@f1+2,f
  1580  02CB  09F6               	comf	___fltol@f1+3,f
  1581  02CC  0AF3               	incf	___fltol@f1,f
  1582  02CD  1903               	skipnz
  1583  02CE  0AF4               	incf	___fltol@f1+1,f
  1584  02CF  1903               	skipnz
  1585  02D0  0AF5               	incf	___fltol@f1+2,f
  1586  02D1  1903               	skipnz
  1587  02D2  0AF6               	incf	___fltol@f1+3,f
  1588  02D3                     l474:
  1589  02D3                     l464:
  1590  02D3  0008               	return
  1591  02D4                     __end_of___fltol:
  1592                           
  1593                           	psect	text6
  1594  0676                     __ptext6:	
  1595 ;; *************** function _verifyMenu *****************
  1596 ;; Defined at:
  1597 ;;		line 277 in file "main.c"
  1598 ;; Parameters:    Size  Location     Type
  1599 ;;		None
  1600 ;; Auto vars:     Size  Location     Type
  1601 ;;		None
  1602 ;; Return value:  Size  Location     Type
  1603 ;;                  1    wreg      void 
  1604 ;; Registers used:
  1605 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1606 ;; Tracked objects:
  1607 ;;		On entry : 0/0
  1608 ;;		On exit  : 0/0
  1609 ;;		Unchanged: 0/0
  1610 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1611 ;;      Params:         0       0       0       0       0
  1612 ;;      Locals:         0       0       0       0       0
  1613 ;;      Temps:          0       3       0       0       0
  1614 ;;      Totals:         0       3       0       0       0
  1615 ;;Total ram usage:        3 bytes
  1616 ;; Hardware stack levels used: 1
  1617 ;; Hardware stack levels required when called: 8
  1618 ;; This function calls:
  1619 ;;		_handleMenu
  1620 ;; This function is called by:
  1621 ;;		_main
  1622 ;; This function uses a non-reentrant model
  1623 ;;
  1624                           
  1625  0676                     _verifyMenu:	
  1626                           ;psect for function _verifyMenu
  1627                           
  1628  0676                     l2054:	
  1629                           ;incstack = 0
  1630 ;; hardware stack exceeded
  1631                           ; Regs used in _verifyMenu: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1632                           
  1633                           
  1634                           ;main.c: 279:     if (!PORTBbits.RB2)
  1635  0676  1283               	bcf	3,5	;RP0=0, select bank0
  1636  0677  1303               	bcf	3,6	;RP1=0, select bank0
  1637  0678  1906               	btfsc	6,2	;volatile
  1638  0679  2E7B               	goto	u1971
  1639  067A  2E7C               	goto	u1970
  1640  067B                     u1971:
  1641  067B  2E94               	goto	l170
  1642  067C                     u1970:
  1643  067C                     l2056:
  1644                           
  1645                           ;main.c: 280:     {;main.c: 281:         setup_menu = 1;
  1646  067C  3001               	movlw	1
  1647  067D  00CA               	movwf	_setup_menu
  1648  067E  3000               	movlw	0
  1649  067F  00CB               	movwf	_setup_menu+1
  1650  0680                     l2058:
  1651                           
  1652                           ;main.c: 282:         PORTBbits.RB5 = 1;
  1653  0680  1686               	bsf	6,5	;volatile
  1654                           
  1655                           ;main.c: 283:         _delay((unsigned long)((500)*(4000000/4000.0)));
  1656  0681  3003               	movlw	3
  1657  0682  1283               	bcf	3,5	;RP0=0, select bank0
  1658  0683  1303               	bcf	3,6	;RP1=0, select bank0
  1659  0684  00BA               	movwf	??_verifyMenu+2
  1660  0685  308A               	movlw	138
  1661  0686  00B9               	movwf	??_verifyMenu+1
  1662  0687  3055               	movlw	85
  1663  0688  00B8               	movwf	??_verifyMenu
  1664  0689                     u2007:
  1665  0689  0BB8               	decfsz	??_verifyMenu,f
  1666  068A  2E89               	goto	u2007
  1667  068B  0BB9               	decfsz	??_verifyMenu+1,f
  1668  068C  2E89               	goto	u2007
  1669  068D  0BBA               	decfsz	??_verifyMenu+2,f
  1670  068E  2E89               	goto	u2007
  1671  068F                     l2060:
  1672                           
  1673                           ;main.c: 284:         handleMenu();
  1674  068F  120A  118A  2027  120A  118A  	fcall	_handleMenu
  1675  0694                     l170:
  1676  0694  0008               	return
  1677  0695                     __end_of_verifyMenu:
  1678                           
  1679                           	psect	text7
  1680  0027                     __ptext7:	
  1681 ;; *************** function _handleMenu *****************
  1682 ;; Defined at:
  1683 ;;		line 213 in file "main.c"
  1684 ;; Parameters:    Size  Location     Type
  1685 ;;		None
  1686 ;; Auto vars:     Size  Location     Type
  1687 ;;  umidade         2   22[BANK0 ] int 
  1688 ;;  volume          2   20[BANK0 ] int 
  1689 ;; Return value:  Size  Location     Type
  1690 ;;                  1    wreg      void 
  1691 ;; Registers used:
  1692 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1693 ;; Tracked objects:
  1694 ;;		On entry : 0/0
  1695 ;;		On exit  : 0/0
  1696 ;;		Unchanged: 0/0
  1697 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1698 ;;      Params:         0       0       0       0       0
  1699 ;;      Locals:         0       4       0       0       0
  1700 ;;      Temps:          0       3       0       0       0
  1701 ;;      Totals:         0       7       0       0       0
  1702 ;;Total ram usage:        7 bytes
  1703 ;; Hardware stack levels used: 1
  1704 ;; Hardware stack levels required when called: 7
  1705 ;; This function calls:
  1706 ;;		_Lcd_Clear
  1707 ;;		_Lcd_Set_Cursor
  1708 ;;		_Lcd_Write_String
  1709 ;;		_setupNewVolumeFlow
  1710 ;;		_writeValor
  1711 ;; This function is called by:
  1712 ;;		_verifyMenu
  1713 ;; This function uses a non-reentrant model
  1714 ;;
  1715                           
  1716  0027                     _handleMenu:	
  1717                           ;psect for function _handleMenu
  1718                           
  1719  0027                     l1930:	
  1720                           ;incstack = 0
  1721 ;; hardware stack exceeded
  1722                           ; Regs used in _handleMenu: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1723                           
  1724                           
  1725                           ;main.c: 215:     int volume = water_volume;
  1726  0027  1283               	bcf	3,5	;RP0=0, select bank0
  1727  0028  1303               	bcf	3,6	;RP1=0, select bank0
  1728  0029  0845               	movf	_water_volume+1,w
  1729  002A  00B5               	movwf	handleMenu@volume+1
  1730  002B  0844               	movf	_water_volume,w
  1731  002C  00B4               	movwf	handleMenu@volume
  1732                           
  1733                           ;main.c: 216:     int umidade = umidade_minima;
  1734  002D  0847               	movf	_umidade_minima+1,w
  1735  002E  00B7               	movwf	handleMenu@umidade+1
  1736  002F  0846               	movf	_umidade_minima,w
  1737  0030  00B6               	movwf	handleMenu@umidade
  1738                           
  1739                           ;main.c: 218:     while(setup_menu == 1){
  1740  0031  28C9               	goto	l1968
  1741  0032                     l148:
  1742  0032  0064               	clrwdt	;# 
  1743  0033                     l1932:
  1744                           
  1745                           ;main.c: 220:         _delay((unsigned long)((100)*(4000000/4000.0)));
  1746  0033  3082               	movlw	130
  1747  0034  1283               	bcf	3,5	;RP0=0, select bank0
  1748  0035  1303               	bcf	3,6	;RP1=0, select bank0
  1749  0036  00B2               	movwf	??_handleMenu+1
  1750  0037  30DD               	movlw	221
  1751  0038  00B1               	movwf	??_handleMenu
  1752  0039                     u2017:
  1753  0039  0BB1               	decfsz	??_handleMenu,f
  1754  003A  2839               	goto	u2017
  1755  003B  0BB2               	decfsz	??_handleMenu+1,f
  1756  003C  2839               	goto	u2017
  1757  003D                     l1934:
  1758                           
  1759                           ;main.c: 221:         Lcd_Set_Cursor(1,1);
  1760  003D  01F7               	clrf	Lcd_Set_Cursor@b
  1761  003E  0AF7               	incf	Lcd_Set_Cursor@b,f
  1762  003F  3001               	movlw	1
  1763  0040  120A  118A  24BD  120A  118A  	fcall	_Lcd_Set_Cursor
  1764  0045                     l1936:
  1765                           
  1766                           ;main.c: 222:         Lcd_Write_String("NEW THRESHOLD:");
  1767  0045  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1768  0046  120A  118A  25E5  120A  118A  	fcall	_Lcd_Write_String
  1769  004B                     l1938:
  1770                           
  1771                           ;main.c: 223:         writeValor(umidade);
  1772  004B  1283               	bcf	3,5	;RP0=0, select bank0
  1773  004C  1303               	bcf	3,6	;RP1=0, select bank0
  1774  004D  0837               	movf	handleMenu@umidade+1,w
  1775  004E  00AC               	movwf	writeValor@valor+1
  1776  004F  0836               	movf	handleMenu@umidade,w
  1777  0050  00AB               	movwf	writeValor@valor
  1778  0051  120A  118A  22D4  120A  118A  	fcall	_writeValor
  1779  0056                     l1940:
  1780                           
  1781                           ;main.c: 224:         if(!PORTBbits.RB2){
  1782  0056  1283               	bcf	3,5	;RP0=0, select bank0
  1783  0057  1303               	bcf	3,6	;RP1=0, select bank0
  1784  0058  1906               	btfsc	6,2	;volatile
  1785  0059  285B               	goto	u1841
  1786  005A  285C               	goto	u1840
  1787  005B                     u1841:
  1788  005B  2872               	goto	l1944
  1789  005C                     u1840:
  1790  005C                     l1942:
  1791                           
  1792                           ;main.c: 225:             umidade_minima = umidade;
  1793  005C  0837               	movf	handleMenu@umidade+1,w
  1794  005D  00C7               	movwf	_umidade_minima+1
  1795  005E  0836               	movf	handleMenu@umidade,w
  1796  005F  00C6               	movwf	_umidade_minima
  1797                           
  1798                           ;main.c: 226:             setup_menu = 2;
  1799  0060  3002               	movlw	2
  1800  0061  00CA               	movwf	_setup_menu
  1801  0062  3000               	movlw	0
  1802  0063  00CB               	movwf	_setup_menu+1
  1803                           
  1804                           ;main.c: 227:             _delay((unsigned long)((500)*(4000000/4000.0)));
  1805  0064  3003               	movlw	3
  1806  0065  1283               	bcf	3,5	;RP0=0, select bank0
  1807  0066  1303               	bcf	3,6	;RP1=0, select bank0
  1808  0067  00B3               	movwf	??_handleMenu+2
  1809  0068  308A               	movlw	138
  1810  0069  00B2               	movwf	??_handleMenu+1
  1811  006A  3055               	movlw	85
  1812  006B  00B1               	movwf	??_handleMenu
  1813  006C                     u2027:
  1814  006C  0BB1               	decfsz	??_handleMenu,f
  1815  006D  286C               	goto	u2027
  1816  006E  0BB2               	decfsz	??_handleMenu+1,f
  1817  006F  286C               	goto	u2027
  1818  0070  0BB3               	decfsz	??_handleMenu+2,f
  1819  0071  286C               	goto	u2027
  1820  0072                     l1944:
  1821                           
  1822                           ;main.c: 229:         if(!PORTBbits.RB3){
  1823  0072  1283               	bcf	3,5	;RP0=0, select bank0
  1824  0073  1303               	bcf	3,6	;RP1=0, select bank0
  1825  0074  1986               	btfsc	6,3	;volatile
  1826  0075  2877               	goto	u1851
  1827  0076  2878               	goto	u1850
  1828  0077                     u1851:
  1829  0077  28A4               	goto	l1956
  1830  0078                     u1850:
  1831  0078                     l1946:
  1832                           
  1833                           ;main.c: 230:             umidade++;
  1834  0078  3001               	movlw	1
  1835  0079  07B6               	addwf	handleMenu@umidade,f
  1836  007A  1803               	skipnc
  1837  007B  0AB7               	incf	handleMenu@umidade+1,f
  1838  007C  3000               	movlw	0
  1839  007D  07B7               	addwf	handleMenu@umidade+1,f
  1840  007E                     l1948:
  1841                           
  1842                           ;main.c: 231:             if(umidade > 999) umidade = 0;
  1843  007E  0837               	movf	handleMenu@umidade+1,w
  1844  007F  3A80               	xorlw	128
  1845  0080  00FF               	movwf	btemp+1
  1846  0081  3083               	movlw	131
  1847  0082  027F               	subwf	btemp+1,w
  1848  0083  1D03               	skipz
  1849  0084  2887               	goto	u1865
  1850  0085  30E8               	movlw	232
  1851  0086  0236               	subwf	handleMenu@umidade,w
  1852  0087                     u1865:
  1853  0087  1C03               	skipc
  1854  0088  288A               	goto	u1861
  1855  0089  288B               	goto	u1860
  1856  008A                     u1861:
  1857  008A  288F               	goto	l1952
  1858  008B                     u1860:
  1859  008B                     l1950:
  1860  008B  1283               	bcf	3,5	;RP0=0, select bank0
  1861  008C  1303               	bcf	3,6	;RP1=0, select bank0
  1862  008D  01B6               	clrf	handleMenu@umidade
  1863  008E  01B7               	clrf	handleMenu@umidade+1
  1864  008F                     l1952:
  1865                           
  1866                           ;main.c: 232:             writeValor(umidade);
  1867  008F  1283               	bcf	3,5	;RP0=0, select bank0
  1868  0090  1303               	bcf	3,6	;RP1=0, select bank0
  1869  0091  0837               	movf	handleMenu@umidade+1,w
  1870  0092  00AC               	movwf	writeValor@valor+1
  1871  0093  0836               	movf	handleMenu@umidade,w
  1872  0094  00AB               	movwf	writeValor@valor
  1873  0095  120A  118A  22D4  120A  118A  	fcall	_writeValor
  1874  009A                     l1954:
  1875                           
  1876                           ;main.c: 233:             _delay((unsigned long)((100)*(4000000/4000.0)));
  1877  009A  3082               	movlw	130
  1878  009B  1283               	bcf	3,5	;RP0=0, select bank0
  1879  009C  1303               	bcf	3,6	;RP1=0, select bank0
  1880  009D  00B2               	movwf	??_handleMenu+1
  1881  009E  30DD               	movlw	221
  1882  009F  00B1               	movwf	??_handleMenu
  1883  00A0                     u2037:
  1884  00A0  0BB1               	decfsz	??_handleMenu,f
  1885  00A1  28A0               	goto	u2037
  1886  00A2  0BB2               	decfsz	??_handleMenu+1,f
  1887  00A3  28A0               	goto	u2037
  1888  00A4                     l1956:
  1889                           
  1890                           ;main.c: 235:         if(!PORTBbits.RB4){
  1891  00A4  1283               	bcf	3,5	;RP0=0, select bank0
  1892  00A5  1303               	bcf	3,6	;RP1=0, select bank0
  1893  00A6  1A06               	btfsc	6,4	;volatile
  1894  00A7  28A9               	goto	u1871
  1895  00A8  28AA               	goto	u1870
  1896  00A9                     u1871:
  1897  00A9  28C9               	goto	l1968
  1898  00AA                     u1870:
  1899  00AA                     l1958:
  1900                           
  1901                           ;main.c: 236:             umidade--;
  1902  00AA  30FF               	movlw	255
  1903  00AB  07B6               	addwf	handleMenu@umidade,f
  1904  00AC  1803               	skipnc
  1905  00AD  0AB7               	incf	handleMenu@umidade+1,f
  1906  00AE  30FF               	movlw	255
  1907  00AF  07B7               	addwf	handleMenu@umidade+1,f
  1908  00B0                     l1960:
  1909                           
  1910                           ;main.c: 237:             if(umidade < 0) umidade = 0;
  1911  00B0  1FB7               	btfss	handleMenu@umidade+1,7
  1912  00B1  28B3               	goto	u1881
  1913  00B2  28B4               	goto	u1880
  1914  00B3                     u1881:
  1915  00B3  28B6               	goto	l1964
  1916  00B4                     u1880:
  1917  00B4                     l1962:
  1918  00B4  01B6               	clrf	handleMenu@umidade
  1919  00B5  01B7               	clrf	handleMenu@umidade+1
  1920  00B6                     l1964:
  1921                           
  1922                           ;main.c: 238:             writeValor(umidade);
  1923  00B6  0837               	movf	handleMenu@umidade+1,w
  1924  00B7  00AC               	movwf	writeValor@valor+1
  1925  00B8  0836               	movf	handleMenu@umidade,w
  1926  00B9  00AB               	movwf	writeValor@valor
  1927  00BA  120A  118A  22D4  120A  118A  	fcall	_writeValor
  1928  00BF                     l1966:
  1929                           
  1930                           ;main.c: 239:             _delay((unsigned long)((100)*(4000000/4000.0)));
  1931  00BF  3082               	movlw	130
  1932  00C0  1283               	bcf	3,5	;RP0=0, select bank0
  1933  00C1  1303               	bcf	3,6	;RP1=0, select bank0
  1934  00C2  00B2               	movwf	??_handleMenu+1
  1935  00C3  30DD               	movlw	221
  1936  00C4  00B1               	movwf	??_handleMenu
  1937  00C5                     u2047:
  1938  00C5  0BB1               	decfsz	??_handleMenu,f
  1939  00C6  28C5               	goto	u2047
  1940  00C7  0BB2               	decfsz	??_handleMenu+1,f
  1941  00C8  28C5               	goto	u2047
  1942  00C9                     l1968:
  1943                           
  1944                           ;main.c: 218:     while(setup_menu == 1){
  1945  00C9  1283               	bcf	3,5	;RP0=0, select bank0
  1946  00CA  1303               	bcf	3,6	;RP1=0, select bank0
  1947  00CB  034A               	decf	_setup_menu,w
  1948  00CC  044B               	iorwf	_setup_menu+1,w
  1949  00CD  1903               	btfsc	3,2
  1950  00CE  28D0               	goto	u1891
  1951  00CF  28D1               	goto	u1890
  1952  00D0                     u1891:
  1953  00D0  2832               	goto	l148
  1954  00D1                     u1890:
  1955  00D1                     l1970:
  1956                           
  1957                           ;main.c: 242:     Lcd_Clear();
  1958  00D1  120A  118A  2749  120A  118A  	fcall	_Lcd_Clear
  1959                           
  1960                           ;main.c: 243:     while(setup_menu == 2){
  1961  00D6  2979               	goto	l2014
  1962  00D7                     l156:
  1963  00D7  0064               	clrwdt	;# 
  1964  00D8                     l1972:
  1965                           
  1966                           ;main.c: 245:         _delay((unsigned long)((100)*(4000000/4000.0)));
  1967  00D8  3082               	movlw	130
  1968  00D9  1283               	bcf	3,5	;RP0=0, select bank0
  1969  00DA  1303               	bcf	3,6	;RP1=0, select bank0
  1970  00DB  00B2               	movwf	??_handleMenu+1
  1971  00DC  30DD               	movlw	221
  1972  00DD  00B1               	movwf	??_handleMenu
  1973  00DE                     u2057:
  1974  00DE  0BB1               	decfsz	??_handleMenu,f
  1975  00DF  28DE               	goto	u2057
  1976  00E0  0BB2               	decfsz	??_handleMenu+1,f
  1977  00E1  28DE               	goto	u2057
  1978  00E2                     l1974:
  1979                           
  1980                           ;main.c: 246:         Lcd_Set_Cursor(1,1);
  1981  00E2  01F7               	clrf	Lcd_Set_Cursor@b
  1982  00E3  0AF7               	incf	Lcd_Set_Cursor@b,f
  1983  00E4  3001               	movlw	1
  1984  00E5  120A  118A  24BD  120A  118A  	fcall	_Lcd_Set_Cursor
  1985  00EA                     l1976:
  1986                           
  1987                           ;main.c: 247:         Lcd_Write_String("NEW VOLUME:");
  1988  00EA  3010               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1989  00EB  120A  118A  25E5  120A  118A  	fcall	_Lcd_Write_String
  1990  00F0                     l1978:
  1991                           
  1992                           ;main.c: 248:         writeValor(volume);
  1993  00F0  1283               	bcf	3,5	;RP0=0, select bank0
  1994  00F1  1303               	bcf	3,6	;RP1=0, select bank0
  1995  00F2  0835               	movf	handleMenu@volume+1,w
  1996  00F3  00AC               	movwf	writeValor@valor+1
  1997  00F4  0834               	movf	handleMenu@volume,w
  1998  00F5  00AB               	movwf	writeValor@valor
  1999  00F6  120A  118A  22D4  120A  118A  	fcall	_writeValor
  2000  00FB                     l1980:
  2001                           
  2002                           ;main.c: 249:         if(!PORTBbits.RB2){
  2003  00FB  1283               	bcf	3,5	;RP0=0, select bank0
  2004  00FC  1303               	bcf	3,6	;RP1=0, select bank0
  2005  00FD  1906               	btfsc	6,2	;volatile
  2006  00FE  2900               	goto	u1901
  2007  00FF  2901               	goto	u1900
  2008  0100                     u1901:
  2009  0100  2922               	goto	l1990
  2010  0101                     u1900:
  2011  0101                     l1982:
  2012                           
  2013                           ;main.c: 250:             water_volume = volume;
  2014  0101  0835               	movf	handleMenu@volume+1,w
  2015  0102  00C5               	movwf	_water_volume+1
  2016  0103  0834               	movf	handleMenu@volume,w
  2017  0104  00C4               	movwf	_water_volume
  2018  0105                     l1984:
  2019                           
  2020                           ;main.c: 251:             setupNewVolumeFlow(water_volume);
  2021  0105  0845               	movf	_water_volume+1,w
  2022  0106  00AE               	movwf	setupNewVolumeFlow@new_ml+1
  2023  0107  0844               	movf	_water_volume,w
  2024  0108  00AD               	movwf	setupNewVolumeFlow@new_ml
  2025  0109  120A  118A  2695  120A  118A  	fcall	_setupNewVolumeFlow
  2026  010E                     l1986:
  2027                           
  2028                           ;main.c: 252:             setup_menu = 3;
  2029  010E  3003               	movlw	3
  2030  010F  1283               	bcf	3,5	;RP0=0, select bank0
  2031  0110  1303               	bcf	3,6	;RP1=0, select bank0
  2032  0111  00CA               	movwf	_setup_menu
  2033  0112  3000               	movlw	0
  2034  0113  00CB               	movwf	_setup_menu+1
  2035  0114                     l1988:
  2036                           
  2037                           ;main.c: 253:             _delay((unsigned long)((500)*(4000000/4000.0)));
  2038  0114  3003               	movlw	3
  2039  0115  1283               	bcf	3,5	;RP0=0, select bank0
  2040  0116  1303               	bcf	3,6	;RP1=0, select bank0
  2041  0117  00B3               	movwf	??_handleMenu+2
  2042  0118  308A               	movlw	138
  2043  0119  00B2               	movwf	??_handleMenu+1
  2044  011A  3055               	movlw	85
  2045  011B  00B1               	movwf	??_handleMenu
  2046  011C                     u2067:
  2047  011C  0BB1               	decfsz	??_handleMenu,f
  2048  011D  291C               	goto	u2067
  2049  011E  0BB2               	decfsz	??_handleMenu+1,f
  2050  011F  291C               	goto	u2067
  2051  0120  0BB3               	decfsz	??_handleMenu+2,f
  2052  0121  291C               	goto	u2067
  2053  0122                     l1990:
  2054                           
  2055                           ;main.c: 255:         if(!PORTBbits.RB3){
  2056  0122  1283               	bcf	3,5	;RP0=0, select bank0
  2057  0123  1303               	bcf	3,6	;RP1=0, select bank0
  2058  0124  1986               	btfsc	6,3	;volatile
  2059  0125  2927               	goto	u1911
  2060  0126  2928               	goto	u1910
  2061  0127                     u1911:
  2062  0127  2954               	goto	l2002
  2063  0128                     u1910:
  2064  0128                     l1992:
  2065                           
  2066                           ;main.c: 256:             volume++;
  2067  0128  3001               	movlw	1
  2068  0129  07B4               	addwf	handleMenu@volume,f
  2069  012A  1803               	skipnc
  2070  012B  0AB5               	incf	handleMenu@volume+1,f
  2071  012C  3000               	movlw	0
  2072  012D  07B5               	addwf	handleMenu@volume+1,f
  2073  012E                     l1994:
  2074                           
  2075                           ;main.c: 257:             if(volume > 999) volume = 0;
  2076  012E  0835               	movf	handleMenu@volume+1,w
  2077  012F  3A80               	xorlw	128
  2078  0130  00FF               	movwf	btemp+1
  2079  0131  3083               	movlw	131
  2080  0132  027F               	subwf	btemp+1,w
  2081  0133  1D03               	skipz
  2082  0134  2937               	goto	u1925
  2083  0135  30E8               	movlw	232
  2084  0136  0234               	subwf	handleMenu@volume,w
  2085  0137                     u1925:
  2086  0137  1C03               	skipc
  2087  0138  293A               	goto	u1921
  2088  0139  293B               	goto	u1920
  2089  013A                     u1921:
  2090  013A  293F               	goto	l1998
  2091  013B                     u1920:
  2092  013B                     l1996:
  2093  013B  1283               	bcf	3,5	;RP0=0, select bank0
  2094  013C  1303               	bcf	3,6	;RP1=0, select bank0
  2095  013D  01B4               	clrf	handleMenu@volume
  2096  013E  01B5               	clrf	handleMenu@volume+1
  2097  013F                     l1998:
  2098                           
  2099                           ;main.c: 258:             writeValor(volume);
  2100  013F  1283               	bcf	3,5	;RP0=0, select bank0
  2101  0140  1303               	bcf	3,6	;RP1=0, select bank0
  2102  0141  0835               	movf	handleMenu@volume+1,w
  2103  0142  00AC               	movwf	writeValor@valor+1
  2104  0143  0834               	movf	handleMenu@volume,w
  2105  0144  00AB               	movwf	writeValor@valor
  2106  0145  120A  118A  22D4  120A  118A  	fcall	_writeValor
  2107  014A                     l2000:
  2108                           
  2109                           ;main.c: 259:             _delay((unsigned long)((100)*(4000000/4000.0)));
  2110  014A  3082               	movlw	130
  2111  014B  1283               	bcf	3,5	;RP0=0, select bank0
  2112  014C  1303               	bcf	3,6	;RP1=0, select bank0
  2113  014D  00B2               	movwf	??_handleMenu+1
  2114  014E  30DD               	movlw	221
  2115  014F  00B1               	movwf	??_handleMenu
  2116  0150                     u2077:
  2117  0150  0BB1               	decfsz	??_handleMenu,f
  2118  0151  2950               	goto	u2077
  2119  0152  0BB2               	decfsz	??_handleMenu+1,f
  2120  0153  2950               	goto	u2077
  2121  0154                     l2002:
  2122                           
  2123                           ;main.c: 261:         if(!PORTBbits.RB4){
  2124  0154  1283               	bcf	3,5	;RP0=0, select bank0
  2125  0155  1303               	bcf	3,6	;RP1=0, select bank0
  2126  0156  1A06               	btfsc	6,4	;volatile
  2127  0157  2959               	goto	u1931
  2128  0158  295A               	goto	u1930
  2129  0159                     u1931:
  2130  0159  2979               	goto	l2014
  2131  015A                     u1930:
  2132  015A                     l2004:
  2133                           
  2134                           ;main.c: 262:             volume--;
  2135  015A  30FF               	movlw	255
  2136  015B  07B4               	addwf	handleMenu@volume,f
  2137  015C  1803               	skipnc
  2138  015D  0AB5               	incf	handleMenu@volume+1,f
  2139  015E  30FF               	movlw	255
  2140  015F  07B5               	addwf	handleMenu@volume+1,f
  2141  0160                     l2006:
  2142                           
  2143                           ;main.c: 263:             if(volume < 0) volume = 0;
  2144  0160  1FB5               	btfss	handleMenu@volume+1,7
  2145  0161  2963               	goto	u1941
  2146  0162  2964               	goto	u1940
  2147  0163                     u1941:
  2148  0163  2966               	goto	l2010
  2149  0164                     u1940:
  2150  0164                     l2008:
  2151  0164  01B4               	clrf	handleMenu@volume
  2152  0165  01B5               	clrf	handleMenu@volume+1
  2153  0166                     l2010:
  2154                           
  2155                           ;main.c: 264:             writeValor(volume);
  2156  0166  0835               	movf	handleMenu@volume+1,w
  2157  0167  00AC               	movwf	writeValor@valor+1
  2158  0168  0834               	movf	handleMenu@volume,w
  2159  0169  00AB               	movwf	writeValor@valor
  2160  016A  120A  118A  22D4  120A  118A  	fcall	_writeValor
  2161  016F                     l2012:
  2162                           
  2163                           ;main.c: 265:             _delay((unsigned long)((100)*(4000000/4000.0)));
  2164  016F  3082               	movlw	130
  2165  0170  1283               	bcf	3,5	;RP0=0, select bank0
  2166  0171  1303               	bcf	3,6	;RP1=0, select bank0
  2167  0172  00B2               	movwf	??_handleMenu+1
  2168  0173  30DD               	movlw	221
  2169  0174  00B1               	movwf	??_handleMenu
  2170  0175                     u2087:
  2171  0175  0BB1               	decfsz	??_handleMenu,f
  2172  0176  2975               	goto	u2087
  2173  0177  0BB2               	decfsz	??_handleMenu+1,f
  2174  0178  2975               	goto	u2087
  2175  0179                     l2014:
  2176                           
  2177                           ;main.c: 243:     while(setup_menu == 2){
  2178  0179  3002               	movlw	2
  2179  017A  1283               	bcf	3,5	;RP0=0, select bank0
  2180  017B  1303               	bcf	3,6	;RP1=0, select bank0
  2181  017C  064A               	xorwf	_setup_menu,w
  2182  017D  044B               	iorwf	_setup_menu+1,w
  2183  017E  1903               	btfsc	3,2
  2184  017F  2981               	goto	u1951
  2185  0180  2982               	goto	u1950
  2186  0181                     u1951:
  2187  0181  28D7               	goto	l156
  2188  0182                     u1950:
  2189  0182                     l2016:
  2190                           
  2191                           ;main.c: 268:     Lcd_Clear();
  2192  0182  120A  118A  2749  120A  118A  	fcall	_Lcd_Clear
  2193                           
  2194                           ;main.c: 269:     while(setup_menu == 3){
  2195  0187  298D               	goto	l2018
  2196  0188                     l164:
  2197  0188  0064               	clrwdt	;# 
  2198                           
  2199                           ;main.c: 271:         PORTBbits.RB5 = 0;
  2200  0189  1283               	bcf	3,5	;RP0=0, select bank0
  2201  018A  1303               	bcf	3,6	;RP1=0, select bank0
  2202  018B  1286               	bcf	6,5	;volatile
  2203                           
  2204                           ;main.c: 272:         break;
  2205  018C  2996               	goto	l2020
  2206  018D                     l2018:
  2207                           
  2208                           ;main.c: 269:     while(setup_menu == 3){
  2209  018D  3003               	movlw	3
  2210  018E  1283               	bcf	3,5	;RP0=0, select bank0
  2211  018F  1303               	bcf	3,6	;RP1=0, select bank0
  2212  0190  064A               	xorwf	_setup_menu,w
  2213  0191  044B               	iorwf	_setup_menu+1,w
  2214  0192  1903               	btfsc	3,2
  2215  0193  2995               	goto	u1961
  2216  0194  2996               	goto	u1960
  2217  0195                     u1961:
  2218  0195  2988               	goto	l164
  2219  0196                     u1960:
  2220  0196                     l2020:
  2221                           
  2222                           ;main.c: 274:     Lcd_Clear();
  2223  0196  120A  118A  2749  120A  118A  	fcall	_Lcd_Clear
  2224  019B                     l166:
  2225  019B  0008               	return
  2226  019C                     __end_of_handleMenu:
  2227                           
  2228                           	psect	text8
  2229  02D4                     __ptext8:	
  2230 ;; *************** function _writeValor *****************
  2231 ;; Defined at:
  2232 ;;		line 201 in file "main.c"
  2233 ;; Parameters:    Size  Location     Type
  2234 ;;  valor           2   11[BANK0 ] int 
  2235 ;; Auto vars:     Size  Location     Type
  2236 ;;  unidade         1   16[BANK0 ] unsigned char 
  2237 ;;  dezena          1   15[BANK0 ] unsigned char 
  2238 ;;  centena         1   14[BANK0 ] unsigned char 
  2239 ;; Return value:  Size  Location     Type
  2240 ;;                  1    wreg      void 
  2241 ;; Registers used:
  2242 ;;		wreg, status,2, status,0, pclath, cstack
  2243 ;; Tracked objects:
  2244 ;;		On entry : 0/0
  2245 ;;		On exit  : 0/0
  2246 ;;		Unchanged: 0/0
  2247 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2248 ;;      Params:         0       2       0       0       0
  2249 ;;      Locals:         0       3       0       0       0
  2250 ;;      Temps:          0       1       0       0       0
  2251 ;;      Totals:         0       6       0       0       0
  2252 ;;Total ram usage:        6 bytes
  2253 ;; Hardware stack levels used: 1
  2254 ;; Hardware stack levels required when called: 6
  2255 ;; This function calls:
  2256 ;;		_Lcd_Set_Cursor
  2257 ;;		_Lcd_Write_Char
  2258 ;;		___awdiv
  2259 ;;		___awmod
  2260 ;; This function is called by:
  2261 ;;		_handleMenu
  2262 ;; This function uses a non-reentrant model
  2263 ;;
  2264                           
  2265  02D4                     _writeValor:	
  2266                           ;psect for function _writeValor
  2267                           
  2268  02D4                     l1926:	
  2269                           ;incstack = 0
  2270 ;; hardware stack exceeded
  2271                           ; Regs used in _writeValor: [wreg+status,2+status,0+pclath+cstack]
  2272                           
  2273                           
  2274                           ;main.c: 201: void writeValor(int valor);main.c: 202: {;main.c: 203:     char centena = 
      +                          valor/100 + 48;
  2275  02D4  3064               	movlw	100
  2276  02D5  1283               	bcf	3,5	;RP0=0, select bank0
  2277  02D6  1303               	bcf	3,6	;RP1=0, select bank0
  2278  02D7  00A2               	movwf	___awdiv@divisor
  2279  02D8  3000               	movlw	0
  2280  02D9  00A3               	movwf	___awdiv@divisor+1
  2281  02DA  082C               	movf	writeValor@valor+1,w
  2282  02DB  00A5               	movwf	___awdiv@dividend+1
  2283  02DC  082B               	movf	writeValor@valor,w
  2284  02DD  00A4               	movwf	___awdiv@dividend
  2285  02DE  120A  118A  2342  120A  118A  	fcall	___awdiv
  2286  02E3  1283               	bcf	3,5	;RP0=0, select bank0
  2287  02E4  1303               	bcf	3,6	;RP1=0, select bank0
  2288  02E5  0822               	movf	?___awdiv,w
  2289  02E6  3E30               	addlw	48
  2290  02E7  00AD               	movwf	??_writeValor
  2291  02E8  082D               	movf	??_writeValor,w
  2292  02E9  00AE               	movwf	writeValor@centena
  2293                           
  2294                           ;main.c: 204:     char dezena = (valor%100)/10 + 48;
  2295  02EA  300A               	movlw	10
  2296  02EB  00A2               	movwf	___awdiv@divisor
  2297  02EC  3000               	movlw	0
  2298  02ED  00A3               	movwf	___awdiv@divisor+1
  2299  02EE  082C               	movf	writeValor@valor+1,w
  2300  02EF  00F6               	movwf	___awmod@dividend+1
  2301  02F0  082B               	movf	writeValor@valor,w
  2302  02F1  00F5               	movwf	___awmod@dividend
  2303  02F2  3064               	movlw	100
  2304  02F3  00F3               	movwf	___awmod@divisor
  2305  02F4  3000               	movlw	0
  2306  02F5  00F4               	movwf	___awmod@divisor+1
  2307  02F6  120A  118A  2408  120A  118A  	fcall	___awmod
  2308  02FB  0874               	movf	?___awmod+1,w
  2309  02FC  1283               	bcf	3,5	;RP0=0, select bank0
  2310  02FD  1303               	bcf	3,6	;RP1=0, select bank0
  2311  02FE  00A5               	movwf	___awdiv@dividend+1
  2312  02FF  0873               	movf	?___awmod,w
  2313  0300  00A4               	movwf	___awdiv@dividend
  2314  0301  120A  118A  2342  120A  118A  	fcall	___awdiv
  2315  0306  1283               	bcf	3,5	;RP0=0, select bank0
  2316  0307  1303               	bcf	3,6	;RP1=0, select bank0
  2317  0308  0822               	movf	?___awdiv,w
  2318  0309  3E30               	addlw	48
  2319  030A  00AD               	movwf	??_writeValor
  2320  030B  082D               	movf	??_writeValor,w
  2321  030C  00AF               	movwf	writeValor@dezena
  2322                           
  2323                           ;main.c: 205:     char unidade = valor%10 + 48;
  2324  030D  300A               	movlw	10
  2325  030E  00F3               	movwf	___awmod@divisor
  2326  030F  3000               	movlw	0
  2327  0310  00F4               	movwf	___awmod@divisor+1
  2328  0311  082C               	movf	writeValor@valor+1,w
  2329  0312  00F6               	movwf	___awmod@dividend+1
  2330  0313  082B               	movf	writeValor@valor,w
  2331  0314  00F5               	movwf	___awmod@dividend
  2332  0315  120A  118A  2408  120A  118A  	fcall	___awmod
  2333  031A  0873               	movf	?___awmod,w
  2334  031B  3E30               	addlw	48
  2335  031C  1283               	bcf	3,5	;RP0=0, select bank0
  2336  031D  1303               	bcf	3,6	;RP1=0, select bank0
  2337  031E  00AD               	movwf	??_writeValor
  2338  031F  082D               	movf	??_writeValor,w
  2339  0320  00B0               	movwf	writeValor@unidade
  2340                           
  2341                           ;main.c: 206:     Lcd_Set_Cursor(2,1);
  2342  0321  01F7               	clrf	Lcd_Set_Cursor@b
  2343  0322  0AF7               	incf	Lcd_Set_Cursor@b,f
  2344  0323  3002               	movlw	2
  2345  0324  120A  118A  24BD  120A  118A  	fcall	_Lcd_Set_Cursor
  2346                           
  2347                           ;main.c: 207:     Lcd_Write_Char(centena);
  2348  0329  1283               	bcf	3,5	;RP0=0, select bank0
  2349  032A  1303               	bcf	3,6	;RP1=0, select bank0
  2350  032B  082E               	movf	writeValor@centena,w
  2351  032C  120A  118A  254E  120A  118A  	fcall	_Lcd_Write_Char
  2352                           
  2353                           ;main.c: 208:     Lcd_Write_Char(dezena);
  2354  0331  1283               	bcf	3,5	;RP0=0, select bank0
  2355  0332  1303               	bcf	3,6	;RP1=0, select bank0
  2356  0333  082F               	movf	writeValor@dezena,w
  2357  0334  120A  118A  254E  120A  118A  	fcall	_Lcd_Write_Char
  2358                           
  2359                           ;main.c: 209:     Lcd_Write_Char(unidade);
  2360  0339  1283               	bcf	3,5	;RP0=0, select bank0
  2361  033A  1303               	bcf	3,6	;RP1=0, select bank0
  2362  033B  0830               	movf	writeValor@unidade,w
  2363  033C  120A  118A  254E  120A  118A  	fcall	_Lcd_Write_Char
  2364  0341                     l144:
  2365  0341  0008               	return
  2366  0342                     __end_of_writeValor:
  2367                           
  2368                           	psect	text9
  2369  0408                     __ptext9:	
  2370 ;; *************** function ___awmod *****************
  2371 ;; Defined at:
  2372 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\awmod.c"
  2373 ;; Parameters:    Size  Location     Type
  2374 ;;  divisor         2    3[COMMON] int 
  2375 ;;  dividend        2    5[COMMON] int 
  2376 ;; Auto vars:     Size  Location     Type
  2377 ;;  sign            1    1[BANK0 ] unsigned char 
  2378 ;;  counter         1    0[BANK0 ] unsigned char 
  2379 ;; Return value:  Size  Location     Type
  2380 ;;                  2    3[COMMON] int 
  2381 ;; Registers used:
  2382 ;;		wreg, status,2, status,0
  2383 ;; Tracked objects:
  2384 ;;		On entry : 0/0
  2385 ;;		On exit  : 0/0
  2386 ;;		Unchanged: 0/0
  2387 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2388 ;;      Params:         4       0       0       0       0
  2389 ;;      Locals:         0       2       0       0       0
  2390 ;;      Temps:          1       0       0       0       0
  2391 ;;      Totals:         5       2       0       0       0
  2392 ;;Total ram usage:        7 bytes
  2393 ;; Hardware stack levels used: 1
  2394 ;; Hardware stack levels required when called: 3
  2395 ;; This function calls:
  2396 ;;		Nothing
  2397 ;; This function is called by:
  2398 ;;		_writeValor
  2399 ;; This function uses a non-reentrant model
  2400 ;;
  2401                           
  2402  0408                     ___awmod:	
  2403                           ;psect for function ___awmod
  2404                           
  2405  0408                     l1874:	
  2406                           ;incstack = 0
  2407                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2408                           
  2409  0408  1283               	bcf	3,5	;RP0=0, select bank0
  2410  0409  1303               	bcf	3,6	;RP1=0, select bank0
  2411  040A  01A1               	clrf	___awmod@sign
  2412  040B                     l1876:
  2413  040B  1FF6               	btfss	___awmod@dividend+1,7
  2414  040C  2C0E               	goto	u1741
  2415  040D  2C0F               	goto	u1740
  2416  040E                     u1741:
  2417  040E  2C16               	goto	l1882
  2418  040F                     u1740:
  2419  040F                     l1878:
  2420  040F  09F5               	comf	___awmod@dividend,f
  2421  0410  09F6               	comf	___awmod@dividend+1,f
  2422  0411  0AF5               	incf	___awmod@dividend,f
  2423  0412  1903               	skipnz
  2424  0413  0AF6               	incf	___awmod@dividend+1,f
  2425  0414                     l1880:
  2426  0414  01A1               	clrf	___awmod@sign
  2427  0415  0AA1               	incf	___awmod@sign,f
  2428  0416                     l1882:
  2429  0416  1FF4               	btfss	___awmod@divisor+1,7
  2430  0417  2C19               	goto	u1751
  2431  0418  2C1A               	goto	u1750
  2432  0419                     u1751:
  2433  0419  2C1F               	goto	l1886
  2434  041A                     u1750:
  2435  041A                     l1884:
  2436  041A  09F3               	comf	___awmod@divisor,f
  2437  041B  09F4               	comf	___awmod@divisor+1,f
  2438  041C  0AF3               	incf	___awmod@divisor,f
  2439  041D  1903               	skipnz
  2440  041E  0AF4               	incf	___awmod@divisor+1,f
  2441  041F                     l1886:
  2442  041F  0873               	movf	___awmod@divisor,w
  2443  0420  0474               	iorwf	___awmod@divisor+1,w
  2444  0421  1903               	btfsc	3,2
  2445  0422  2C24               	goto	u1761
  2446  0423  2C25               	goto	u1760
  2447  0424                     u1761:
  2448  0424  2C54               	goto	l1904
  2449  0425                     u1760:
  2450  0425                     l1888:
  2451  0425  01A0               	clrf	___awmod@counter
  2452  0426  0AA0               	incf	___awmod@counter,f
  2453  0427  2C33               	goto	l1894
  2454  0428                     l1890:
  2455  0428  3001               	movlw	1
  2456  0429                     u1775:
  2457  0429  1003               	clrc
  2458  042A  0DF3               	rlf	___awmod@divisor,f
  2459  042B  0DF4               	rlf	___awmod@divisor+1,f
  2460  042C  3EFF               	addlw	-1
  2461  042D  1D03               	skipz
  2462  042E  2C29               	goto	u1775
  2463  042F                     l1892:
  2464  042F  3001               	movlw	1
  2465  0430  00F7               	movwf	??___awmod
  2466  0431  0877               	movf	??___awmod,w
  2467  0432  07A0               	addwf	___awmod@counter,f
  2468  0433                     l1894:
  2469  0433  1FF4               	btfss	___awmod@divisor+1,7
  2470  0434  2C36               	goto	u1781
  2471  0435  2C37               	goto	u1780
  2472  0436                     u1781:
  2473  0436  2C28               	goto	l1890
  2474  0437                     u1780:
  2475  0437                     l1896:
  2476  0437  0874               	movf	___awmod@divisor+1,w
  2477  0438  0276               	subwf	___awmod@dividend+1,w
  2478  0439  1D03               	skipz
  2479  043A  2C3D               	goto	u1795
  2480  043B  0873               	movf	___awmod@divisor,w
  2481  043C  0275               	subwf	___awmod@dividend,w
  2482  043D                     u1795:
  2483  043D  1C03               	skipc
  2484  043E  2C40               	goto	u1791
  2485  043F  2C41               	goto	u1790
  2486  0440                     u1791:
  2487  0440  2C47               	goto	l1900
  2488  0441                     u1790:
  2489  0441                     l1898:
  2490  0441  0873               	movf	___awmod@divisor,w
  2491  0442  02F5               	subwf	___awmod@dividend,f
  2492  0443  0874               	movf	___awmod@divisor+1,w
  2493  0444  1C03               	skipc
  2494  0445  03F6               	decf	___awmod@dividend+1,f
  2495  0446  02F6               	subwf	___awmod@dividend+1,f
  2496  0447                     l1900:
  2497  0447  3001               	movlw	1
  2498  0448                     u1805:
  2499  0448  1003               	clrc
  2500  0449  0CF4               	rrf	___awmod@divisor+1,f
  2501  044A  0CF3               	rrf	___awmod@divisor,f
  2502  044B  3EFF               	addlw	-1
  2503  044C  1D03               	skipz
  2504  044D  2C48               	goto	u1805
  2505  044E                     l1902:
  2506  044E  3001               	movlw	1
  2507  044F  02A0               	subwf	___awmod@counter,f
  2508  0450  1D03               	btfss	3,2
  2509  0451  2C53               	goto	u1811
  2510  0452  2C54               	goto	u1810
  2511  0453                     u1811:
  2512  0453  2C37               	goto	l1896
  2513  0454                     u1810:
  2514  0454                     l1904:
  2515  0454  0821               	movf	___awmod@sign,w
  2516  0455  1903               	btfsc	3,2
  2517  0456  2C58               	goto	u1821
  2518  0457  2C59               	goto	u1820
  2519  0458                     u1821:
  2520  0458  2C5E               	goto	l1908
  2521  0459                     u1820:
  2522  0459                     l1906:
  2523  0459  09F5               	comf	___awmod@dividend,f
  2524  045A  09F6               	comf	___awmod@dividend+1,f
  2525  045B  0AF5               	incf	___awmod@dividend,f
  2526  045C  1903               	skipnz
  2527  045D  0AF6               	incf	___awmod@dividend+1,f
  2528  045E                     l1908:
  2529  045E  0876               	movf	___awmod@dividend+1,w
  2530  045F  00F4               	movwf	?___awmod+1
  2531  0460  0875               	movf	___awmod@dividend,w
  2532  0461  00F3               	movwf	?___awmod
  2533  0462                     l444:
  2534  0462  0008               	return
  2535  0463                     __end_of___awmod:
  2536                           
  2537                           	psect	text10
  2538  04BD                     __ptext10:	
  2539 ;; *************** function _Lcd_Set_Cursor *****************
  2540 ;; Defined at:
  2541 ;;		line 41 in file "./lcd.h"
  2542 ;; Parameters:    Size  Location     Type
  2543 ;;  a               1    wreg     unsigned char 
  2544 ;;  b               1    7[COMMON] unsigned char 
  2545 ;; Auto vars:     Size  Location     Type
  2546 ;;  a               1    2[BANK0 ] unsigned char 
  2547 ;;  temp            1    5[BANK0 ] unsigned char 
  2548 ;;  y               1    4[BANK0 ] unsigned char 
  2549 ;;  z               1    3[BANK0 ] unsigned char 
  2550 ;; Return value:  Size  Location     Type
  2551 ;;                  1    wreg      void 
  2552 ;; Registers used:
  2553 ;;		wreg, status,2, status,0, pclath, cstack
  2554 ;; Tracked objects:
  2555 ;;		On entry : 0/0
  2556 ;;		On exit  : 0/0
  2557 ;;		Unchanged: 0/0
  2558 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2559 ;;      Params:         1       0       0       0       0
  2560 ;;      Locals:         0       4       0       0       0
  2561 ;;      Temps:          0       2       0       0       0
  2562 ;;      Totals:         1       6       0       0       0
  2563 ;;Total ram usage:        7 bytes
  2564 ;; Hardware stack levels used: 1
  2565 ;; Hardware stack levels required when called: 5
  2566 ;; This function calls:
  2567 ;;		_Lcd_Cmd
  2568 ;; This function is called by:
  2569 ;;		_writeValor
  2570 ;;		_handleMenu
  2571 ;; This function uses a non-reentrant model
  2572 ;;
  2573                           
  2574  04BD                     _Lcd_Set_Cursor:	
  2575                           ;psect for function _Lcd_Set_Cursor
  2576                           
  2577                           
  2578                           ;incstack = 0
  2579 ;; hardware stack exceeded
  2580                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  2581                           ;Lcd_Set_Cursor@a stored from wreg
  2582  04BD  1283               	bcf	3,5	;RP0=0, select bank0
  2583  04BE  1303               	bcf	3,6	;RP1=0, select bank0
  2584  04BF  00A2               	movwf	Lcd_Set_Cursor@a
  2585  04C0                     l1830:
  2586                           
  2587                           ;./lcd.h: 41: void Lcd_Set_Cursor(char a, char b);./lcd.h: 42: {;./lcd.h: 43:  char temp
      +                          ,z,y;;./lcd.h: 44:  if(a == 1)
  2588  04C0  0322               	decf	Lcd_Set_Cursor@a,w
  2589  04C1  1D03               	btfss	3,2
  2590  04C2  2CC4               	goto	u1691
  2591  04C3  2CC5               	goto	u1690
  2592  04C4                     u1691:
  2593  04C4  2CEA               	goto	l1840
  2594  04C5                     u1690:
  2595  04C5                     l1832:
  2596                           
  2597                           ;./lcd.h: 45:  {;./lcd.h: 46:    temp = 0x80 + b - 1;
  2598  04C5  0877               	movf	Lcd_Set_Cursor@b,w
  2599  04C6  3E7F               	addlw	127
  2600  04C7  00A0               	movwf	??_Lcd_Set_Cursor
  2601  04C8  0820               	movf	??_Lcd_Set_Cursor,w
  2602  04C9  00A5               	movwf	Lcd_Set_Cursor@temp
  2603                           
  2604                           ;./lcd.h: 47:   z = temp>>4;
  2605  04CA  0825               	movf	Lcd_Set_Cursor@temp,w
  2606  04CB  00A0               	movwf	??_Lcd_Set_Cursor
  2607  04CC  3004               	movlw	4
  2608  04CD                     u1705:
  2609  04CD  1003               	clrc
  2610  04CE  0CA0               	rrf	??_Lcd_Set_Cursor,f
  2611  04CF  3EFF               	addlw	-1
  2612  04D0  1D03               	skipz
  2613  04D1  2CCD               	goto	u1705
  2614  04D2  0820               	movf	??_Lcd_Set_Cursor,w
  2615  04D3  00A1               	movwf	??_Lcd_Set_Cursor+1
  2616  04D4  0821               	movf	??_Lcd_Set_Cursor+1,w
  2617  04D5  00A3               	movwf	Lcd_Set_Cursor@z
  2618  04D6                     l1834:
  2619                           
  2620                           ;./lcd.h: 48:   y = temp & 0x0F;
  2621  04D6  0825               	movf	Lcd_Set_Cursor@temp,w
  2622  04D7  390F               	andlw	15
  2623  04D8  00A0               	movwf	??_Lcd_Set_Cursor
  2624  04D9  0820               	movf	??_Lcd_Set_Cursor,w
  2625  04DA  00A4               	movwf	Lcd_Set_Cursor@y
  2626  04DB                     l1836:
  2627                           
  2628                           ;./lcd.h: 49:   Lcd_Cmd(z);
  2629  04DB  0823               	movf	Lcd_Set_Cursor@z,w
  2630  04DC  120A  118A  26B4  120A  118A  	fcall	_Lcd_Cmd
  2631  04E1                     l1838:
  2632                           
  2633                           ;./lcd.h: 50:   Lcd_Cmd(y);
  2634  04E1  1283               	bcf	3,5	;RP0=0, select bank0
  2635  04E2  1303               	bcf	3,6	;RP1=0, select bank0
  2636  04E3  0824               	movf	Lcd_Set_Cursor@y,w
  2637  04E4  120A  118A  26B4  120A  118A  	fcall	_Lcd_Cmd
  2638                           
  2639                           ;./lcd.h: 51:  }
  2640  04E9  2D14               	goto	l77
  2641  04EA                     l1840:
  2642  04EA  3002               	movlw	2
  2643  04EB  0622               	xorwf	Lcd_Set_Cursor@a,w
  2644  04EC  1D03               	btfss	3,2
  2645  04ED  2CEF               	goto	u1711
  2646  04EE  2CF0               	goto	u1710
  2647  04EF                     u1711:
  2648  04EF  2D14               	goto	l77
  2649  04F0                     u1710:
  2650  04F0                     l1842:
  2651                           
  2652                           ;./lcd.h: 53:  {;./lcd.h: 54:   temp = 0xC0 + b - 1;
  2653  04F0  0877               	movf	Lcd_Set_Cursor@b,w
  2654  04F1  3EBF               	addlw	191
  2655  04F2  00A0               	movwf	??_Lcd_Set_Cursor
  2656  04F3  0820               	movf	??_Lcd_Set_Cursor,w
  2657  04F4  00A5               	movwf	Lcd_Set_Cursor@temp
  2658                           
  2659                           ;./lcd.h: 55:   z = temp>>4;
  2660  04F5  0825               	movf	Lcd_Set_Cursor@temp,w
  2661  04F6  00A0               	movwf	??_Lcd_Set_Cursor
  2662  04F7  3004               	movlw	4
  2663  04F8                     u1725:
  2664  04F8  1003               	clrc
  2665  04F9  0CA0               	rrf	??_Lcd_Set_Cursor,f
  2666  04FA  3EFF               	addlw	-1
  2667  04FB  1D03               	skipz
  2668  04FC  2CF8               	goto	u1725
  2669  04FD  0820               	movf	??_Lcd_Set_Cursor,w
  2670  04FE  00A1               	movwf	??_Lcd_Set_Cursor+1
  2671  04FF  0821               	movf	??_Lcd_Set_Cursor+1,w
  2672  0500  00A3               	movwf	Lcd_Set_Cursor@z
  2673  0501                     l1844:
  2674                           
  2675                           ;./lcd.h: 56:   y = temp & 0x0F;
  2676  0501  0825               	movf	Lcd_Set_Cursor@temp,w
  2677  0502  390F               	andlw	15
  2678  0503  00A0               	movwf	??_Lcd_Set_Cursor
  2679  0504  0820               	movf	??_Lcd_Set_Cursor,w
  2680  0505  00A4               	movwf	Lcd_Set_Cursor@y
  2681  0506                     l1846:
  2682                           
  2683                           ;./lcd.h: 57:   Lcd_Cmd(z);
  2684  0506  0823               	movf	Lcd_Set_Cursor@z,w
  2685  0507  120A  118A  26B4  120A  118A  	fcall	_Lcd_Cmd
  2686  050C                     l1848:
  2687                           
  2688                           ;./lcd.h: 58:   Lcd_Cmd(y);
  2689  050C  1283               	bcf	3,5	;RP0=0, select bank0
  2690  050D  1303               	bcf	3,6	;RP1=0, select bank0
  2691  050E  0824               	movf	Lcd_Set_Cursor@y,w
  2692  050F  120A  118A  26B4  120A  118A  	fcall	_Lcd_Cmd
  2693  0514                     l77:
  2694  0514  0008               	return
  2695  0515                     __end_of_Lcd_Set_Cursor:
  2696                           
  2697                           	psect	text11
  2698  05E5                     __ptext11:	
  2699 ;; *************** function _Lcd_Write_String *****************
  2700 ;; Defined at:
  2701 ;;		line 97 in file "./lcd.h"
  2702 ;; Parameters:    Size  Location     Type
  2703 ;;  a               1    wreg     PTR unsigned char 
  2704 ;;		 -> STR_2(12), STR_1(15), 
  2705 ;; Auto vars:     Size  Location     Type
  2706 ;;  a               1    2[BANK0 ] PTR unsigned char 
  2707 ;;		 -> STR_2(12), STR_1(15), 
  2708 ;;  i               2    0[BANK0 ] int 
  2709 ;; Return value:  Size  Location     Type
  2710 ;;                  1    wreg      void 
  2711 ;; Registers used:
  2712 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2713 ;; Tracked objects:
  2714 ;;		On entry : 0/0
  2715 ;;		On exit  : 0/0
  2716 ;;		Unchanged: 0/0
  2717 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2718 ;;      Params:         0       0       0       0       0
  2719 ;;      Locals:         0       3       0       0       0
  2720 ;;      Temps:          0       0       0       0       0
  2721 ;;      Totals:         0       3       0       0       0
  2722 ;;Total ram usage:        3 bytes
  2723 ;; Hardware stack levels used: 1
  2724 ;; Hardware stack levels required when called: 5
  2725 ;; This function calls:
  2726 ;;		_Lcd_Write_Char
  2727 ;; This function is called by:
  2728 ;;		_handleMenu
  2729 ;; This function uses a non-reentrant model
  2730 ;;
  2731                           
  2732  05E5                     _Lcd_Write_String:	
  2733                           ;psect for function _Lcd_Write_String
  2734                           
  2735                           
  2736                           ;incstack = 0
  2737 ;; using string table level
  2738                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2739                           ;Lcd_Write_String@a stored from wreg
  2740  05E5  1283               	bcf	3,5	;RP0=0, select bank0
  2741  05E6  1303               	bcf	3,6	;RP1=0, select bank0
  2742  05E7  00A2               	movwf	Lcd_Write_String@a
  2743  05E8                     l1914:
  2744                           
  2745                           ;./lcd.h: 97: void Lcd_Write_String(char *a);./lcd.h: 98: {;./lcd.h: 99:  int i;;./lcd.h
      +                          : 100:  for(i=0;a[i]!='\0';i++)
  2746  05E8  01A0               	clrf	Lcd_Write_String@i
  2747  05E9  01A1               	clrf	Lcd_Write_String@i+1
  2748  05EA  2E00               	goto	l1920
  2749  05EB                     l1916:
  2750                           
  2751                           ;./lcd.h: 101:     Lcd_Write_Char(a[i]);
  2752  05EB  0820               	movf	Lcd_Write_String@i,w
  2753  05EC  0722               	addwf	Lcd_Write_String@a,w
  2754  05ED  0084               	movwf	4
  2755  05EE  120A  118A  2655  120A  118A  	fcall	stringdir
  2756  05F3  120A  118A  254E  120A  118A  	fcall	_Lcd_Write_Char
  2757  05F8                     l1918:
  2758  05F8  3001               	movlw	1
  2759  05F9  1283               	bcf	3,5	;RP0=0, select bank0
  2760  05FA  1303               	bcf	3,6	;RP1=0, select bank0
  2761  05FB  07A0               	addwf	Lcd_Write_String@i,f
  2762  05FC  1803               	skipnc
  2763  05FD  0AA1               	incf	Lcd_Write_String@i+1,f
  2764  05FE  3000               	movlw	0
  2765  05FF  07A1               	addwf	Lcd_Write_String@i+1,f
  2766  0600                     l1920:
  2767  0600  0820               	movf	Lcd_Write_String@i,w
  2768  0601  0722               	addwf	Lcd_Write_String@a,w
  2769  0602  0084               	movwf	4
  2770  0603  120A  118A  2655  120A  118A  	fcall	stringdir
  2771  0608  3A00               	xorlw	0
  2772  0609  1D03               	skipz
  2773  060A  2E0C               	goto	u1831
  2774  060B  2E0D               	goto	u1830
  2775  060C                     u1831:
  2776  060C  2DEB               	goto	l1916
  2777  060D                     u1830:
  2778  060D                     l89:
  2779  060D  0008               	return
  2780  060E                     __end_of_Lcd_Write_String:
  2781                           
  2782                           	psect	text12
  2783  054E                     __ptext12:	
  2784 ;; *************** function _Lcd_Write_Char *****************
  2785 ;; Defined at:
  2786 ;;		line 81 in file "./lcd.h"
  2787 ;; Parameters:    Size  Location     Type
  2788 ;;  a               1    wreg     unsigned char 
  2789 ;; Auto vars:     Size  Location     Type
  2790 ;;  a               1    7[COMMON] unsigned char 
  2791 ;;  y               1    6[COMMON] unsigned char 
  2792 ;;  temp            1    5[COMMON] unsigned char 
  2793 ;; Return value:  Size  Location     Type
  2794 ;;                  1    wreg      void 
  2795 ;; Registers used:
  2796 ;;		wreg, status,2, status,0, pclath, cstack
  2797 ;; Tracked objects:
  2798 ;;		On entry : 0/0
  2799 ;;		On exit  : 0/0
  2800 ;;		Unchanged: 0/0
  2801 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2802 ;;      Params:         0       0       0       0       0
  2803 ;;      Locals:         3       0       0       0       0
  2804 ;;      Temps:          1       0       0       0       0
  2805 ;;      Totals:         4       0       0       0       0
  2806 ;;Total ram usage:        4 bytes
  2807 ;; Hardware stack levels used: 1
  2808 ;; Hardware stack levels required when called: 4
  2809 ;; This function calls:
  2810 ;;		_Lcd_Port
  2811 ;; This function is called by:
  2812 ;;		_Lcd_Write_String
  2813 ;;		_writeValor
  2814 ;; This function uses a non-reentrant model
  2815 ;;
  2816                           
  2817  054E                     _Lcd_Write_Char:	
  2818                           ;psect for function _Lcd_Write_Char
  2819                           
  2820                           
  2821                           ;incstack = 0
  2822                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  2823                           ;Lcd_Write_Char@a stored from wreg
  2824  054E  00F7               	movwf	Lcd_Write_Char@a
  2825  054F                     l1850:
  2826                           
  2827                           ;./lcd.h: 81: void Lcd_Write_Char(char a);./lcd.h: 82: {;./lcd.h: 83:    char temp,y;;./
      +                          lcd.h: 84:    temp = a&0x0F;
  2828  054F  0877               	movf	Lcd_Write_Char@a,w
  2829  0550  390F               	andlw	15
  2830  0551  00F4               	movwf	??_Lcd_Write_Char
  2831  0552  0874               	movf	??_Lcd_Write_Char,w
  2832  0553  00F5               	movwf	Lcd_Write_Char@temp
  2833                           
  2834                           ;./lcd.h: 85:    y = a&0xF0;
  2835  0554  0877               	movf	Lcd_Write_Char@a,w
  2836  0555  39F0               	andlw	240
  2837  0556  00F4               	movwf	??_Lcd_Write_Char
  2838  0557  0874               	movf	??_Lcd_Write_Char,w
  2839  0558  00F6               	movwf	Lcd_Write_Char@y
  2840  0559                     l1852:
  2841                           
  2842                           ;./lcd.h: 86:    RD2 = 1;
  2843  0559  1283               	bcf	3,5	;RP0=0, select bank0
  2844  055A  1303               	bcf	3,6	;RP1=0, select bank0
  2845  055B  1508               	bsf	8,2	;volatile
  2846  055C                     l1854:
  2847                           
  2848                           ;./lcd.h: 87:    Lcd_Port(y>>4);
  2849  055C  0876               	movf	Lcd_Write_Char@y,w
  2850  055D  00F4               	movwf	??_Lcd_Write_Char
  2851  055E  3004               	movlw	4
  2852  055F                     u1735:
  2853  055F  1003               	clrc
  2854  0560  0CF4               	rrf	??_Lcd_Write_Char,f
  2855  0561  3EFF               	addlw	-1
  2856  0562  1D03               	skipz
  2857  0563  2D5F               	goto	u1735
  2858  0564  0874               	movf	??_Lcd_Write_Char,w
  2859  0565  120A  118A  2633  120A  118A  	fcall	_Lcd_Port
  2860  056A                     l1856:
  2861                           
  2862                           ;./lcd.h: 88:    RD3 = 1;
  2863  056A  1283               	bcf	3,5	;RP0=0, select bank0
  2864  056B  1303               	bcf	3,6	;RP1=0, select bank0
  2865  056C  1588               	bsf	8,3	;volatile
  2866  056D                     l1858:
  2867                           
  2868                           ;./lcd.h: 89:    _delay((unsigned long)((40)*(4000000/4000000.0)));
  2869  056D  300D               	movlw	13
  2870  056E  00F4               	movwf	??_Lcd_Write_Char
  2871  056F                     u2097:
  2872  056F  0BF4               	decfsz	??_Lcd_Write_Char,f
  2873  0570  2D6F               	goto	u2097
  2874  0571                     l1860:
  2875                           
  2876                           ;./lcd.h: 90:    RD3 = 0;
  2877  0571  1283               	bcf	3,5	;RP0=0, select bank0
  2878  0572  1303               	bcf	3,6	;RP1=0, select bank0
  2879  0573  1188               	bcf	8,3	;volatile
  2880  0574                     l1862:
  2881                           
  2882                           ;./lcd.h: 91:    Lcd_Port(temp);
  2883  0574  0875               	movf	Lcd_Write_Char@temp,w
  2884  0575  120A  118A  2633  120A  118A  	fcall	_Lcd_Port
  2885  057A                     l1864:
  2886                           
  2887                           ;./lcd.h: 92:    RD3 = 1;
  2888  057A  1283               	bcf	3,5	;RP0=0, select bank0
  2889  057B  1303               	bcf	3,6	;RP1=0, select bank0
  2890  057C  1588               	bsf	8,3	;volatile
  2891  057D                     l1866:
  2892                           
  2893                           ;./lcd.h: 93:    _delay((unsigned long)((40)*(4000000/4000000.0)));
  2894  057D  300D               	movlw	13
  2895  057E  00F4               	movwf	??_Lcd_Write_Char
  2896  057F                     u2107:
  2897  057F  0BF4               	decfsz	??_Lcd_Write_Char,f
  2898  0580  2D7F               	goto	u2107
  2899  0581                     l1868:
  2900                           
  2901                           ;./lcd.h: 94:    RD3 = 0;
  2902  0581  1283               	bcf	3,5	;RP0=0, select bank0
  2903  0582  1303               	bcf	3,6	;RP1=0, select bank0
  2904  0583  1188               	bcf	8,3	;volatile
  2905  0584                     l83:
  2906  0584  0008               	return
  2907  0585                     __end_of_Lcd_Write_Char:
  2908                           
  2909                           	psect	text13
  2910  0749                     __ptext13:	
  2911 ;; *************** function _Lcd_Clear *****************
  2912 ;; Defined at:
  2913 ;;		line 35 in file "./lcd.h"
  2914 ;; Parameters:    Size  Location     Type
  2915 ;;		None
  2916 ;; Auto vars:     Size  Location     Type
  2917 ;;		None
  2918 ;; Return value:  Size  Location     Type
  2919 ;;                  1    wreg      void 
  2920 ;; Registers used:
  2921 ;;		wreg, status,2, status,0, pclath, cstack
  2922 ;; Tracked objects:
  2923 ;;		On entry : 0/0
  2924 ;;		On exit  : 0/0
  2925 ;;		Unchanged: 0/0
  2926 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2927 ;;      Params:         0       0       0       0       0
  2928 ;;      Locals:         0       0       0       0       0
  2929 ;;      Temps:          0       0       0       0       0
  2930 ;;      Totals:         0       0       0       0       0
  2931 ;;Total ram usage:        0 bytes
  2932 ;; Hardware stack levels used: 1
  2933 ;; Hardware stack levels required when called: 5
  2934 ;; This function calls:
  2935 ;;		_Lcd_Cmd
  2936 ;; This function is called by:
  2937 ;;		_handleMenu
  2938 ;; This function uses a non-reentrant model
  2939 ;;
  2940                           
  2941  0749                     _Lcd_Clear:	
  2942                           ;psect for function _Lcd_Clear
  2943                           
  2944  0749                     l1912:	
  2945                           ;incstack = 0
  2946                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  2947                           
  2948                           
  2949                           ;./lcd.h: 37:  Lcd_Cmd(0);
  2950  0749  3000               	movlw	0
  2951  074A  120A  118A  26B4  120A  118A  	fcall	_Lcd_Cmd
  2952                           
  2953                           ;./lcd.h: 38:  Lcd_Cmd(1);
  2954  074F  3001               	movlw	1
  2955  0750  120A  118A  26B4  120A  118A  	fcall	_Lcd_Cmd
  2956  0755                     l71:
  2957  0755  0008               	return
  2958  0756                     __end_of_Lcd_Clear:
  2959                           
  2960                           	psect	text14
  2961  0772                     __ptext14:	
  2962 ;; *************** function _setupWatchdogTimer *****************
  2963 ;; Defined at:
  2964 ;;		line 309 in file "main.c"
  2965 ;; Parameters:    Size  Location     Type
  2966 ;;		None
  2967 ;; Auto vars:     Size  Location     Type
  2968 ;;		None
  2969 ;; Return value:  Size  Location     Type
  2970 ;;                  1    wreg      void 
  2971 ;; Registers used:
  2972 ;;		None
  2973 ;; Tracked objects:
  2974 ;;		On entry : 0/0
  2975 ;;		On exit  : 0/0
  2976 ;;		Unchanged: 0/0
  2977 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2978 ;;      Params:         0       0       0       0       0
  2979 ;;      Locals:         0       0       0       0       0
  2980 ;;      Temps:          0       0       0       0       0
  2981 ;;      Totals:         0       0       0       0       0
  2982 ;;Total ram usage:        0 bytes
  2983 ;; Hardware stack levels used: 1
  2984 ;; Hardware stack levels required when called: 3
  2985 ;; This function calls:
  2986 ;;		Nothing
  2987 ;; This function is called by:
  2988 ;;		_main
  2989 ;; This function uses a non-reentrant model
  2990 ;;
  2991                           
  2992  0772                     _setupWatchdogTimer:	
  2993                           ;psect for function _setupWatchdogTimer
  2994                           
  2995  0772                     l1236:	
  2996                           ;incstack = 0
  2997                           ; Regs used in _setupWatchdogTimer: []
  2998                           
  2999                           
  3000                           ;main.c: 311:     OPTION_REGbits.PSA = 1;
  3001  0772  1683               	bsf	3,5	;RP0=1, select bank1
  3002  0773  1303               	bcf	3,6	;RP1=0, select bank1
  3003  0774  1581               	bsf	1,3	;volatile
  3004                           
  3005                           ;main.c: 312:     OPTION_REGbits.PS0 = 0;
  3006  0775  1001               	bcf	1,0	;volatile
  3007                           
  3008                           ;main.c: 313:     OPTION_REGbits.PS1 = 1;
  3009  0776  1481               	bsf	1,1	;volatile
  3010                           
  3011                           ;main.c: 314:     OPTION_REGbits.PS2 = 1;
  3012  0777  1501               	bsf	1,2	;volatile
  3013  0778  0064               	clrwdt	;# 
  3014  0779                     l181:	
  3015                           ;main.c: 316:     return;
  3016                           
  3017  0779  0008               	return
  3018  077A                     __end_of_setupWatchdogTimer:
  3019                           
  3020                           	psect	text15
  3021  06CE                     __ptext15:	
  3022 ;; *************** function _setupTimer *****************
  3023 ;; Defined at:
  3024 ;;		line 99 in file "main.c"
  3025 ;; Parameters:    Size  Location     Type
  3026 ;;		None
  3027 ;; Auto vars:     Size  Location     Type
  3028 ;;		None
  3029 ;; Return value:  Size  Location     Type
  3030 ;;                  1    wreg      void 
  3031 ;; Registers used:
  3032 ;;		wreg, status,2, status,0, pclath, cstack
  3033 ;; Tracked objects:
  3034 ;;		On entry : 0/0
  3035 ;;		On exit  : 0/0
  3036 ;;		Unchanged: 0/0
  3037 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3038 ;;      Params:         0       0       0       0       0
  3039 ;;      Locals:         0       0       0       0       0
  3040 ;;      Temps:          0       0       0       0       0
  3041 ;;      Totals:         0       0       0       0       0
  3042 ;;Total ram usage:        0 bytes
  3043 ;; Hardware stack levels used: 1
  3044 ;; Hardware stack levels required when called: 6
  3045 ;; This function calls:
  3046 ;;		_setupNewVolumeFlow
  3047 ;; This function is called by:
  3048 ;;		_main
  3049 ;; This function uses a non-reentrant model
  3050 ;;
  3051                           
  3052  06CE                     _setupTimer:	
  3053                           ;psect for function _setupTimer
  3054                           
  3055  06CE                     l2044:	
  3056                           ;incstack = 0
  3057                           ; Regs used in _setupTimer: [wreg+status,2+status,0+pclath+cstack]
  3058                           
  3059                           
  3060                           ;main.c: 102:     INTCONbits.GIE = 1;
  3061  06CE  178B               	bsf	11,7	;volatile
  3062                           
  3063                           ;main.c: 103:     INTCONbits.PEIE = 1;
  3064  06CF  170B               	bsf	11,6	;volatile
  3065                           
  3066                           ;main.c: 104:     PIE1bits.TMR1IE = 1;
  3067  06D0  1683               	bsf	3,5	;RP0=1, select bank1
  3068  06D1  1303               	bcf	3,6	;RP1=0, select bank1
  3069  06D2  140C               	bsf	12,0	;volatile
  3070                           
  3071                           ;main.c: 107:     T1CONbits.TMR1CS = 0;
  3072  06D3  1283               	bcf	3,5	;RP0=0, select bank0
  3073  06D4  1303               	bcf	3,6	;RP1=0, select bank0
  3074  06D5  1090               	bcf	16,1	;volatile
  3075                           
  3076                           ;main.c: 110:     T1CONbits.T1CKPS0 = 1;
  3077  06D6  1610               	bsf	16,4	;volatile
  3078                           
  3079                           ;main.c: 111:     T1CONbits.T1CKPS1 = 1;
  3080  06D7  1690               	bsf	16,5	;volatile
  3081  06D8                     l2046:
  3082                           
  3083                           ;main.c: 119:     TMR1H = 0x0B;
  3084  06D8  300B               	movlw	11
  3085  06D9  008F               	movwf	15	;volatile
  3086                           
  3087                           ;main.c: 120:     TMR1L = 0xDC;
  3088  06DA  30DC               	movlw	220
  3089  06DB  008E               	movwf	14	;volatile
  3090  06DC                     l2048:
  3091                           
  3092                           ;main.c: 122:     T1CONbits.TMR1ON = 0;
  3093  06DC  1010               	bcf	16,0	;volatile
  3094  06DD                     l2050:
  3095                           
  3096                           ;main.c: 126:     setupNewVolumeFlow(water_volume);
  3097  06DD  0845               	movf	_water_volume+1,w
  3098  06DE  00AE               	movwf	setupNewVolumeFlow@new_ml+1
  3099  06DF  0844               	movf	_water_volume,w
  3100  06E0  00AD               	movwf	setupNewVolumeFlow@new_ml
  3101  06E1  120A  118A  2695  120A  118A  	fcall	_setupNewVolumeFlow
  3102  06E6                     l118:
  3103  06E6  0008               	return
  3104  06E7                     __end_of_setupTimer:
  3105                           
  3106                           	psect	text16
  3107  0695                     __ptext16:	
  3108 ;; *************** function _setupNewVolumeFlow *****************
  3109 ;; Defined at:
  3110 ;;		line 90 in file "main.c"
  3111 ;; Parameters:    Size  Location     Type
  3112 ;;  new_ml          2   13[BANK0 ] int 
  3113 ;; Auto vars:     Size  Location     Type
  3114 ;;  new_ms          2   15[BANK0 ] int 
  3115 ;; Return value:  Size  Location     Type
  3116 ;;                  1    wreg      void 
  3117 ;; Registers used:
  3118 ;;		wreg, status,2, status,0, pclath, cstack
  3119 ;; Tracked objects:
  3120 ;;		On entry : 0/0
  3121 ;;		On exit  : 0/0
  3122 ;;		Unchanged: 0/0
  3123 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3124 ;;      Params:         0       2       0       0       0
  3125 ;;      Locals:         0       2       0       0       0
  3126 ;;      Temps:          0       0       0       0       0
  3127 ;;      Totals:         0       4       0       0       0
  3128 ;;Total ram usage:        4 bytes
  3129 ;; Hardware stack levels used: 1
  3130 ;; Hardware stack levels required when called: 5
  3131 ;; This function calls:
  3132 ;;		___wmul
  3133 ;;		_changeTimerMaxConter
  3134 ;; This function is called by:
  3135 ;;		_setupTimer
  3136 ;;		_handleMenu
  3137 ;; This function uses a non-reentrant model
  3138 ;;
  3139                           
  3140  0695                     _setupNewVolumeFlow:	
  3141                           ;psect for function _setupNewVolumeFlow
  3142                           
  3143  0695                     l1922:	
  3144                           ;incstack = 0
  3145                           ; Regs used in _setupNewVolumeFlow: [wreg+status,2+status,0+pclath+cstack]
  3146                           
  3147                           
  3148                           ;main.c: 90: void setupNewVolumeFlow(int new_ml);main.c: 91: {;main.c: 93:     int new_m
      +                          s = new_ml*MLxMS;
  3149  0695  1283               	bcf	3,5	;RP0=0, select bank0
  3150  0696  1303               	bcf	3,6	;RP1=0, select bank0
  3151  0697  082E               	movf	setupNewVolumeFlow@new_ml+1,w
  3152  0698  00F4               	movwf	___wmul@multiplier+1
  3153  0699  082D               	movf	setupNewVolumeFlow@new_ml,w
  3154  069A  00F3               	movwf	___wmul@multiplier
  3155  069B  3019               	movlw	25
  3156  069C  00F5               	movwf	___wmul@multiplicand
  3157  069D  3000               	movlw	0
  3158  069E  00F6               	movwf	___wmul@multiplicand+1
  3159  069F  120A  118A  260E  120A  118A  	fcall	___wmul
  3160  06A4  0874               	movf	?___wmul+1,w
  3161  06A5  1283               	bcf	3,5	;RP0=0, select bank0
  3162  06A6  1303               	bcf	3,6	;RP1=0, select bank0
  3163  06A7  00B0               	movwf	setupNewVolumeFlow@new_ms+1
  3164  06A8  0873               	movf	?___wmul,w
  3165  06A9  00AF               	movwf	setupNewVolumeFlow@new_ms
  3166                           
  3167                           ;main.c: 95:     changeTimerMaxConter(new_ms);
  3168  06AA  0830               	movf	setupNewVolumeFlow@new_ms+1,w
  3169  06AB  00AC               	movwf	changeTimerMaxConter@mili_s+1
  3170  06AC  082F               	movf	setupNewVolumeFlow@new_ms,w
  3171  06AD  00AB               	movwf	changeTimerMaxConter@mili_s
  3172  06AE  120A  118A  26FE  120A  118A  	fcall	_changeTimerMaxConter
  3173  06B3                     l115:
  3174  06B3  0008               	return
  3175  06B4                     __end_of_setupNewVolumeFlow:
  3176                           
  3177                           	psect	text17
  3178  06FE                     __ptext17:	
  3179 ;; *************** function _changeTimerMaxConter *****************
  3180 ;; Defined at:
  3181 ;;		line 81 in file "main.c"
  3182 ;; Parameters:    Size  Location     Type
  3183 ;;  mili_s          2   11[BANK0 ] int 
  3184 ;; Auto vars:     Size  Location     Type
  3185 ;;		None
  3186 ;; Return value:  Size  Location     Type
  3187 ;;                  1    wreg      void 
  3188 ;; Registers used:
  3189 ;;		wreg, status,2, status,0, pclath, cstack
  3190 ;; Tracked objects:
  3191 ;;		On entry : 0/0
  3192 ;;		On exit  : 0/0
  3193 ;;		Unchanged: 0/0
  3194 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3195 ;;      Params:         0       2       0       0       0
  3196 ;;      Locals:         0       0       0       0       0
  3197 ;;      Temps:          0       0       0       0       0
  3198 ;;      Totals:         0       2       0       0       0
  3199 ;;Total ram usage:        2 bytes
  3200 ;; Hardware stack levels used: 1
  3201 ;; Hardware stack levels required when called: 4
  3202 ;; This function calls:
  3203 ;;		___awdiv
  3204 ;; This function is called by:
  3205 ;;		_setupNewVolumeFlow
  3206 ;; This function uses a non-reentrant model
  3207 ;;
  3208                           
  3209  06FE                     _changeTimerMaxConter:	
  3210                           ;psect for function _changeTimerMaxConter
  3211                           
  3212  06FE                     l1870:	
  3213                           ;incstack = 0
  3214                           ; Regs used in _changeTimerMaxConter: [wreg+status,2+status,0+pclath+cstack]
  3215                           
  3216                           
  3217                           ;main.c: 83:     timer_counter_max = (mili_s/500);
  3218  06FE  30F4               	movlw	244
  3219  06FF  1283               	bcf	3,5	;RP0=0, select bank0
  3220  0700  1303               	bcf	3,6	;RP1=0, select bank0
  3221  0701  00A2               	movwf	___awdiv@divisor
  3222  0702  3001               	movlw	1
  3223  0703  00A3               	movwf	___awdiv@divisor+1
  3224  0704  082C               	movf	changeTimerMaxConter@mili_s+1,w
  3225  0705  00A5               	movwf	___awdiv@dividend+1
  3226  0706  082B               	movf	changeTimerMaxConter@mili_s,w
  3227  0707  00A4               	movwf	___awdiv@dividend
  3228  0708  120A  118A  2342  120A  118A  	fcall	___awdiv
  3229  070D  1283               	bcf	3,5	;RP0=0, select bank0
  3230  070E  1303               	bcf	3,6	;RP1=0, select bank0
  3231  070F  0823               	movf	?___awdiv+1,w
  3232  0710  00C9               	movwf	_timer_counter_max+1
  3233  0711  0822               	movf	?___awdiv,w
  3234  0712  00C8               	movwf	_timer_counter_max
  3235  0713                     l112:
  3236  0713  0008               	return
  3237  0714                     __end_of_changeTimerMaxConter:
  3238                           
  3239                           	psect	text18
  3240  0342                     __ptext18:	
  3241 ;; *************** function ___awdiv *****************
  3242 ;; Defined at:
  3243 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\awdiv.c"
  3244 ;; Parameters:    Size  Location     Type
  3245 ;;  divisor         2    2[BANK0 ] int 
  3246 ;;  dividend        2    4[BANK0 ] int 
  3247 ;; Auto vars:     Size  Location     Type
  3248 ;;  quotient        2    9[BANK0 ] int 
  3249 ;;  sign            1    8[BANK0 ] unsigned char 
  3250 ;;  counter         1    7[BANK0 ] unsigned char 
  3251 ;; Return value:  Size  Location     Type
  3252 ;;                  2    2[BANK0 ] int 
  3253 ;; Registers used:
  3254 ;;		wreg, status,2, status,0
  3255 ;; Tracked objects:
  3256 ;;		On entry : 0/0
  3257 ;;		On exit  : 0/0
  3258 ;;		Unchanged: 0/0
  3259 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3260 ;;      Params:         0       4       0       0       0
  3261 ;;      Locals:         0       4       0       0       0
  3262 ;;      Temps:          0       1       0       0       0
  3263 ;;      Totals:         0       9       0       0       0
  3264 ;;Total ram usage:        9 bytes
  3265 ;; Hardware stack levels used: 1
  3266 ;; Hardware stack levels required when called: 3
  3267 ;; This function calls:
  3268 ;;		Nothing
  3269 ;; This function is called by:
  3270 ;;		_changeTimerMaxConter
  3271 ;;		_writeValor
  3272 ;;		_getADConverterValue
  3273 ;; This function uses a non-reentrant model
  3274 ;;
  3275                           
  3276  0342                     ___awdiv:	
  3277                           ;psect for function ___awdiv
  3278                           
  3279  0342                     l1786:	
  3280                           ;incstack = 0
  3281                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3282                           
  3283  0342  1283               	bcf	3,5	;RP0=0, select bank0
  3284  0343  1303               	bcf	3,6	;RP1=0, select bank0
  3285  0344  01A8               	clrf	___awdiv@sign
  3286  0345                     l1788:
  3287  0345  1FA3               	btfss	___awdiv@divisor+1,7
  3288  0346  2B48               	goto	u1591
  3289  0347  2B49               	goto	u1590
  3290  0348                     u1591:
  3291  0348  2B50               	goto	l1794
  3292  0349                     u1590:
  3293  0349                     l1790:
  3294  0349  09A2               	comf	___awdiv@divisor,f
  3295  034A  09A3               	comf	___awdiv@divisor+1,f
  3296  034B  0AA2               	incf	___awdiv@divisor,f
  3297  034C  1903               	skipnz
  3298  034D  0AA3               	incf	___awdiv@divisor+1,f
  3299  034E                     l1792:
  3300  034E  01A8               	clrf	___awdiv@sign
  3301  034F  0AA8               	incf	___awdiv@sign,f
  3302  0350                     l1794:
  3303  0350  1FA5               	btfss	___awdiv@dividend+1,7
  3304  0351  2B53               	goto	u1601
  3305  0352  2B54               	goto	u1600
  3306  0353                     u1601:
  3307  0353  2B5D               	goto	l1800
  3308  0354                     u1600:
  3309  0354                     l1796:
  3310  0354  09A4               	comf	___awdiv@dividend,f
  3311  0355  09A5               	comf	___awdiv@dividend+1,f
  3312  0356  0AA4               	incf	___awdiv@dividend,f
  3313  0357  1903               	skipnz
  3314  0358  0AA5               	incf	___awdiv@dividend+1,f
  3315  0359                     l1798:
  3316  0359  3001               	movlw	1
  3317  035A  00A6               	movwf	??___awdiv
  3318  035B  0826               	movf	??___awdiv,w
  3319  035C  06A8               	xorwf	___awdiv@sign,f
  3320  035D                     l1800:
  3321  035D  01A9               	clrf	___awdiv@quotient
  3322  035E  01AA               	clrf	___awdiv@quotient+1
  3323  035F                     l1802:
  3324  035F  0822               	movf	___awdiv@divisor,w
  3325  0360  0423               	iorwf	___awdiv@divisor+1,w
  3326  0361  1903               	btfsc	3,2
  3327  0362  2B64               	goto	u1611
  3328  0363  2B65               	goto	u1610
  3329  0364                     u1611:
  3330  0364  2B9C               	goto	l1822
  3331  0365                     u1610:
  3332  0365                     l1804:
  3333  0365  01A7               	clrf	___awdiv@counter
  3334  0366  0AA7               	incf	___awdiv@counter,f
  3335  0367  2B73               	goto	l1810
  3336  0368                     l1806:
  3337  0368  3001               	movlw	1
  3338  0369                     u1625:
  3339  0369  1003               	clrc
  3340  036A  0DA2               	rlf	___awdiv@divisor,f
  3341  036B  0DA3               	rlf	___awdiv@divisor+1,f
  3342  036C  3EFF               	addlw	-1
  3343  036D  1D03               	skipz
  3344  036E  2B69               	goto	u1625
  3345  036F                     l1808:
  3346  036F  3001               	movlw	1
  3347  0370  00A6               	movwf	??___awdiv
  3348  0371  0826               	movf	??___awdiv,w
  3349  0372  07A7               	addwf	___awdiv@counter,f
  3350  0373                     l1810:
  3351  0373  1FA3               	btfss	___awdiv@divisor+1,7
  3352  0374  2B76               	goto	u1631
  3353  0375  2B77               	goto	u1630
  3354  0376                     u1631:
  3355  0376  2B68               	goto	l1806
  3356  0377                     u1630:
  3357  0377                     l1812:
  3358  0377  3001               	movlw	1
  3359  0378                     u1645:
  3360  0378  1003               	clrc
  3361  0379  0DA9               	rlf	___awdiv@quotient,f
  3362  037A  0DAA               	rlf	___awdiv@quotient+1,f
  3363  037B  3EFF               	addlw	-1
  3364  037C  1D03               	skipz
  3365  037D  2B78               	goto	u1645
  3366  037E  0823               	movf	___awdiv@divisor+1,w
  3367  037F  0225               	subwf	___awdiv@dividend+1,w
  3368  0380  1D03               	skipz
  3369  0381  2B84               	goto	u1655
  3370  0382  0822               	movf	___awdiv@divisor,w
  3371  0383  0224               	subwf	___awdiv@dividend,w
  3372  0384                     u1655:
  3373  0384  1C03               	skipc
  3374  0385  2B87               	goto	u1651
  3375  0386  2B88               	goto	u1650
  3376  0387                     u1651:
  3377  0387  2B8F               	goto	l1818
  3378  0388                     u1650:
  3379  0388                     l1814:
  3380  0388  0822               	movf	___awdiv@divisor,w
  3381  0389  02A4               	subwf	___awdiv@dividend,f
  3382  038A  0823               	movf	___awdiv@divisor+1,w
  3383  038B  1C03               	skipc
  3384  038C  03A5               	decf	___awdiv@dividend+1,f
  3385  038D  02A5               	subwf	___awdiv@dividend+1,f
  3386  038E                     l1816:
  3387  038E  1429               	bsf	___awdiv@quotient,0
  3388  038F                     l1818:
  3389  038F  3001               	movlw	1
  3390  0390                     u1665:
  3391  0390  1003               	clrc
  3392  0391  0CA3               	rrf	___awdiv@divisor+1,f
  3393  0392  0CA2               	rrf	___awdiv@divisor,f
  3394  0393  3EFF               	addlw	-1
  3395  0394  1D03               	skipz
  3396  0395  2B90               	goto	u1665
  3397  0396                     l1820:
  3398  0396  3001               	movlw	1
  3399  0397  02A7               	subwf	___awdiv@counter,f
  3400  0398  1D03               	btfss	3,2
  3401  0399  2B9B               	goto	u1671
  3402  039A  2B9C               	goto	u1670
  3403  039B                     u1671:
  3404  039B  2B77               	goto	l1812
  3405  039C                     u1670:
  3406  039C                     l1822:
  3407  039C  0828               	movf	___awdiv@sign,w
  3408  039D  1903               	btfsc	3,2
  3409  039E  2BA0               	goto	u1681
  3410  039F  2BA1               	goto	u1680
  3411  03A0                     u1681:
  3412  03A0  2BA6               	goto	l1826
  3413  03A1                     u1680:
  3414  03A1                     l1824:
  3415  03A1  09A9               	comf	___awdiv@quotient,f
  3416  03A2  09AA               	comf	___awdiv@quotient+1,f
  3417  03A3  0AA9               	incf	___awdiv@quotient,f
  3418  03A4  1903               	skipnz
  3419  03A5  0AAA               	incf	___awdiv@quotient+1,f
  3420  03A6                     l1826:
  3421  03A6  082A               	movf	___awdiv@quotient+1,w
  3422  03A7  00A3               	movwf	?___awdiv+1
  3423  03A8  0829               	movf	___awdiv@quotient,w
  3424  03A9  00A2               	movwf	?___awdiv
  3425  03AA                     l431:
  3426  03AA  0008               	return
  3427  03AB                     __end_of___awdiv:
  3428                           
  3429                           	psect	text19
  3430  060E                     __ptext19:	
  3431 ;; *************** function ___wmul *****************
  3432 ;; Defined at:
  3433 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\Umul16.c"
  3434 ;; Parameters:    Size  Location     Type
  3435 ;;  multiplier      2    3[COMMON] unsigned int 
  3436 ;;  multiplicand    2    5[COMMON] unsigned int 
  3437 ;; Auto vars:     Size  Location     Type
  3438 ;;  product         2    7[COMMON] unsigned int 
  3439 ;; Return value:  Size  Location     Type
  3440 ;;                  2    3[COMMON] unsigned int 
  3441 ;; Registers used:
  3442 ;;		wreg, status,2, status,0
  3443 ;; Tracked objects:
  3444 ;;		On entry : 0/0
  3445 ;;		On exit  : 0/0
  3446 ;;		Unchanged: 0/0
  3447 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3448 ;;      Params:         4       0       0       0       0
  3449 ;;      Locals:         2       0       0       0       0
  3450 ;;      Temps:          0       0       0       0       0
  3451 ;;      Totals:         6       0       0       0       0
  3452 ;;Total ram usage:        6 bytes
  3453 ;; Hardware stack levels used: 1
  3454 ;; Hardware stack levels required when called: 3
  3455 ;; This function calls:
  3456 ;;		Nothing
  3457 ;; This function is called by:
  3458 ;;		_setupNewVolumeFlow
  3459 ;;		_getADConverterValue
  3460 ;; This function uses a non-reentrant model
  3461 ;;
  3462                           
  3463  060E                     ___wmul:	
  3464                           ;psect for function ___wmul
  3465                           
  3466  060E                     l1392:	
  3467                           ;incstack = 0
  3468                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3469                           
  3470  060E  01F7               	clrf	___wmul@product
  3471  060F  01F8               	clrf	___wmul@product+1
  3472  0610                     l1394:
  3473  0610  1C73               	btfss	___wmul@multiplier,0
  3474  0611  2E13               	goto	u971
  3475  0612  2E14               	goto	u970
  3476  0613                     u971:
  3477  0613  2E1A               	goto	l278
  3478  0614                     u970:
  3479  0614                     l1396:
  3480  0614  0875               	movf	___wmul@multiplicand,w
  3481  0615  07F7               	addwf	___wmul@product,f
  3482  0616  1803               	skipnc
  3483  0617  0AF8               	incf	___wmul@product+1,f
  3484  0618  0876               	movf	___wmul@multiplicand+1,w
  3485  0619  07F8               	addwf	___wmul@product+1,f
  3486  061A                     l278:
  3487  061A  3001               	movlw	1
  3488  061B                     u985:
  3489  061B  1003               	clrc
  3490  061C  0DF5               	rlf	___wmul@multiplicand,f
  3491  061D  0DF6               	rlf	___wmul@multiplicand+1,f
  3492  061E  3EFF               	addlw	-1
  3493  061F  1D03               	skipz
  3494  0620  2E1B               	goto	u985
  3495  0621                     l1398:
  3496  0621  3001               	movlw	1
  3497  0622                     u995:
  3498  0622  1003               	clrc
  3499  0623  0CF4               	rrf	___wmul@multiplier+1,f
  3500  0624  0CF3               	rrf	___wmul@multiplier,f
  3501  0625  3EFF               	addlw	-1
  3502  0626  1D03               	skipz
  3503  0627  2E22               	goto	u995
  3504  0628                     l1400:
  3505  0628  0873               	movf	___wmul@multiplier,w
  3506  0629  0474               	iorwf	___wmul@multiplier+1,w
  3507  062A  1D03               	btfss	3,2
  3508  062B  2E2D               	goto	u1001
  3509  062C  2E2E               	goto	u1000
  3510  062D                     u1001:
  3511  062D  2E10               	goto	l1394
  3512  062E                     u1000:
  3513  062E                     l1402:
  3514  062E  0878               	movf	___wmul@product+1,w
  3515  062F  00F4               	movwf	?___wmul+1
  3516  0630  0877               	movf	___wmul@product,w
  3517  0631  00F3               	movwf	?___wmul
  3518  0632                     l280:
  3519  0632  0008               	return
  3520  0633                     __end_of___wmul:
  3521                           
  3522                           	psect	text20
  3523  077A                     __ptext20:	
  3524 ;; *************** function _setupExternalInterruption *****************
  3525 ;; Defined at:
  3526 ;;		line 193 in file "main.c"
  3527 ;; Parameters:    Size  Location     Type
  3528 ;;		None
  3529 ;; Auto vars:     Size  Location     Type
  3530 ;;		None
  3531 ;; Return value:  Size  Location     Type
  3532 ;;                  1    wreg      void 
  3533 ;; Registers used:
  3534 ;;		None
  3535 ;; Tracked objects:
  3536 ;;		On entry : 0/0
  3537 ;;		On exit  : 0/0
  3538 ;;		Unchanged: 0/0
  3539 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3540 ;;      Params:         0       0       0       0       0
  3541 ;;      Locals:         0       0       0       0       0
  3542 ;;      Temps:          0       0       0       0       0
  3543 ;;      Totals:         0       0       0       0       0
  3544 ;;Total ram usage:        0 bytes
  3545 ;; Hardware stack levels used: 1
  3546 ;; Hardware stack levels required when called: 3
  3547 ;; This function calls:
  3548 ;;		Nothing
  3549 ;; This function is called by:
  3550 ;;		_main
  3551 ;; This function uses a non-reentrant model
  3552 ;;
  3553                           
  3554  077A                     _setupExternalInterruption:	
  3555                           ;psect for function _setupExternalInterruption
  3556                           
  3557  077A                     l1218:	
  3558                           ;incstack = 0
  3559                           ; Regs used in _setupExternalInterruption: []
  3560                           
  3561                           
  3562                           ;main.c: 195:     OPTION_REGbits.INTEDG = 1;
  3563  077A  1683               	bsf	3,5	;RP0=1, select bank1
  3564  077B  1303               	bcf	3,6	;RP1=0, select bank1
  3565  077C  1701               	bsf	1,6	;volatile
  3566                           
  3567                           ;main.c: 196:  INTCONbits.GIE = 1;
  3568  077D  178B               	bsf	11,7	;volatile
  3569                           
  3570                           ;main.c: 197:  INTCONbits.INTE = 1;
  3571  077E  160B               	bsf	11,4	;volatile
  3572  077F                     l141:	
  3573                           ;main.c: 198:     return;
  3574                           
  3575  077F  0008               	return
  3576  0780                     __end_of_setupExternalInterruption:
  3577                           
  3578                           	psect	text21
  3579  06E7                     __ptext21:	
  3580 ;; *************** function _setupADC *****************
  3581 ;; Defined at:
  3582 ;;		line 320 in file "main.c"
  3583 ;; Parameters:    Size  Location     Type
  3584 ;;		None
  3585 ;; Auto vars:     Size  Location     Type
  3586 ;;		None
  3587 ;; Return value:  Size  Location     Type
  3588 ;;                  1    wreg      void 
  3589 ;; Registers used:
  3590 ;;		status,2
  3591 ;; Tracked objects:
  3592 ;;		On entry : 0/0
  3593 ;;		On exit  : 0/0
  3594 ;;		Unchanged: 0/0
  3595 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3596 ;;      Params:         0       0       0       0       0
  3597 ;;      Locals:         0       0       0       0       0
  3598 ;;      Temps:          0       0       0       0       0
  3599 ;;      Totals:         0       0       0       0       0
  3600 ;;Total ram usage:        0 bytes
  3601 ;; Hardware stack levels used: 1
  3602 ;; Hardware stack levels required when called: 3
  3603 ;; This function calls:
  3604 ;;		Nothing
  3605 ;; This function is called by:
  3606 ;;		_main
  3607 ;; This function uses a non-reentrant model
  3608 ;;
  3609                           
  3610  06E7                     _setupADC:	
  3611                           ;psect for function _setupADC
  3612                           
  3613  06E7                     l1238:	
  3614                           ;incstack = 0
  3615                           ; Regs used in _setupADC: [status,2]
  3616                           
  3617                           
  3618                           ;main.c: 325:     ADCON1bits.PCFG0 = 1;
  3619  06E7  1683               	bsf	3,5	;RP0=1, select bank1
  3620  06E8  1303               	bcf	3,6	;RP1=0, select bank1
  3621  06E9  141F               	bsf	31,0	;volatile
  3622                           
  3623                           ;main.c: 326:     ADCON1bits.PCFG1 = 1;
  3624  06EA  149F               	bsf	31,1	;volatile
  3625                           
  3626                           ;main.c: 327:     ADCON1bits.PCFG2 = 1;
  3627  06EB  151F               	bsf	31,2	;volatile
  3628                           
  3629                           ;main.c: 328:     ADCON1bits.PCFG3 = 1;
  3630  06EC  159F               	bsf	31,3	;volatile
  3631                           
  3632                           ;main.c: 331:     ADCON1bits.ADCS2 = 1;
  3633  06ED  171F               	bsf	31,6	;volatile
  3634                           
  3635                           ;main.c: 332:     ADCON0bits.ADCS1 = 1;
  3636  06EE  1283               	bcf	3,5	;RP0=0, select bank0
  3637  06EF  1303               	bcf	3,6	;RP1=0, select bank0
  3638  06F0  179F               	bsf	31,7	;volatile
  3639                           
  3640                           ;main.c: 333:     ADCON0bits.ADCS0 = 0;
  3641  06F1  131F               	bcf	31,6	;volatile
  3642                           
  3643                           ;main.c: 336:     ADCON1bits.ADFM = 0;
  3644  06F2  1683               	bsf	3,5	;RP0=1, select bank1
  3645  06F3  1303               	bcf	3,6	;RP1=0, select bank1
  3646  06F4  139F               	bcf	31,7	;volatile
  3647  06F5                     l1240:
  3648                           
  3649                           ;main.c: 339:     ADRESL = 0;
  3650  06F5  019E               	clrf	30	;volatile
  3651                           
  3652                           ;main.c: 340:     ADRESH = 0;
  3653  06F6  1283               	bcf	3,5	;RP0=0, select bank0
  3654  06F7  1303               	bcf	3,6	;RP1=0, select bank0
  3655  06F8  019E               	clrf	30	;volatile
  3656  06F9                     l1242:
  3657                           
  3658                           ;main.c: 344:     ADCON0bits.ADON = 1;
  3659  06F9  141F               	bsf	31,0	;volatile
  3660  06FA                     l1244:
  3661                           
  3662                           ;main.c: 347:     ADCON0bits.CHS0 = 0;
  3663  06FA  119F               	bcf	31,3	;volatile
  3664  06FB                     l1246:
  3665                           
  3666                           ;main.c: 348:     ADCON0bits.CHS1 = 0;
  3667  06FB  121F               	bcf	31,4	;volatile
  3668  06FC                     l1248:
  3669                           
  3670                           ;main.c: 349:     ADCON0bits.CHS2 = 0;
  3671  06FC  129F               	bcf	31,5	;volatile
  3672  06FD                     l184:
  3673  06FD  0008               	return
  3674  06FE                     __end_of_setupADC:
  3675                           
  3676                           	psect	text22
  3677  03AB                     __ptext22:	
  3678 ;; *************** function _Lcd_Init *****************
  3679 ;; Defined at:
  3680 ;;		line 62 in file "./lcd.h"
  3681 ;; Parameters:    Size  Location     Type
  3682 ;;		None
  3683 ;; Auto vars:     Size  Location     Type
  3684 ;;		None
  3685 ;; Return value:  Size  Location     Type
  3686 ;;                  1    wreg      void 
  3687 ;; Registers used:
  3688 ;;		wreg, status,2, status,0, pclath, cstack
  3689 ;; Tracked objects:
  3690 ;;		On entry : 0/0
  3691 ;;		On exit  : 0/0
  3692 ;;		Unchanged: 0/0
  3693 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3694 ;;      Params:         0       0       0       0       0
  3695 ;;      Locals:         0       0       0       0       0
  3696 ;;      Temps:          2       0       0       0       0
  3697 ;;      Totals:         2       0       0       0       0
  3698 ;;Total ram usage:        2 bytes
  3699 ;; Hardware stack levels used: 1
  3700 ;; Hardware stack levels required when called: 5
  3701 ;; This function calls:
  3702 ;;		_Lcd_Cmd
  3703 ;;		_Lcd_Port
  3704 ;; This function is called by:
  3705 ;;		_main
  3706 ;; This function uses a non-reentrant model
  3707 ;;
  3708                           
  3709  03AB                     _Lcd_Init:	
  3710                           ;psect for function _Lcd_Init
  3711                           
  3712  03AB                     l2034:	
  3713                           ;incstack = 0
  3714                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  3715                           
  3716                           
  3717                           ;./lcd.h: 64:   Lcd_Port(0x00);
  3718  03AB  3000               	movlw	0
  3719  03AC  120A  118A  2633  120A  118A  	fcall	_Lcd_Port
  3720  03B1                     l2036:
  3721                           
  3722                           ;./lcd.h: 65:    _delay((unsigned long)((20)*(4000000/4000.0)));
  3723  03B1  301A               	movlw	26
  3724  03B2  00F8               	movwf	??_Lcd_Init+1
  3725  03B3  30F8               	movlw	248
  3726  03B4  00F7               	movwf	??_Lcd_Init
  3727  03B5                     u2117:
  3728  03B5  0BF7               	decfsz	??_Lcd_Init,f
  3729  03B6  2BB5               	goto	u2117
  3730  03B7  0BF8               	decfsz	??_Lcd_Init+1,f
  3731  03B8  2BB5               	goto	u2117
  3732  03B9  0000               	nop
  3733  03BA                     l2038:
  3734                           
  3735                           ;./lcd.h: 66:   Lcd_Cmd(0x03);
  3736  03BA  3003               	movlw	3
  3737  03BB  120A  118A  26B4  120A  118A  	fcall	_Lcd_Cmd
  3738                           
  3739                           ;./lcd.h: 67:  _delay((unsigned long)((5)*(4000000/4000.0)));
  3740  03C0  3007               	movlw	7
  3741  03C1  00F8               	movwf	??_Lcd_Init+1
  3742  03C2  307D               	movlw	125
  3743  03C3  00F7               	movwf	??_Lcd_Init
  3744  03C4                     u2127:
  3745  03C4  0BF7               	decfsz	??_Lcd_Init,f
  3746  03C5  2BC4               	goto	u2127
  3747  03C6  0BF8               	decfsz	??_Lcd_Init+1,f
  3748  03C7  2BC4               	goto	u2127
  3749  03C8                     l2040:
  3750                           
  3751                           ;./lcd.h: 68:   Lcd_Cmd(0x03);
  3752  03C8  3003               	movlw	3
  3753  03C9  120A  118A  26B4  120A  118A  	fcall	_Lcd_Cmd
  3754  03CE                     l2042:
  3755                           
  3756                           ;./lcd.h: 69:  _delay((unsigned long)((11)*(4000000/4000.0)));
  3757  03CE  300F               	movlw	15
  3758  03CF  00F8               	movwf	??_Lcd_Init+1
  3759  03D0  3047               	movlw	71
  3760  03D1  00F7               	movwf	??_Lcd_Init
  3761  03D2                     u2137:
  3762  03D2  0BF7               	decfsz	??_Lcd_Init,f
  3763  03D3  2BD2               	goto	u2137
  3764  03D4  0BF8               	decfsz	??_Lcd_Init+1,f
  3765  03D5  2BD2               	goto	u2137
  3766  03D6  2BD7               	nop2
  3767                           
  3768                           ;./lcd.h: 70:   Lcd_Cmd(0x03);
  3769  03D7  3003               	movlw	3
  3770  03D8  120A  118A  26B4  120A  118A  	fcall	_Lcd_Cmd
  3771                           
  3772                           ;./lcd.h: 72:   Lcd_Cmd(0x02);
  3773  03DD  3002               	movlw	2
  3774  03DE  120A  118A  26B4  120A  118A  	fcall	_Lcd_Cmd
  3775                           
  3776                           ;./lcd.h: 73:   Lcd_Cmd(0x02);
  3777  03E3  3002               	movlw	2
  3778  03E4  120A  118A  26B4  120A  118A  	fcall	_Lcd_Cmd
  3779                           
  3780                           ;./lcd.h: 74:   Lcd_Cmd(0x08);
  3781  03E9  3008               	movlw	8
  3782  03EA  120A  118A  26B4  120A  118A  	fcall	_Lcd_Cmd
  3783                           
  3784                           ;./lcd.h: 75:   Lcd_Cmd(0x00);
  3785  03EF  3000               	movlw	0
  3786  03F0  120A  118A  26B4  120A  118A  	fcall	_Lcd_Cmd
  3787                           
  3788                           ;./lcd.h: 76:   Lcd_Cmd(0x0C);
  3789  03F5  300C               	movlw	12
  3790  03F6  120A  118A  26B4  120A  118A  	fcall	_Lcd_Cmd
  3791                           
  3792                           ;./lcd.h: 77:   Lcd_Cmd(0x00);
  3793  03FB  3000               	movlw	0
  3794  03FC  120A  118A  26B4  120A  118A  	fcall	_Lcd_Cmd
  3795                           
  3796                           ;./lcd.h: 78:   Lcd_Cmd(0x06);
  3797  0401  3006               	movlw	6
  3798  0402  120A  118A  26B4  120A  118A  	fcall	_Lcd_Cmd
  3799  0407                     l80:
  3800  0407  0008               	return
  3801  0408                     __end_of_Lcd_Init:
  3802                           
  3803                           	psect	text23
  3804  06B4                     __ptext23:	
  3805 ;; *************** function _Lcd_Cmd *****************
  3806 ;; Defined at:
  3807 ;;		line 26 in file "./lcd.h"
  3808 ;; Parameters:    Size  Location     Type
  3809 ;;  a               1    wreg     unsigned char 
  3810 ;; Auto vars:     Size  Location     Type
  3811 ;;  a               1    6[COMMON] unsigned char 
  3812 ;; Return value:  Size  Location     Type
  3813 ;;                  1    wreg      void 
  3814 ;; Registers used:
  3815 ;;		wreg, status,2, status,0, pclath, cstack
  3816 ;; Tracked objects:
  3817 ;;		On entry : 0/0
  3818 ;;		On exit  : 0/0
  3819 ;;		Unchanged: 0/0
  3820 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3821 ;;      Params:         0       0       0       0       0
  3822 ;;      Locals:         1       0       0       0       0
  3823 ;;      Temps:          2       0       0       0       0
  3824 ;;      Totals:         3       0       0       0       0
  3825 ;;Total ram usage:        3 bytes
  3826 ;; Hardware stack levels used: 1
  3827 ;; Hardware stack levels required when called: 4
  3828 ;; This function calls:
  3829 ;;		_Lcd_Port
  3830 ;; This function is called by:
  3831 ;;		_Lcd_Clear
  3832 ;;		_Lcd_Set_Cursor
  3833 ;;		_Lcd_Init
  3834 ;;		_Lcd_Shift_Right
  3835 ;;		_Lcd_Shift_Left
  3836 ;; This function uses a non-reentrant model
  3837 ;;
  3838                           
  3839  06B4                     _Lcd_Cmd:	
  3840                           ;psect for function _Lcd_Cmd
  3841                           
  3842                           
  3843                           ;incstack = 0
  3844 ;; hardware stack exceeded
  3845                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  3846                           ;Lcd_Cmd@a stored from wreg
  3847  06B4  00F6               	movwf	Lcd_Cmd@a
  3848  06B5                     l1776:
  3849                           
  3850                           ;./lcd.h: 26: void Lcd_Cmd(char a);./lcd.h: 27: {;./lcd.h: 28:  RD2 = 0;
  3851  06B5  1283               	bcf	3,5	;RP0=0, select bank0
  3852  06B6  1303               	bcf	3,6	;RP1=0, select bank0
  3853  06B7  1108               	bcf	8,2	;volatile
  3854  06B8                     l1778:
  3855                           
  3856                           ;./lcd.h: 29:  Lcd_Port(a);
  3857  06B8  0876               	movf	Lcd_Cmd@a,w
  3858  06B9  120A  118A  2633  120A  118A  	fcall	_Lcd_Port
  3859  06BE                     l1780:
  3860                           
  3861                           ;./lcd.h: 30:  RD3 = 1;
  3862  06BE  1283               	bcf	3,5	;RP0=0, select bank0
  3863  06BF  1303               	bcf	3,6	;RP1=0, select bank0
  3864  06C0  1588               	bsf	8,3	;volatile
  3865  06C1                     l1782:
  3866                           
  3867                           ;./lcd.h: 31:         _delay((unsigned long)((4)*(4000000/4000.0)));
  3868  06C1  3006               	movlw	6
  3869  06C2  00F5               	movwf	??_Lcd_Cmd+1
  3870  06C3  3030               	movlw	48
  3871  06C4  00F4               	movwf	??_Lcd_Cmd
  3872  06C5                     u2147:
  3873  06C5  0BF4               	decfsz	??_Lcd_Cmd,f
  3874  06C6  2EC5               	goto	u2147
  3875  06C7  0BF5               	decfsz	??_Lcd_Cmd+1,f
  3876  06C8  2EC5               	goto	u2147
  3877  06C9  0000               	nop
  3878  06CA                     l1784:
  3879                           
  3880                           ;./lcd.h: 32:         RD3 = 0;
  3881  06CA  1283               	bcf	3,5	;RP0=0, select bank0
  3882  06CB  1303               	bcf	3,6	;RP1=0, select bank0
  3883  06CC  1188               	bcf	8,3	;volatile
  3884  06CD                     l68:
  3885  06CD  0008               	return
  3886  06CE                     __end_of_Lcd_Cmd:
  3887                           
  3888                           	psect	text24
  3889  0633                     __ptext24:	
  3890 ;; *************** function _Lcd_Port *****************
  3891 ;; Defined at:
  3892 ;;		line 4 in file "./lcd.h"
  3893 ;; Parameters:    Size  Location     Type
  3894 ;;  a               1    wreg     unsigned char 
  3895 ;; Auto vars:     Size  Location     Type
  3896 ;;  a               1    3[COMMON] unsigned char 
  3897 ;; Return value:  Size  Location     Type
  3898 ;;                  1    wreg      void 
  3899 ;; Registers used:
  3900 ;;		wreg
  3901 ;; Tracked objects:
  3902 ;;		On entry : 0/0
  3903 ;;		On exit  : 0/0
  3904 ;;		Unchanged: 0/0
  3905 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3906 ;;      Params:         0       0       0       0       0
  3907 ;;      Locals:         1       0       0       0       0
  3908 ;;      Temps:          0       0       0       0       0
  3909 ;;      Totals:         1       0       0       0       0
  3910 ;;Total ram usage:        1 bytes
  3911 ;; Hardware stack levels used: 1
  3912 ;; Hardware stack levels required when called: 3
  3913 ;; This function calls:
  3914 ;;		Nothing
  3915 ;; This function is called by:
  3916 ;;		_Lcd_Cmd
  3917 ;;		_Lcd_Init
  3918 ;;		_Lcd_Write_Char
  3919 ;; This function uses a non-reentrant model
  3920 ;;
  3921                           
  3922  0633                     _Lcd_Port:	
  3923                           ;psect for function _Lcd_Port
  3924                           
  3925                           
  3926                           ;incstack = 0
  3927                           ; Regs used in _Lcd_Port: [wreg]
  3928                           ;Lcd_Port@a stored from wreg
  3929  0633  00F3               	movwf	Lcd_Port@a
  3930  0634                     l1766:
  3931                           
  3932                           ;./lcd.h: 4: void Lcd_Port(char a);./lcd.h: 5: {;./lcd.h: 6:  if(a & 1)
  3933  0634  1C73               	btfss	Lcd_Port@a,0
  3934  0635  2E37               	goto	u1551
  3935  0636  2E38               	goto	u1550
  3936  0637                     u1551:
  3937  0637  2E3C               	goto	l57
  3938  0638                     u1550:
  3939  0638                     l1768:
  3940                           
  3941                           ;./lcd.h: 7:   RD4 = 1;
  3942  0638  1283               	bcf	3,5	;RP0=0, select bank0
  3943  0639  1303               	bcf	3,6	;RP1=0, select bank0
  3944  063A  1608               	bsf	8,4	;volatile
  3945  063B  2E3F               	goto	l58
  3946  063C                     l57:	
  3947                           ;./lcd.h: 8:  else
  3948                           
  3949                           
  3950                           ;./lcd.h: 9:   RD4 = 0;
  3951  063C  1283               	bcf	3,5	;RP0=0, select bank0
  3952  063D  1303               	bcf	3,6	;RP1=0, select bank0
  3953  063E  1208               	bcf	8,4	;volatile
  3954  063F                     l58:
  3955                           
  3956                           ;./lcd.h: 11:  if(a & 2)
  3957  063F  1CF3               	btfss	Lcd_Port@a,1
  3958  0640  2E42               	goto	u1561
  3959  0641  2E43               	goto	u1560
  3960  0642                     u1561:
  3961  0642  2E45               	goto	l59
  3962  0643                     u1560:
  3963  0643                     l1770:
  3964                           
  3965                           ;./lcd.h: 12:   RD5 = 1;
  3966  0643  1688               	bsf	8,5	;volatile
  3967  0644  2E46               	goto	l60
  3968  0645                     l59:	
  3969                           ;./lcd.h: 13:  else
  3970                           
  3971                           
  3972                           ;./lcd.h: 14:   RD5 = 0;
  3973  0645  1288               	bcf	8,5	;volatile
  3974  0646                     l60:
  3975                           
  3976                           ;./lcd.h: 16:  if(a & 4)
  3977  0646  1D73               	btfss	Lcd_Port@a,2
  3978  0647  2E49               	goto	u1571
  3979  0648  2E4A               	goto	u1570
  3980  0649                     u1571:
  3981  0649  2E4C               	goto	l61
  3982  064A                     u1570:
  3983  064A                     l1772:
  3984                           
  3985                           ;./lcd.h: 17:   RD6 = 1;
  3986  064A  1708               	bsf	8,6	;volatile
  3987  064B  2E4D               	goto	l62
  3988  064C                     l61:	
  3989                           ;./lcd.h: 18:  else
  3990                           
  3991                           
  3992                           ;./lcd.h: 19:   RD6 = 0;
  3993  064C  1308               	bcf	8,6	;volatile
  3994  064D                     l62:
  3995                           
  3996                           ;./lcd.h: 21:  if(a & 8)
  3997  064D  1DF3               	btfss	Lcd_Port@a,3
  3998  064E  2E50               	goto	u1581
  3999  064F  2E51               	goto	u1580
  4000  0650                     u1581:
  4001  0650  2E53               	goto	l63
  4002  0651                     u1580:
  4003  0651                     l1774:
  4004                           
  4005                           ;./lcd.h: 22:   RD7 = 1;
  4006  0651  1788               	bsf	8,7	;volatile
  4007  0652  2E54               	goto	l65
  4008  0653                     l63:	
  4009                           ;./lcd.h: 23:  else
  4010                           
  4011                           
  4012                           ;./lcd.h: 24:   RD7 = 0;
  4013  0653  1388               	bcf	8,7	;volatile
  4014  0654                     l65:
  4015  0654  0008               	return
  4016  0655                     __end_of_Lcd_Port:
  4017                           
  4018                           	psect	text25
  4019  0727                     __ptext25:	
  4020 ;; *************** function _interrupcao *****************
  4021 ;; Defined at:
  4022 ;;		line 186 in file "main.c"
  4023 ;; Parameters:    Size  Location     Type
  4024 ;;		None
  4025 ;; Auto vars:     Size  Location     Type
  4026 ;;		None
  4027 ;; Return value:  Size  Location     Type
  4028 ;;                  1    wreg      void 
  4029 ;; Registers used:
  4030 ;;		wreg, status,2, status,0, pclath, cstack
  4031 ;; Tracked objects:
  4032 ;;		On entry : 0/0
  4033 ;;		On exit  : 0/0
  4034 ;;		Unchanged: 0/0
  4035 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4036 ;;      Params:         0       0       0       0       0
  4037 ;;      Locals:         0       0       0       0       0
  4038 ;;      Temps:          2       0       0       0       0
  4039 ;;      Totals:         2       0       0       0       0
  4040 ;;Total ram usage:        2 bytes
  4041 ;; Hardware stack levels used: 1
  4042 ;; Hardware stack levels required when called: 2
  4043 ;; This function calls:
  4044 ;;		_handleExternalInterruption
  4045 ;;		_handleTimerInterruption
  4046 ;; This function is called by:
  4047 ;;		Interrupt level 1
  4048 ;; This function uses a non-reentrant model
  4049 ;;
  4050                           
  4051  0727                     _interrupcao:	
  4052                           ;psect for function _interrupcao
  4053                           
  4054  0727                     i1l1738:
  4055                           
  4056                           ;main.c: 188:     handleTimerInterruption();
  4057  0727  120A  118A  2585  120A  118A  	fcall	_handleTimerInterruption
  4058                           
  4059                           ;main.c: 189:     handleExternalInterruption();
  4060  072C  120A  118A  2738  120A  118A  	fcall	_handleExternalInterruption
  4061  0731                     i1l138:
  4062  0731  0872               	movf	??_interrupcao+1,w
  4063  0732  008A               	movwf	10
  4064  0733  0E71               	swapf	??_interrupcao,w
  4065  0734  0083               	movwf	3
  4066  0735  0EFE               	swapf	btemp,f
  4067  0736  0E7E               	swapf	btemp,w
  4068  0737  0009               	retfie
  4069  0738                     __end_of_interrupcao:
  4070                           
  4071                           	psect	intentry
  4072  0004                     __pintentry:	
  4073                           ;incstack = 0
  4074 ;; hardware stack exceeded
  4075                           ; Regs used in _interrupcao: [wreg+status,2+status,0+pclath+cstack]
  4076                           
  4077  0004                     interrupt_function:
  4078  007E                     saved_w	set	btemp
  4079  0004  00FE               	movwf	btemp
  4080  0005  0E03               	swapf	3,w
  4081  0006  00F1               	movwf	??_interrupcao
  4082  0007  080A               	movf	10,w
  4083  0008  00F2               	movwf	??_interrupcao+1
  4084  0009  120A  118A  2F27   	ljmp	_interrupcao
  4085                           
  4086                           	psect	text26
  4087  0585                     __ptext26:	
  4088 ;; *************** function _handleTimerInterruption *****************
  4089 ;; Defined at:
  4090 ;;		line 133 in file "main.c"
  4091 ;; Parameters:    Size  Location     Type
  4092 ;;		None
  4093 ;; Auto vars:     Size  Location     Type
  4094 ;;		None
  4095 ;; Return value:  Size  Location     Type
  4096 ;;                  1    wreg      void 
  4097 ;; Registers used:
  4098 ;;		wreg, status,2, status,0
  4099 ;; Tracked objects:
  4100 ;;		On entry : 0/0
  4101 ;;		On exit  : 0/0
  4102 ;;		Unchanged: 0/0
  4103 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4104 ;;      Params:         0       0       0       0       0
  4105 ;;      Locals:         0       0       0       0       0
  4106 ;;      Temps:          1       0       0       0       0
  4107 ;;      Totals:         1       0       0       0       0
  4108 ;;Total ram usage:        1 bytes
  4109 ;; Hardware stack levels used: 1
  4110 ;; This function calls:
  4111 ;;		Nothing
  4112 ;; This function is called by:
  4113 ;;		_interrupcao
  4114 ;; This function uses a non-reentrant model
  4115 ;;
  4116                           
  4117  0585                     _handleTimerInterruption:	
  4118                           ;psect for function _handleTimerInterruption
  4119                           
  4120  0585                     i1l1678:	
  4121                           ;incstack = 0
  4122                           ; Regs used in _handleTimerInterruption: [wreg+status,2+status,0]
  4123                           
  4124                           
  4125                           ;main.c: 135:     if(TMR1IF){
  4126  0585  1283               	bcf	3,5	;RP0=0, select bank0
  4127  0586  1303               	bcf	3,6	;RP1=0, select bank0
  4128  0587  1C0C               	btfss	12,0	;volatile
  4129  0588  2D8A               	goto	u148_21
  4130  0589  2D8B               	goto	u148_20
  4131  058A                     u148_21:
  4132  058A  2DB9               	goto	i1l125
  4133  058B                     u148_20:
  4134  058B                     i1l1680:
  4135                           
  4136                           ;main.c: 136:         if(irrigacao_ativa){
  4137  058B  0879               	movf	_irrigacao_ativa,w
  4138  058C  047A               	iorwf	_irrigacao_ativa+1,w
  4139  058D  1903               	btfsc	3,2
  4140  058E  2D90               	goto	u149_21
  4141  058F  2D91               	goto	u149_20
  4142  0590                     u149_21:
  4143  0590  2DAF               	goto	i1l1696
  4144  0591                     u149_20:
  4145  0591                     i1l1682:
  4146                           
  4147                           ;main.c: 137:             timer_counter++;
  4148  0591  3001               	movlw	1
  4149  0592  07CC               	addwf	_timer_counter,f
  4150  0593  1803               	skipnc
  4151  0594  0ACD               	incf	_timer_counter+1,f
  4152  0595  3000               	movlw	0
  4153  0596  07CD               	addwf	_timer_counter+1,f
  4154  0597                     i1l1684:
  4155                           
  4156                           ;main.c: 138:             PORTBbits.RB1 = 1;
  4157  0597  1486               	bsf	6,1	;volatile
  4158  0598                     i1l1686:
  4159                           
  4160                           ;main.c: 139:             PORTBbits.RB6 = 1;
  4161  0598  1706               	bsf	6,6	;volatile
  4162                           
  4163                           ;main.c: 140:             if(timer_counter_max <= timer_counter){
  4164  0599  084D               	movf	_timer_counter+1,w
  4165  059A  3A80               	xorlw	128
  4166  059B  00F0               	movwf	??_handleTimerInterruption
  4167  059C  0849               	movf	_timer_counter_max+1,w
  4168  059D  3A80               	xorlw	128
  4169  059E  0270               	subwf	??_handleTimerInterruption,w
  4170  059F  1D03               	skipz
  4171  05A0  2DA3               	goto	u150_25
  4172  05A1  0848               	movf	_timer_counter_max,w
  4173  05A2  024C               	subwf	_timer_counter,w
  4174  05A3                     u150_25:
  4175  05A3  1C03               	skipc
  4176  05A4  2DA6               	goto	u150_21
  4177  05A5  2DA7               	goto	u150_20
  4178  05A6                     u150_21:
  4179  05A6  2DB2               	goto	i1l1700
  4180  05A7                     u150_20:
  4181  05A7                     i1l1688:
  4182                           
  4183                           ;main.c: 141:                 PORTBbits.RB1 = 0;
  4184  05A7  1283               	bcf	3,5	;RP0=0, select bank0
  4185  05A8  1303               	bcf	3,6	;RP1=0, select bank0
  4186  05A9  1086               	bcf	6,1	;volatile
  4187  05AA                     i1l1690:
  4188                           
  4189                           ;main.c: 142:                 irrigacao_ativa = 0;
  4190  05AA  01F9               	clrf	_irrigacao_ativa
  4191  05AB  01FA               	clrf	_irrigacao_ativa+1
  4192  05AC                     i1l1692:
  4193                           
  4194                           ;main.c: 143:                 PORTBbits.RB6 = 0;
  4195  05AC  1306               	bcf	6,6	;volatile
  4196  05AD                     i1l1694:
  4197                           
  4198                           ;main.c: 146:                 T1CONbits.TMR1ON = 0;
  4199  05AD  1010               	bcf	16,0	;volatile
  4200  05AE  2DB2               	goto	i1l1700
  4201  05AF                     i1l1696:
  4202                           
  4203                           ;main.c: 150:             timer_counter = 0;
  4204  05AF  01CC               	clrf	_timer_counter
  4205  05B0  01CD               	clrf	_timer_counter+1
  4206  05B1                     i1l1698:
  4207                           
  4208                           ;main.c: 151:             PORTBbits.RB1 = 0;
  4209  05B1  1086               	bcf	6,1	;volatile
  4210  05B2                     i1l1700:
  4211                           
  4212                           ;main.c: 153:         PIR1bits.TMR1IF = 0;
  4213  05B2  1283               	bcf	3,5	;RP0=0, select bank0
  4214  05B3  1303               	bcf	3,6	;RP1=0, select bank0
  4215  05B4  100C               	bcf	12,0	;volatile
  4216  05B5                     i1l1702:
  4217                           
  4218                           ;main.c: 154:         TMR1H = 0x0B;
  4219  05B5  300B               	movlw	11
  4220  05B6  008F               	movwf	15	;volatile
  4221  05B7                     i1l1704:
  4222                           
  4223                           ;main.c: 155:         TMR1L = 0xDC;
  4224  05B7  30DC               	movlw	220
  4225  05B8  008E               	movwf	14	;volatile
  4226  05B9                     i1l125:
  4227  05B9  0008               	return
  4228  05BA                     __end_of_handleTimerInterruption:
  4229                           
  4230                           	psect	text27
  4231  0738                     __ptext27:	
  4232 ;; *************** function _handleExternalInterruption *****************
  4233 ;; Defined at:
  4234 ;;		line 175 in file "main.c"
  4235 ;; Parameters:    Size  Location     Type
  4236 ;;		None
  4237 ;; Auto vars:     Size  Location     Type
  4238 ;;		None
  4239 ;; Return value:  Size  Location     Type
  4240 ;;                  1    wreg      void 
  4241 ;; Registers used:
  4242 ;;		wreg, status,2, status,0, pclath, cstack
  4243 ;; Tracked objects:
  4244 ;;		On entry : 0/0
  4245 ;;		On exit  : 0/0
  4246 ;;		Unchanged: 0/0
  4247 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4248 ;;      Params:         0       0       0       0       0
  4249 ;;      Locals:         0       0       0       0       0
  4250 ;;      Temps:          0       0       0       0       0
  4251 ;;      Totals:         0       0       0       0       0
  4252 ;;Total ram usage:        0 bytes
  4253 ;; Hardware stack levels used: 1
  4254 ;; Hardware stack levels required when called: 1
  4255 ;; This function calls:
  4256 ;;		i1_irrigar
  4257 ;; This function is called by:
  4258 ;;		_interrupcao
  4259 ;; This function uses a non-reentrant model
  4260 ;;
  4261                           
  4262  0738                     _handleExternalInterruption:	
  4263                           ;psect for function _handleExternalInterruption
  4264                           
  4265  0738                     i1l1708:	
  4266                           ;incstack = 0
  4267 ;; hardware stack exceeded
  4268                           ; Regs used in _handleExternalInterruption: [wreg+status,2+status,0+pclath+cstack]
  4269                           
  4270                           
  4271                           ;main.c: 177:     if(INTF){
  4272  0738  1C8B               	btfss	11,1	;volatile
  4273  0739  2F3B               	goto	u151_21
  4274  073A  2F3C               	goto	u151_20
  4275  073B                     u151_21:
  4276  073B  2F48               	goto	i1l133
  4277  073C                     u151_20:
  4278  073C                     i1l1710:
  4279                           
  4280                           ;main.c: 178:         if(!irrigacao_ativa){
  4281  073C  0879               	movf	_irrigacao_ativa,w
  4282  073D  047A               	iorwf	_irrigacao_ativa+1,w
  4283  073E  1D03               	btfss	3,2
  4284  073F  2F41               	goto	u152_21
  4285  0740  2F42               	goto	u152_20
  4286  0741                     u152_21:
  4287  0741  2F47               	goto	i1l1714
  4288  0742                     u152_20:
  4289  0742                     i1l1712:
  4290                           
  4291                           ;main.c: 179:             irrigar();
  4292  0742  120A  118A  2760  120A  118A  	fcall	i1_irrigar
  4293  0747                     i1l1714:
  4294                           
  4295                           ;main.c: 181:         INTCONbits.INTF = 0;
  4296  0747  108B               	bcf	11,1	;volatile
  4297  0748                     i1l133:
  4298  0748  0008               	return
  4299  0749                     __end_of_handleExternalInterruption:
  4300                           
  4301                           	psect	text28
  4302  0760                     __ptext28:	
  4303 ;; *************** function i1_irrigar *****************
  4304 ;; Defined at:
  4305 ;;		line 161 in file "main.c"
  4306 ;; Parameters:    Size  Location     Type
  4307 ;;		None
  4308 ;; Auto vars:     Size  Location     Type
  4309 ;;		None
  4310 ;; Return value:  Size  Location     Type
  4311 ;;                  1    wreg      void 
  4312 ;; Registers used:
  4313 ;;		wreg, status,2
  4314 ;; Tracked objects:
  4315 ;;		On entry : 0/0
  4316 ;;		On exit  : 0/0
  4317 ;;		Unchanged: 0/0
  4318 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4319 ;;      Params:         0       0       0       0       0
  4320 ;;      Locals:         0       0       0       0       0
  4321 ;;      Temps:          0       0       0       0       0
  4322 ;;      Totals:         0       0       0       0       0
  4323 ;;Total ram usage:        0 bytes
  4324 ;; Hardware stack levels used: 1
  4325 ;; This function calls:
  4326 ;;		Nothing
  4327 ;; This function is called by:
  4328 ;;		_handleExternalInterruption
  4329 ;; This function uses a non-reentrant model
  4330 ;;
  4331                           
  4332  0760                     i1_irrigar:	
  4333                           ;psect for function i1_irrigar
  4334                           
  4335  0760                     i1l1652:	
  4336                           ;incstack = 0
  4337 ;; hardware stack exceeded
  4338                           ; Regs used in i1_irrigar: [wreg+status,2]
  4339                           
  4340                           
  4341                           ;main.c: 162:     irrigacao_ativa = 1;
  4342  0760  3001               	movlw	1
  4343  0761  00F9               	movwf	_irrigacao_ativa
  4344  0762  3000               	movlw	0
  4345  0763  00FA               	movwf	_irrigacao_ativa+1
  4346  0764                     i1l1654:
  4347                           
  4348                           ;main.c: 163:     timer_counter = 0;
  4349  0764  1283               	bcf	3,5	;RP0=0, select bank0
  4350  0765  1303               	bcf	3,6	;RP1=0, select bank0
  4351  0766  01CC               	clrf	_timer_counter
  4352  0767  01CD               	clrf	_timer_counter+1
  4353  0768                     i1l1656:
  4354                           
  4355                           ;main.c: 166:     T1CONbits.TMR1ON = 1;
  4356  0768  1410               	bsf	16,0	;volatile
  4357  0769                     i1l128:
  4358  0769  0008               	return
  4359  076A                     __end_ofi1_irrigar:
  4360  007E                     btemp	set	126	;btemp
  4361  007E                     wtemp0	set	126

Data Sizes:
    Strings     27
    Constant    0
    Data        8
    BSS         6
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      11
    BANK0            80     34      46
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 15
		 -> STR_2(CODE[12]), STR_1(CODE[15]), 


Critical Paths under _main in COMMON

    _main->_Lcd_Init
    _getADConverterValue->___fltol
    _getADConverterValue->___wmul
    ___xxtofl->___wmul
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Clear->_Lcd_Cmd
    _setupNewVolumeFlow->___wmul
    ___awdiv->___wmul
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _interrupcao in COMMON

    _interrupcao->_handleTimerInterruption

Critical Paths under _main in BANK0

    _main->_verifySensor
    _verifySensor->_getADConverterValue
    _getADConverterValue->___xxtofl
    ___xxtofl->___awdiv
    _verifyMenu->_handleMenu
    _handleMenu->_setupNewVolumeFlow
    _handleMenu->_writeValor
    _writeValor->___awdiv
    _setupTimer->_setupNewVolumeFlow
    _setupNewVolumeFlow->_changeTimerMaxConter
    _changeTimerMaxConter->___awdiv
    ___awdiv->___awmod

Critical Paths under _interrupcao in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _interrupcao in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _interrupcao in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _interrupcao in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   12021
                           _Lcd_Init
                           _setupADC
          _setupExternalInterruption
                         _setupTimer
                 _setupWatchdogTimer
                         _verifyMenu
                       _verifySensor
 ---------------------------------------------------------------------------------
 (1) _verifySensor                                         1     1      0    2298
                                             33 BANK0      1     1      0
                _getADConverterValue
                            _irrigar
 ---------------------------------------------------------------------------------
 (2) _irrigar                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _getADConverterValue                                  8     6      2    2298
                                             25 BANK0      8     6      2
                            ___awdiv
                            ___fltol
                             ___wmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     398
                                             11 BANK0     14    10      4
                            ___awdiv (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             11     7      4     305
                                              3 COMMON     6     2      4
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (1) _verifyMenu                                           3     3      0    7517
                                             24 BANK0      3     3      0
                         _handleMenu
 ---------------------------------------------------------------------------------
 (2) _handleMenu                                           7     7      0    7517
                                             17 BANK0      7     7      0
                          _Lcd_Clear
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                 _setupNewVolumeFlow
                         _writeValor
 ---------------------------------------------------------------------------------
 (3) _writeValor                                           6     4      2    3762
                                             11 BANK0      6     4      2
                     _Lcd_Set_Cursor
                     _Lcd_Write_Char
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              7     3      4     793
                                              3 COMMON     5     1      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (4) _Lcd_Set_Cursor                                       7     6      1     815
                                              7 COMMON     1     0      1
                                              0 BANK0      6     6      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (3) _Lcd_Write_String                                     3     3      0     456
                                              0 BANK0      3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (4) _Lcd_Write_Char                                       4     4      0     254
                                              4 COMMON     4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Clear                                            0     0      0     155
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _setupWatchdogTimer                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setupTimer                                           0     0      0    1927
                 _setupNewVolumeFlow
 ---------------------------------------------------------------------------------
 (3) _setupNewVolumeFlow                                   4     2      2    1927
                                             13 BANK0      4     2      2
                             ___wmul
               _changeTimerMaxConter
 ---------------------------------------------------------------------------------
 (4) _changeTimerMaxConter                                 2     0      2    1286
                                             11 BANK0      2     0      2
                            ___awdiv
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    1165
                                              2 BANK0      9     5      4
                            ___awmod (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     396
                                              3 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) _setupExternalInterruption                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setupADC                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     279
                                              7 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (5) _Lcd_Cmd                                              3     3      0     155
                                              4 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (5) _Lcd_Port                                             1     1      0     124
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _interrupcao                                          2     2      0       0
                                              1 COMMON     2     2      0
         _handleExternalInterruption
            _handleTimerInterruption
 ---------------------------------------------------------------------------------
 (8) _handleTimerInterruption                              1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (8) _handleExternalInterruption                           0     0      0       0
                          i1_irrigar
 ---------------------------------------------------------------------------------
 (9) i1_irrigar                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _setupADC
   _setupExternalInterruption
   _setupTimer
     _setupNewVolumeFlow
       ___wmul
       _changeTimerMaxConter
         ___awdiv
           ___awmod (ARG)
           ___wmul (ARG)
   _setupWatchdogTimer
   _verifyMenu
     _handleMenu
       _Lcd_Clear
         _Lcd_Cmd
       _Lcd_Set_Cursor
         _Lcd_Cmd
       _Lcd_Write_String
         _Lcd_Write_Char
           _Lcd_Port
       _setupNewVolumeFlow
       _writeValor
         _Lcd_Set_Cursor
         _Lcd_Write_Char
         ___awdiv
         ___awmod
   _verifySensor
     _getADConverterValue
       ___awdiv
       ___fltol
       ___wmul
       ___xxtofl
         ___awdiv (ARG)
         ___wmul (ARG)
     _irrigar

 _interrupcao (ROOT)
   _handleExternalInterruption
     i1_irrigar
   _handleTimerInterruption

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     22      2E       5       57.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      9       B       1       78.6%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      39      12        0.0%
ABS                  0      0      39       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.35 build 20211206165544 
Symbol Table                                                                                   Fri Mar 04 18:38:41 2022

                                 pc 0002                     writeValor@valor 002B  
                                l60 0646                                  l61 064C  
                                l62 064D                                  l63 0653  
                                l71 0755                                  l80 0407  
                                l65 0654                                  l57 063C  
                                l58 063F                                  l59 0645  
                                l83 0584                                  l68 06CD  
                                l77 0514                                  l89 060D  
                      ___awdiv@sign 0028                    writeValor@dezena 002F  
                                fsr 0004                 ___wmul@multiplicand 0075  
                   _irrigacao_ativa 0079                                 l112 0713  
                               l115 06B3                                 l141 077F  
                               l118 06E6                                 l144 0341  
                               l128 075F                                 l170 0694  
                               l164 0188                                 l156 00D7  
                               l148 0032                                 l181 0779  
                               l173 04BC                                 l166 019B  
                               l431 03AA                                 l184 06FD  
                               l280 0632                                 l176 05E1  
                               l178 05E4                                 l444 0462  
                               l278 061A                                 l471 02BE  
                               l711 01C0                                 l464 02D3  
                               l713 0257                                 l474 02D3  
                               l724 0221                                 l725 022D  
                               l717 0205                                 _RD2 0042  
                               _RD3 0043                                 _RD4 0044  
                               _RD5 0045                                 _RD6 0046  
                               _RD7 0047                                 u970 0614  
                               u971 0613                                 u985 061B  
                               u995 0622                   writeValor@centena 002E  
                               fsr0 0004                                 indf 0000  
                      ___awmod@sign 0021        ??_handleExternalInterruption 0070  
                      ___fltol@exp1 0078                                l2000 014A  
                              l2010 0166                                l2002 0154  
                              l2020 0196                                l2012 016F  
                              l2004 015A                                l2006 0160  
                              l2014 0179                                l2030 04A9  
                              l2040 03C8                                l1240 06F5  
                              l1400 0628                                l2016 0182  
                              l2008 0164                                l2024 0463  
                              l2042 03CE                                l2034 03AB  
                              l1242 06F9                                l1218 077A  
                              l1402 062E                                l2050 06DD  
                              l2018 018D                                l2026 0466  
                              l2036 03B1                                l1244 06FA  
                              l2044 06CE                                l1236 0772  
                              l2060 068F                                l1500 01A4  
                              l2028 046D                                l2038 03BA  
                              l1246 06FB                                l1238 06E7  
                              l2046 06D8                                l2054 0676  
                              l1510 01D1                                l1502 01A8  
                              l1248 06FC                                l2048 06DC  
                              l2056 067C                                l1520 01FC  
                              l1512 01D6                                l1504 01B8  
                              l2064 05BA                                l2080 051F  
                              l2058 0680                                l1530 022F  
                              l1522 020C                                l1514 01E3  
                              l1506 01C8                                l2066 05D8  
                              l2090 0530                                l2082 0522  
                              l2074 0515                                l1532 0245  
                              l1524 0217                                l1516 01EA  
                              l2068 05DB                                l2092 053A  
                              l2084 0523                                l2076 051B  
                              l1470 0283                                l1462 0258  
                              l1534 024A                                l1526 021B  
                              l1518 01EE                                l1542 0756  
                              l2094 053F                                l2086 0526  
                              l2078 051C                                l1392 060E  
                              l1800 035D                                l1472 0284  
                              l1464 0265                                l1536 024E  
                              l1528 0225                                l1544 075A  
                              l2096 0544                                l2088 052B  
                              l1394 0610                                l1810 0373  
                              l1802 035F                                l1474 028C  
                              l1538 024F                                l1546 075E  
                              l1396 0614                                l1820 0396  
                              l1812 0377                                l1804 0365  
                              l1900 0447                                l1492 02B3  
                              l1484 029A                                l1476 028E  
                              l1468 026E                                l1398 0621  
                              l1814 0388                                l1806 0368  
                              l1822 039C                                l1830 04C0  
                              l1902 044E                                l1494 02C3  
                              l1478 0292                                l1486 02AC  
                              l1824 03A1                                l1816 038E  
                              l1808 036F                                l1912 0749  
                              l1920 0600                                l1832 04C5  
                              l1840 04EA                                l1904 0454  
                              l1496 02C8                                l1770 0643  
                              l1826 03A6                                l1818 038F  
                              l1922 0695                                l1850 054F  
                              l1914 05E8                                l1842 04F0  
                              l1834 04D6                                l1906 0459  
                              l1930 0027                                l1498 019F  
                              l1772 064A                                l1780 06BE  
                              l1860 0571                                l1852 0559  
                              l1916 05EB                                l1844 0501  
                              l1836 04DB                                l1908 045E  
                              l1940 0056                                l1932 0033  
                              l1774 0651                                l1766 0634  
                              l1782 06C1                                l1790 0349  
                              l1870 06FE                                l1862 0574  
                              l1854 055C                                l1918 05F8  
                              l1846 0506                                l1838 04E1  
                              l1926 02D4                                l1950 008B  
                              l1942 005C                                l1934 003D  
                              l1768 0638                                l1784 06CA  
                              l1776 06B5                                l1792 034E  
                              l1864 057A                                l1856 056A  
                              l1848 050C                                l1880 0414  
                              l1960 00B0                                l1952 008F  
                              l1944 0072                                l1936 0045  
                              l1778 06B8                                l1794 0350  
                              l1786 0342                                l1866 057D  
                              l1858 056D                                l1890 0428  
                              l1882 0416                                l1874 0408  
                              l1970 00D1                                l1962 00B4  
                              l1954 009A                                l1946 0078  
                              l1938 004B                                l1796 0354  
                              l1788 0345                                l1868 0581  
                              l1892 042F                                l1884 041A  
                              l1876 040B                                l1980 00FB  
                              l1972 00D8                                l1964 00B6  
                              l1948 007E                                l1956 00A4  
                              l1798 0359                                l1894 0433  
                              l1886 041F                                l1878 040F  
                              l1982 0101                                l1990 0122  
                              l1974 00E2                                l1966 00BF  
                              l1958 00AA                                l1896 0437  
                              l1888 0425                                l1992 0128  
                              l1984 0105                                l1976 00EA  
                              l1968 00C9                                l1898 0441  
                              l1994 012E                                l1986 010E  
                              l1978 00F0                                l1996 013B  
                              l1988 0114                                l1998 013F  
        __end_of_setupNewVolumeFlow 06B4                                STR_1 065B  
                              STR_2 066A                                u1000 062E  
                              u1001 062D                                u1110 0265  
                              u1111 0264                                u1200 02C8  
                              u1120 027C                                u1201 02C7  
                 writeValor@unidade 0030                                u1130 0292  
                              u1210 01A4                                u1131 0291  
                              u1211 01A3                                u1140 0299  
                              u1300 0221                                u1220 01A8  
                              u1141 0298                                u1125 0277  
                              u1301 0220                                u1221 01A7  
                              u1310 0225                                u1230 01C8  
                              u2007 0689                                u1311 0224  
                              u1231 01C7                                u1160 02AB  
                              u1320 023A                                u2017 0039  
                              u1161 02AA                                u1170 02B2  
                              u1330 024A                                u1250 01E9  
                              u2107 057F                                u2027 006C  
                              u1171 02B1                                u1155 029B  
                              u1331 0249                                u1251 01E8  
                              u1340 024E                                u2117 03B5  
                              u2037 00A0                                u1341 024D  
                              u1325 0235                                u1245 01DB  
                              u1190 02C3                                u1270 020B  
                              u2127 03C4                                u2047 00C5  
                              u1191 02C2                                u1271 020A  
                              u1600 0354                                u2137 03D2  
                              u1601 0353                                u2057 00DE  
                              u1185 02B5                                u1265 01FD  
                              u1610 0365                                u1290 021B  
                              u2147 06C5                                u1611 0364  
                              u2067 011C                                u1291 021A  
                              u2077 0150                                u1285 0210  
                              u1550 0638                                u1630 0377  
                              u1710 04F0                                u1551 0637  
                              u1631 0376                                u1711 04EF  
                              u2087 0175                                u1560 0643  
                              u1561 0642                                u1625 0369  
                              u2097 056F                                u1705 04CD  
                              u1570 064A                                u1650 0388  
                              u1810 0454                                u1571 0649  
                              u1651 0387                                u1811 0453  
                              u1580 0651                                u1820 0459  
                              u1740 040F                                u1900 0101  
                              u1581 0650                                u1645 0378  
                              u1725 04F8                                u1821 0458  
                              u1805 0448                                u1741 040E  
                              u1901 0100                                u1670 039C  
                              u1590 0349                                u1830 060D  
                              u1750 041A                                u1910 0128  
                              u1671 039B                                u1655 0384  
                              u1591 0348                                u1735 055F  
                              u1831 060C                                u1751 0419  
                              u1911 0127                                u1680 03A1  
                              u1760 0425                                u1920 013B  
                              u1840 005C                                u1681 03A0  
                              u1665 0390                                u1761 0424  
                              u1921 013A                                u1841 005B  
                              u1690 04C5                                u1930 015A  
                              u1850 0078                                u1691 04C4  
                              u1931 0159                                u1851 0077  
                              u1780 0437                                u1940 0164  
                              u1860 008B                                u1781 0436  
                              u1941 0163                                u1925 0137  
                              u1861 008A                                u1790 0441  
                              u1950 0182                                u1870 00AA  
                              u1791 0440                                u1775 0429  
                              u1951 0181                                u1871 00A9  
                              u1960 0196                                u1880 00B4  
                              u1961 0195                                u1881 00B3  
                              u1865 0087                                u1890 00D1  
                              u1970 067C                                u1795 043D  
                              u1891 00D0                                u1971 067B  
                              u1980 05D8                                u1981 05D7  
                              _INTF 0059                                u1985 05D4  
                              u1997 046A               ??_getADConverterValue 003B  
                 ?_Lcd_Write_String 0070                                _main 0515  
                              btemp 007E                                start 000C  
                ??_Lcd_Write_String 0078                     __end_of_Lcd_Cmd 06CE  
       ?_handleExternalInterruption 0070                       ___fltol@sign1 0077  
                             ?_main 0070                     __end_of___awdiv 03AB  
                   __end_of___awmod 0463                     __end_of___fltol 02D4  
                   ___awdiv@divisor 0022                               i1l133 0748  
                             i1l125 05B9                               i1l128 0769  
                             i1l138 0731                     ___awdiv@counter 0027  
                             _TMR1H 000F                               _TMR1L 000E  
                             _PORTB 0006                               _PORTC 0007  
                             _TRISA 0085                               _TRISB 0086  
                             _TRISC 0087                               _TRISD 0088  
                             _MLxMS 0042                   _timer_counter_max 0048  
                   __end_of_irrigar 0760                               pclath 000A  
                             status 0003                               wtemp0 007E  
                  __end_of_Lcd_Init 0408                    __end_of_Lcd_Port 0655  
                   __initialization 000F                        ?_interrupcao 0070  
                      __end_of_main 054E                              ??_main 0079  
          setupNewVolumeFlow@new_ml 002D            setupNewVolumeFlow@new_ms 002F  
          ?_handleTimerInterruption 0070                              _ADRESH 001E  
                            _ADRESL 009E                    ___awdiv@dividend 0024  
                            i1l1700 05B2                              i1l1710 073C  
                            i1l1702 05B5                              i1l1712 0742  
                            i1l1704 05B7                              i1l1714 0747  
                            i1l1652 0760                              i1l1708 0738  
                            i1l1654 0764                              i1l1656 0768  
                            i1l1680 058B                              i1l1690 05AA  
                            i1l1682 0591                              i1l1738 0727  
                            i1l1692 05AC                              i1l1684 0597  
                            i1l1694 05AD                              i1l1686 0598  
                            i1l1678 0585                              i1l1688 05A7  
                            i1l1696 05AF                              i1l1698 05B1  
                            u150_20 05A7                              u150_21 05A6  
                            u150_25 05A3                              u151_20 073C  
                            u151_21 073B                              u152_20 0742  
                            u152_21 0741                              u148_20 058B  
                            u148_21 058A                              u149_20 0591  
                            u149_21 0590                           ??_Lcd_Cmd 0074  
                            _TMR1IF 0060                    __end_of___xxtofl 0258  
 __end_of_setupExternalInterruption 0780                              ___wmul 060E  
                         ??___awdiv 0026                           ??___awmod 0077  
                         ??___fltol 0020                    ___awdiv@quotient 0029  
                   ___awmod@divisor 0073                     ___awmod@counter 0020  
                  __end_of_setupADC 06FE                           ??_irrigar 0073  
                            saved_w 007E                     Lcd_Set_Cursor@a 0022  
                   Lcd_Set_Cursor@b 0077                     Lcd_Set_Cursor@y 0024  
                   Lcd_Set_Cursor@z 0023                   __end_ofi1_irrigar 076A  
                      ___xxtofl@arg 0035                        ___xxtofl@exp 0034  
                      ___xxtofl@val 002B             __end_of__initialization 0023  
                 __end_of_Lcd_Clear 0756                          ___fltol@f1 0073  
                    __pcstackCOMMON 0070                        __pidataBANK0 076A  
                    _Lcd_Set_Cursor 04BD                      _OPTION_REGbits 0081  
                         ?_Lcd_Init 0070                           ?_Lcd_Port 0070  
                        __pbssBANK0 004A                          __pmaintext 0515  
                _setupNewVolumeFlow 0695                             ?___wmul 0073  
                  handleMenu@volume 0034        __end_of_changeTimerMaxConter 0714  
                        __pintentry 0004                          _handleMenu 0027  
            __end_of_Lcd_Set_Cursor 0515                 ?_setupNewVolumeFlow 002D  
                         ?___xxtofl 002B         __end_of_getADConverterValue 04BD  
                        ??_Lcd_Init 0077                          ??_Lcd_Port 0073  
                        __stringtab 0655                      _Lcd_Write_Char 054E  
                           _Lcd_Cmd 06B4                ??_setupNewVolumeFlow 0079  
                         ?_setupADC 0070                             ___awdiv 0342  
                           ___awmod 0408                             ___fltol 0258  
                   ?_Lcd_Set_Cursor 0077                             __ptext1 05BA  
                           __ptext2 0756                             __ptext3 0463  
                           __ptext4 019C                             __ptext5 0258  
                           __ptext6 0676                             __ptext7 0027  
                           __ptext8 02D4                             __ptext9 0408  
                         _T1CONbits 0010                          ??___xxtofl 002F  
                  ___awmod@dividend 0075                             _irrigar 0756  
            __end_of_Lcd_Write_Char 0585                end_of_initialization 0023  
                        ??_setupADC 0073                           Lcd_Port@a 0073  
                       ?_handleMenu 0070                           _PORTBbits 0006  
                        _setupTimer 06CE                          _setup_menu 004A  
                        _verifyMenu 0676                       ___xxtofl@sign 0033  
                   ?_Lcd_Write_Char 0070                   Lcd_Write_String@a 0022  
                 Lcd_Write_String@i 0020                _changeTimerMaxConter 06FE  
        __end_of_setupWatchdogTimer 077A                       ?_verifySensor 0070  
                         i1_irrigar 0760          ?_setupExternalInterruption 0070  
                         _Lcd_Clear 0749                          _writeValor 02D4  
                    __end_of___wmul 0633                    _Lcd_Write_String 05E5  
               start_initialization 000F               ?_changeTimerMaxConter 002B  
                    ??_verifySensor 0041                          ?i1_irrigar 0070  
                        ?_Lcd_Clear 0070                            ??___wmul 0077  
                        init_fetch0 0714                         __pdataBANK0 0042  
        getADConverterValue@leitura 003D                     Lcd_Write_Char@a 0077  
                   Lcd_Write_Char@y 0076                         ?_setupTimer 0070  
                       __pbssCOMMON 0079                         ?_verifyMenu 0070  
                         ___latbits 0002                       __pcstackBANK0 0020  
                          ?_Lcd_Cmd 0070             _handleTimerInterruption 0585  
                     ??_interrupcao 0071                    ??_Lcd_Set_Cursor 0020  
                 handleMenu@umidade 0036                            ?___awdiv 0022  
                          ?___awmod 0073                            ?___fltol 0073  
                       ?_writeValor 002B                           __pstrings 0655  
                          ?_irrigar 0070              ??_changeTimerMaxConter 0079  
                 interrupt_function 0004                      ___wmul@product 0077  
                          _PIE1bits 008C                         ??i1_irrigar 0070  
                          Lcd_Cmd@a 0076                            _PIR1bits 000C  
                       ??_Lcd_Clear 0077                        ??_handleMenu 0031  
               __end_of_interrupcao 0738                          _ADCON0bits 001F  
                       __stringbase 065A                          _ADCON1bits 009F  
                 ___wmul@multiplier 0073                __end_of_verifySensor 05E5  
                  ??_Lcd_Write_Char 0074                            _Lcd_Init 03AB  
                          _Lcd_Port 0633           ??_handleTimerInterruption 0070  
          __end_of_Lcd_Write_String 060E                  __end_of_handleMenu 019C  
       ??_setupExternalInterruption 0073                  _setupWatchdogTimer 0772  
__end_of_handleExternalInterruption 0749          _handleExternalInterruption 0738  
                __end_of__stringtab 065B                            ___xxtofl 019C  
               ?_setupWatchdogTimer 0070                            __ptext10 04BD  
                          __ptext11 05E5                            __ptext20 077A  
                          __ptext12 054E                            __ptext21 06E7  
                          __ptext13 0749                            __ptext22 03AB  
                          __ptext14 0772                            __ptext23 06B4  
                          __ptext15 06CE                            __ptext24 0633  
                          __ptext16 0695                            __ptext25 0727  
                          __ptext17 06FE                            __ptext26 0585  
                          __ptext18 0342                            __ptext27 0738  
                          __ptext19 060E                            __ptext28 0760  
        changeTimerMaxConter@mili_s 002B                ??_setupWatchdogTimer 0073  
                          _setupADC 06E7                         _interrupcao 0727  
   __end_of_handleTimerInterruption 05BA                      _umidade_minima 0046  
                     _timer_counter 004C                        ??_setupTimer 0079  
                        _INTCONbits 000B                        ??_verifyMenu 0038  
         _setupExternalInterruption 077A                            init_ram0 0718  
                Lcd_Write_Char@temp 0075                            intlevel1 0000  
                __end_of_setupTimer 06E7                           stringcode 0655  
                __end_of_verifyMenu 0695                        ??_writeValor 002D  
                Lcd_Set_Cursor@temp 0025                 _getADConverterValue 0463  
                          stringdir 0655                            stringtab 0655  
                      _water_volume 0044                ?_getADConverterValue 0039  
                __end_of_writeValor 0342                        _verifySensor 05BA  
